/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/chat"],{

/***/ "./node_modules/@nats-io/nats-core/lib/authenticator.js":
/*!**************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/authenticator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.multiAuthenticator = multiAuthenticator;\nexports.noAuthFn = noAuthFn;\nexports.usernamePasswordAuthenticator = usernamePasswordAuthenticator;\nexports.tokenAuthenticator = tokenAuthenticator;\nexports.nkeyAuthenticator = nkeyAuthenticator;\nexports.jwtAuthenticator = jwtAuthenticator;\nexports.credsAuthenticator = credsAuthenticator;\n/*\n * Copyright 2020-2023 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst nkeys_1 = __webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nats-core/lib/nkeys.js\");\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nfunction multiAuthenticator(authenticators) {\n    return (nonce) => {\n        let auth = {};\n        authenticators.forEach((a) => {\n            const args = a(nonce) || {};\n            auth = Object.assign(auth, args);\n        });\n        return auth;\n    };\n}\nfunction noAuthFn() {\n    return () => {\n        return;\n    };\n}\n/**\n * Returns a user/pass authenticator for the specified user and optional password\n * @param { string | () => string } user\n * @param {string | () => string } pass\n * @return {UserPass}\n */\nfunction usernamePasswordAuthenticator(user, pass) {\n    return () => {\n        const u = typeof user === \"function\" ? user() : user;\n        const p = typeof pass === \"function\" ? pass() : pass;\n        return { user: u, pass: p };\n    };\n}\n/**\n * Returns a token authenticator for the specified token\n * @param { string | () => string } token\n * @return {TokenAuth}\n */\nfunction tokenAuthenticator(token) {\n    return () => {\n        const auth_token = typeof token === \"function\" ? token() : token;\n        return { auth_token };\n    };\n}\n/**\n * Returns an Authenticator that returns a NKeyAuth based that uses the\n * specified seed or function returning a seed.\n * @param {Uint8Array | (() => Uint8Array)} seed - the nkey seed\n * @return {NKeyAuth}\n */\nfunction nkeyAuthenticator(seed) {\n    return (nonce) => {\n        const s = typeof seed === \"function\" ? seed() : seed;\n        const kp = s ? nkeys_1.nkeys.fromSeed(s) : undefined;\n        const nkey = kp ? kp.getPublicKey() : \"\";\n        const challenge = encoders_1.TE.encode(nonce || \"\");\n        const sigBytes = kp !== undefined && nonce ? kp.sign(challenge) : undefined;\n        const sig = sigBytes ? nkeys_1.nkeys.encode(sigBytes) : \"\";\n        return { nkey, sig };\n    };\n}\n/**\n * Returns an Authenticator function that returns a JwtAuth.\n * If a seed is provided, the public key, and signature are\n * calculated.\n *\n * @param {string | ()=>string} ajwt - the jwt\n * @param {Uint8Array | ()=> Uint8Array } seed - the optional nkey seed\n * @return {Authenticator}\n */\nfunction jwtAuthenticator(ajwt, seed) {\n    return (nonce) => {\n        const jwt = typeof ajwt === \"function\" ? ajwt() : ajwt;\n        const fn = nkeyAuthenticator(seed);\n        const { nkey, sig } = fn(nonce);\n        return { jwt, nkey, sig };\n    };\n}\n/**\n * Returns an Authenticator function that returns a JwtAuth.\n * This is a convenience Authenticator that parses the\n * specified creds and delegates to the jwtAuthenticator.\n * @param {Uint8Array | () => Uint8Array } creds - the contents of a creds file or a function that returns the creds\n * @returns {JwtAuth}\n */\nfunction credsAuthenticator(creds) {\n    const fn = typeof creds !== \"function\" ? () => creds : creds;\n    const parse = () => {\n        const CREDS = /\\s*(?:(?:[-]{3,}[^\\n]*[-]{3,}\\n)(.+)(?:\\n\\s*[-]{3,}[^\\n]*[-]{3,}\\n))/ig;\n        const s = encoders_1.TD.decode(fn());\n        // get the JWT\n        let m = CREDS.exec(s);\n        if (!m) {\n            throw new Error(\"unable to parse credentials\");\n        }\n        const jwt = m[1].trim();\n        // get the nkey\n        m = CREDS.exec(s);\n        if (!m) {\n            throw new Error(\"unable to parse credentials\");\n        }\n        const seed = encoders_1.TE.encode(m[1].trim());\n        return { jwt, seed };\n    };\n    const jwtFn = () => {\n        const { jwt } = parse();\n        return jwt;\n    };\n    const nkeyFn = () => {\n        const { seed } = parse();\n        return seed;\n    };\n    return jwtAuthenticator(jwtFn, nkeyFn);\n}\n//# sourceMappingURL=authenticator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/authenticator.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/base64.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Base64UrlPaddedCodec = exports.Base64UrlCodec = exports.Base64Codec = void 0;\nclass Base64Codec {\n    static encode(bytes) {\n        if (typeof bytes === \"string\") {\n            return btoa(bytes);\n        }\n        const a = Array.from(bytes);\n        return btoa(String.fromCharCode(...a));\n    }\n    static decode(s, binary = false) {\n        const bin = atob(s);\n        if (!binary) {\n            return bin;\n        }\n        return Uint8Array.from(bin, (c) => c.charCodeAt(0));\n    }\n}\nexports.Base64Codec = Base64Codec;\nclass Base64UrlCodec {\n    static encode(bytes) {\n        return Base64UrlCodec.toB64URLEncoding(Base64Codec.encode(bytes));\n    }\n    static decode(s, binary = false) {\n        return Base64Codec.decode(Base64UrlCodec.fromB64URLEncoding(s), binary);\n    }\n    static toB64URLEncoding(b64str) {\n        return b64str\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n    static fromB64URLEncoding(b64str) {\n        // pads are % 4, but not necessary on decoding\n        return b64str\n            .replace(/_/g, \"/\")\n            .replace(/-/g, \"+\");\n    }\n}\nexports.Base64UrlCodec = Base64UrlCodec;\nclass Base64UrlPaddedCodec {\n    static encode(bytes) {\n        return Base64UrlPaddedCodec.toB64URLEncoding(Base64Codec.encode(bytes));\n    }\n    static decode(s, binary = false) {\n        return Base64UrlPaddedCodec.decode(Base64UrlPaddedCodec.fromB64URLEncoding(s), binary);\n    }\n    static toB64URLEncoding(b64str) {\n        return b64str\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n    static fromB64URLEncoding(b64str) {\n        // pads are % 4, but not necessary on decoding\n        return b64str\n            .replace(/_/g, \"/\")\n            .replace(/-/g, \"+\");\n    }\n}\nexports.Base64UrlPaddedCodec = Base64UrlPaddedCodec;\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9iYXNlNjQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsc0JBQXNCLEdBQUcsbUJBQW1CO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvYmFzZTY0LmpzPzZkZDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJhc2U2NFVybFBhZGRlZENvZGVjID0gZXhwb3J0cy5CYXNlNjRVcmxDb2RlYyA9IGV4cG9ydHMuQmFzZTY0Q29kZWMgPSB2b2lkIDA7XG5jbGFzcyBCYXNlNjRDb2RlYyB7XG4gICAgc3RhdGljIGVuY29kZShieXRlcykge1xuICAgICAgICBpZiAodHlwZW9mIGJ5dGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gYnRvYShieXRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYSA9IEFycmF5LmZyb20oYnl0ZXMpO1xuICAgICAgICByZXR1cm4gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlKC4uLmEpKTtcbiAgICB9XG4gICAgc3RhdGljIGRlY29kZShzLCBiaW5hcnkgPSBmYWxzZSkge1xuICAgICAgICBjb25zdCBiaW4gPSBhdG9iKHMpO1xuICAgICAgICBpZiAoIWJpbmFyeSkge1xuICAgICAgICAgICAgcmV0dXJuIGJpbjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKGJpbiwgKGMpID0+IGMuY2hhckNvZGVBdCgwKSk7XG4gICAgfVxufVxuZXhwb3J0cy5CYXNlNjRDb2RlYyA9IEJhc2U2NENvZGVjO1xuY2xhc3MgQmFzZTY0VXJsQ29kZWMge1xuICAgIHN0YXRpYyBlbmNvZGUoYnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIEJhc2U2NFVybENvZGVjLnRvQjY0VVJMRW5jb2RpbmcoQmFzZTY0Q29kZWMuZW5jb2RlKGJ5dGVzKSk7XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGUocywgYmluYXJ5ID0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIEJhc2U2NENvZGVjLmRlY29kZShCYXNlNjRVcmxDb2RlYy5mcm9tQjY0VVJMRW5jb2RpbmcocyksIGJpbmFyeSk7XG4gICAgfVxuICAgIHN0YXRpYyB0b0I2NFVSTEVuY29kaW5nKGI2NHN0cikge1xuICAgICAgICByZXR1cm4gYjY0c3RyXG4gICAgICAgICAgICAucmVwbGFjZSgvPS9nLCBcIlwiKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCBcIi1cIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXC8vZywgXCJfXCIpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUI2NFVSTEVuY29kaW5nKGI2NHN0cikge1xuICAgICAgICAvLyBwYWRzIGFyZSAlIDQsIGJ1dCBub3QgbmVjZXNzYXJ5IG9uIGRlY29kaW5nXG4gICAgICAgIHJldHVybiBiNjRzdHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9fL2csIFwiL1wiKVxuICAgICAgICAgICAgLnJlcGxhY2UoLy0vZywgXCIrXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuQmFzZTY0VXJsQ29kZWMgPSBCYXNlNjRVcmxDb2RlYztcbmNsYXNzIEJhc2U2NFVybFBhZGRlZENvZGVjIHtcbiAgICBzdGF0aWMgZW5jb2RlKGJ5dGVzKSB7XG4gICAgICAgIHJldHVybiBCYXNlNjRVcmxQYWRkZWRDb2RlYy50b0I2NFVSTEVuY29kaW5nKEJhc2U2NENvZGVjLmVuY29kZShieXRlcykpO1xuICAgIH1cbiAgICBzdGF0aWMgZGVjb2RlKHMsIGJpbmFyeSA9IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBCYXNlNjRVcmxQYWRkZWRDb2RlYy5kZWNvZGUoQmFzZTY0VXJsUGFkZGVkQ29kZWMuZnJvbUI2NFVSTEVuY29kaW5nKHMpLCBiaW5hcnkpO1xuICAgIH1cbiAgICBzdGF0aWMgdG9CNjRVUkxFbmNvZGluZyhiNjRzdHIpIHtcbiAgICAgICAgcmV0dXJuIGI2NHN0clxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCBcIi1cIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXC8vZywgXCJfXCIpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUI2NFVSTEVuY29kaW5nKGI2NHN0cikge1xuICAgICAgICAvLyBwYWRzIGFyZSAlIDQsIGJ1dCBub3QgbmVjZXNzYXJ5IG9uIGRlY29kaW5nXG4gICAgICAgIHJldHVybiBiNjRzdHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9fL2csIFwiL1wiKVxuICAgICAgICAgICAgLnJlcGxhY2UoLy0vZywgXCIrXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuQmFzZTY0VXJsUGFkZGVkQ29kZWMgPSBCYXNlNjRVcmxQYWRkZWRDb2RlYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/base64.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/bench.js":
/*!******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/bench.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2020-2022 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bench = exports.Metric = void 0;\nexports.throughput = throughput;\nexports.msgThroughput = msgThroughput;\nexports.humanizeBytes = humanizeBytes;\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@nats-io/nats-core/lib/types.js\");\nconst nuid_1 = __webpack_require__(/*! ./nuid */ \"./node_modules/@nats-io/nats-core/lib/nuid.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nclass Metric {\n    name;\n    duration;\n    date;\n    payload;\n    msgs;\n    lang;\n    version;\n    bytes;\n    asyncRequests;\n    min;\n    max;\n    constructor(name, duration) {\n        this.name = name;\n        this.duration = duration;\n        this.date = Date.now();\n        this.payload = 0;\n        this.msgs = 0;\n        this.bytes = 0;\n    }\n    toString() {\n        const sec = (this.duration) / 1000;\n        const mps = Math.round(this.msgs / sec);\n        const label = this.asyncRequests ? \"asyncRequests\" : \"\";\n        let minmax = \"\";\n        if (this.max) {\n            minmax = `${this.min}/${this.max}`;\n        }\n        return `${this.name}${label ? \" [asyncRequests]\" : \"\"} ${humanizeNumber(mps)} msgs/sec - [${sec.toFixed(2)} secs] ~ ${throughput(this.bytes, sec)} ${minmax}`;\n    }\n    toCsv() {\n        return `\"${this.name}\",${new Date(this.date).toISOString()},${this.lang},${this.version},${this.msgs},${this.payload},${this.bytes},${this.duration},${this.asyncRequests ? this.asyncRequests : false}\\n`;\n    }\n    static header() {\n        return `Test,Date,Lang,Version,Count,MsgPayload,Bytes,Millis,Async\\n`;\n    }\n}\nexports.Metric = Metric;\nclass Bench {\n    nc;\n    callbacks;\n    msgs;\n    size;\n    subject;\n    asyncRequests;\n    pub;\n    sub;\n    req;\n    rep;\n    perf;\n    payload;\n    constructor(nc, opts = {\n        msgs: 100000,\n        size: 128,\n        subject: \"\",\n        asyncRequests: false,\n        pub: false,\n        sub: false,\n        req: false,\n        rep: false,\n    }) {\n        this.nc = nc;\n        this.callbacks = opts.callbacks || false;\n        this.msgs = opts.msgs || 0;\n        this.size = opts.size || 0;\n        this.subject = opts.subject || nuid_1.nuid.next();\n        this.asyncRequests = opts.asyncRequests || false;\n        this.pub = opts.pub || false;\n        this.sub = opts.sub || false;\n        this.req = opts.req || false;\n        this.rep = opts.rep || false;\n        this.perf = new util_1.Perf();\n        this.payload = this.size ? new Uint8Array(this.size) : types_1.Empty;\n        if (!this.pub && !this.sub && !this.req && !this.rep) {\n            throw new Error(\"no options selected\");\n        }\n    }\n    async run() {\n        this.nc.closed()\n            .then((err) => {\n            if (err) {\n                throw err;\n            }\n        });\n        if (this.callbacks) {\n            await this.runCallbacks();\n        }\n        else {\n            await this.runAsync();\n        }\n        return this.processMetrics();\n    }\n    processMetrics() {\n        const nc = this.nc;\n        const { lang, version } = nc.protocol.transport;\n        if (this.pub && this.sub) {\n            this.perf.measure(\"pubsub\", \"pubStart\", \"subStop\");\n        }\n        if (this.req && this.rep) {\n            this.perf.measure(\"reqrep\", \"reqStart\", \"reqStop\");\n        }\n        const measures = this.perf.getEntries();\n        const pubsub = measures.find((m) => m.name === \"pubsub\");\n        const reqrep = measures.find((m) => m.name === \"reqrep\");\n        const req = measures.find((m) => m.name === \"req\");\n        const rep = measures.find((m) => m.name === \"rep\");\n        const pub = measures.find((m) => m.name === \"pub\");\n        const sub = measures.find((m) => m.name === \"sub\");\n        const stats = this.nc.stats();\n        const metrics = [];\n        if (pubsub) {\n            const { name, duration } = pubsub;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs * 2;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (reqrep) {\n            const { name, duration } = reqrep;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs * 2;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (pub) {\n            const { name, duration } = pub;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (sub) {\n            const { name, duration } = sub;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.inBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (rep) {\n            const { name, duration } = rep;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (req) {\n            const { name, duration } = req;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        return metrics;\n    }\n    async runCallbacks() {\n        const jobs = [];\n        if (this.sub) {\n            const d = (0, util_1.deferred)();\n            jobs.push(d);\n            let i = 0;\n            this.nc.subscribe(this.subject, {\n                max: this.msgs,\n                callback: () => {\n                    i++;\n                    if (i === 1) {\n                        this.perf.mark(\"subStart\");\n                    }\n                    if (i === this.msgs) {\n                        this.perf.mark(\"subStop\");\n                        this.perf.measure(\"sub\", \"subStart\", \"subStop\");\n                        d.resolve();\n                    }\n                },\n            });\n        }\n        if (this.rep) {\n            const d = (0, util_1.deferred)();\n            jobs.push(d);\n            let i = 0;\n            this.nc.subscribe(this.subject, {\n                max: this.msgs,\n                callback: (_, m) => {\n                    m.respond(this.payload);\n                    i++;\n                    if (i === 1) {\n                        this.perf.mark(\"repStart\");\n                    }\n                    if (i === this.msgs) {\n                        this.perf.mark(\"repStop\");\n                        this.perf.measure(\"rep\", \"repStart\", \"repStop\");\n                        d.resolve();\n                    }\n                },\n            });\n        }\n        if (this.pub) {\n            const job = (async () => {\n                this.perf.mark(\"pubStart\");\n                for (let i = 0; i < this.msgs; i++) {\n                    this.nc.publish(this.subject, this.payload);\n                }\n                await this.nc.flush();\n                this.perf.mark(\"pubStop\");\n                this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.req) {\n            const job = (async () => {\n                if (this.asyncRequests) {\n                    this.perf.mark(\"reqStart\");\n                    const a = [];\n                    for (let i = 0; i < this.msgs; i++) {\n                        a.push(this.nc.request(this.subject, this.payload, { timeout: 20000 }));\n                    }\n                    await Promise.all(a);\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                }\n                else {\n                    this.perf.mark(\"reqStart\");\n                    for (let i = 0; i < this.msgs; i++) {\n                        await this.nc.request(this.subject);\n                    }\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                }\n            })();\n            jobs.push(job);\n        }\n        await Promise.all(jobs);\n    }\n    async runAsync() {\n        const jobs = [];\n        if (this.rep) {\n            let first = false;\n            const sub = this.nc.subscribe(this.subject, { max: this.msgs });\n            const job = (async () => {\n                for await (const m of sub) {\n                    if (!first) {\n                        this.perf.mark(\"repStart\");\n                        first = true;\n                    }\n                    m.respond(this.payload);\n                }\n                await this.nc.flush();\n                this.perf.mark(\"repStop\");\n                this.perf.measure(\"rep\", \"repStart\", \"repStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.sub) {\n            let first = false;\n            const sub = this.nc.subscribe(this.subject, { max: this.msgs });\n            const job = (async () => {\n                for await (const _m of sub) {\n                    if (!first) {\n                        this.perf.mark(\"subStart\");\n                        first = true;\n                    }\n                }\n                this.perf.mark(\"subStop\");\n                this.perf.measure(\"sub\", \"subStart\", \"subStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.pub) {\n            const job = (async () => {\n                this.perf.mark(\"pubStart\");\n                for (let i = 0; i < this.msgs; i++) {\n                    this.nc.publish(this.subject, this.payload);\n                }\n                await this.nc.flush();\n                this.perf.mark(\"pubStop\");\n                this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.req) {\n            const job = (async () => {\n                if (this.asyncRequests) {\n                    this.perf.mark(\"reqStart\");\n                    const a = [];\n                    for (let i = 0; i < this.msgs; i++) {\n                        a.push(this.nc.request(this.subject, this.payload, { timeout: 20000 }));\n                    }\n                    await Promise.all(a);\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                }\n                else {\n                    this.perf.mark(\"reqStart\");\n                    for (let i = 0; i < this.msgs; i++) {\n                        await this.nc.request(this.subject);\n                    }\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                }\n            })();\n            jobs.push(job);\n        }\n        await Promise.all(jobs);\n    }\n}\nexports.Bench = Bench;\nfunction throughput(bytes, seconds) {\n    return `${humanizeBytes(bytes / seconds)}/sec`;\n}\nfunction msgThroughput(msgs, seconds) {\n    return `${(Math.floor(msgs / seconds))} msgs/sec`;\n}\nfunction humanizeBytes(bytes, si = false) {\n    const base = si ? 1000 : 1024;\n    const pre = si\n        ? [\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"]\n        : [\"K\", \"M\", \"G\", \"T\", \"P\", \"E\"];\n    const post = si ? \"iB\" : \"B\";\n    if (bytes < base) {\n        return `${bytes.toFixed(2)} ${post}`;\n    }\n    const exp = parseInt(Math.log(bytes) / Math.log(base) + \"\");\n    const index = parseInt((exp - 1) + \"\");\n    return `${(bytes / Math.pow(base, exp)).toFixed(2)} ${pre[index]}${post}`;\n}\nfunction humanizeNumber(n) {\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n//# sourceMappingURL=bench.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/bench.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/core.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/core.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2023 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_HOST = exports.DEFAULT_PORT = exports.Match = void 0;\nexports.syncIterator = syncIterator;\nexports.createInbox = createInbox;\nconst nuid_1 = __webpack_require__(/*! ./nuid */ \"./node_modules/@nats-io/nats-core/lib/nuid.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nvar Match;\n(function (Match) {\n    // Exact option is case sensitive\n    Match[Match[\"Exact\"] = 0] = \"Exact\";\n    // Case sensitive, but key is transformed to Canonical MIME representation\n    Match[Match[\"CanonicalMIME\"] = 1] = \"CanonicalMIME\";\n    // Case insensitive matches\n    Match[Match[\"IgnoreCase\"] = 2] = \"IgnoreCase\";\n})(Match || (exports.Match = Match = {}));\n/**\n * syncIterator is a utility function that allows an AsyncIterator to be triggered\n * by calling next() - the utility will yield null if the underlying iterator is closed.\n * Note it is possibly an error to call use this function on an AsyncIterable that has\n * already been started (Symbol.asyncIterator() has been called) from a looping construct.\n */\nfunction syncIterator(src) {\n    const iter = src[Symbol.asyncIterator]();\n    return {\n        async next() {\n            const m = await iter.next();\n            if (m.done) {\n                return Promise.resolve(null);\n            }\n            return Promise.resolve(m.value);\n        },\n    };\n}\nfunction createInbox(prefix = \"\") {\n    prefix = prefix || \"_INBOX\";\n    if (typeof prefix !== \"string\") {\n        throw (new TypeError(\"prefix must be a string\"));\n    }\n    prefix.split(\".\")\n        .forEach((v) => {\n        if (v === \"*\" || v === \">\") {\n            throw errors_1.InvalidArgumentError.format(\"prefix\", `cannot have wildcards ('${prefix}')`);\n        }\n    });\n    return `${prefix}.${nuid_1.nuid.next()}`;\n}\nexports.DEFAULT_PORT = 4222;\nexports.DEFAULT_HOST = \"127.0.0.1\";\n//# sourceMappingURL=core.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9jb3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyxvQkFBb0IsR0FBRyxhQUFhO0FBQzNELG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIsZUFBZSxtQkFBTyxDQUFDLDZEQUFRO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLGlFQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLFlBQVksYUFBYSxhQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRGQUE0RixPQUFPO0FBQ25HO0FBQ0EsS0FBSztBQUNMLGNBQWMsT0FBTyxHQUFHLG1CQUFtQjtBQUMzQztBQUNBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvY29yZS5qcz9iMmVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDIzIFRoZSBOQVRTIEF1dGhvcnNcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFRkFVTFRfSE9TVCA9IGV4cG9ydHMuREVGQVVMVF9QT1JUID0gZXhwb3J0cy5NYXRjaCA9IHZvaWQgMDtcbmV4cG9ydHMuc3luY0l0ZXJhdG9yID0gc3luY0l0ZXJhdG9yO1xuZXhwb3J0cy5jcmVhdGVJbmJveCA9IGNyZWF0ZUluYm94O1xuY29uc3QgbnVpZF8xID0gcmVxdWlyZShcIi4vbnVpZFwiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xudmFyIE1hdGNoO1xuKGZ1bmN0aW9uIChNYXRjaCkge1xuICAgIC8vIEV4YWN0IG9wdGlvbiBpcyBjYXNlIHNlbnNpdGl2ZVxuICAgIE1hdGNoW01hdGNoW1wiRXhhY3RcIl0gPSAwXSA9IFwiRXhhY3RcIjtcbiAgICAvLyBDYXNlIHNlbnNpdGl2ZSwgYnV0IGtleSBpcyB0cmFuc2Zvcm1lZCB0byBDYW5vbmljYWwgTUlNRSByZXByZXNlbnRhdGlvblxuICAgIE1hdGNoW01hdGNoW1wiQ2Fub25pY2FsTUlNRVwiXSA9IDFdID0gXCJDYW5vbmljYWxNSU1FXCI7XG4gICAgLy8gQ2FzZSBpbnNlbnNpdGl2ZSBtYXRjaGVzXG4gICAgTWF0Y2hbTWF0Y2hbXCJJZ25vcmVDYXNlXCJdID0gMl0gPSBcIklnbm9yZUNhc2VcIjtcbn0pKE1hdGNoIHx8IChleHBvcnRzLk1hdGNoID0gTWF0Y2ggPSB7fSkpO1xuLyoqXG4gKiBzeW5jSXRlcmF0b3IgaXMgYSB1dGlsaXR5IGZ1bmN0aW9uIHRoYXQgYWxsb3dzIGFuIEFzeW5jSXRlcmF0b3IgdG8gYmUgdHJpZ2dlcmVkXG4gKiBieSBjYWxsaW5nIG5leHQoKSAtIHRoZSB1dGlsaXR5IHdpbGwgeWllbGQgbnVsbCBpZiB0aGUgdW5kZXJseWluZyBpdGVyYXRvciBpcyBjbG9zZWQuXG4gKiBOb3RlIGl0IGlzIHBvc3NpYmx5IGFuIGVycm9yIHRvIGNhbGwgdXNlIHRoaXMgZnVuY3Rpb24gb24gYW4gQXN5bmNJdGVyYWJsZSB0aGF0IGhhc1xuICogYWxyZWFkeSBiZWVuIHN0YXJ0ZWQgKFN5bWJvbC5hc3luY0l0ZXJhdG9yKCkgaGFzIGJlZW4gY2FsbGVkKSBmcm9tIGEgbG9vcGluZyBjb25zdHJ1Y3QuXG4gKi9cbmZ1bmN0aW9uIHN5bmNJdGVyYXRvcihzcmMpIHtcbiAgICBjb25zdCBpdGVyID0gc3JjW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIG5leHQoKSB7XG4gICAgICAgICAgICBjb25zdCBtID0gYXdhaXQgaXRlci5uZXh0KCk7XG4gICAgICAgICAgICBpZiAobS5kb25lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobS52YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUluYm94KHByZWZpeCA9IFwiXCIpIHtcbiAgICBwcmVmaXggPSBwcmVmaXggfHwgXCJfSU5CT1hcIjtcbiAgICBpZiAodHlwZW9mIHByZWZpeCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyAobmV3IFR5cGVFcnJvcihcInByZWZpeCBtdXN0IGJlIGEgc3RyaW5nXCIpKTtcbiAgICB9XG4gICAgcHJlZml4LnNwbGl0KFwiLlwiKVxuICAgICAgICAuZm9yRWFjaCgodikgPT4ge1xuICAgICAgICBpZiAodiA9PT0gXCIqXCIgfHwgdiA9PT0gXCI+XCIpIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yc18xLkludmFsaWRBcmd1bWVudEVycm9yLmZvcm1hdChcInByZWZpeFwiLCBgY2Fubm90IGhhdmUgd2lsZGNhcmRzICgnJHtwcmVmaXh9JylgKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBgJHtwcmVmaXh9LiR7bnVpZF8xLm51aWQubmV4dCgpfWA7XG59XG5leHBvcnRzLkRFRkFVTFRfUE9SVCA9IDQyMjI7XG5leHBvcnRzLkRFRkFVTFRfSE9TVCA9IFwiMTI3LjAuMC4xXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb3JlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/core.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/databuffer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/databuffer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2018-2021 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DataBuffer = void 0;\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nclass DataBuffer {\n    buffers;\n    byteLength;\n    constructor() {\n        this.buffers = [];\n        this.byteLength = 0;\n    }\n    static concat(...bufs) {\n        let max = 0;\n        for (let i = 0; i < bufs.length; i++) {\n            max += bufs[i].length;\n        }\n        const out = new Uint8Array(max);\n        let index = 0;\n        for (let i = 0; i < bufs.length; i++) {\n            out.set(bufs[i], index);\n            index += bufs[i].length;\n        }\n        return out;\n    }\n    static fromAscii(m) {\n        if (!m) {\n            m = \"\";\n        }\n        return encoders_1.TE.encode(m);\n    }\n    static toAscii(a) {\n        return encoders_1.TD.decode(a);\n    }\n    reset() {\n        this.buffers.length = 0;\n        this.byteLength = 0;\n    }\n    pack() {\n        if (this.buffers.length > 1) {\n            const v = new Uint8Array(this.byteLength);\n            let index = 0;\n            for (let i = 0; i < this.buffers.length; i++) {\n                v.set(this.buffers[i], index);\n                index += this.buffers[i].length;\n            }\n            this.buffers.length = 0;\n            this.buffers.push(v);\n        }\n    }\n    shift() {\n        if (this.buffers.length) {\n            const a = this.buffers.shift();\n            if (a) {\n                this.byteLength -= a.length;\n                return a;\n            }\n        }\n        return new Uint8Array(0);\n    }\n    drain(n) {\n        if (this.buffers.length) {\n            this.pack();\n            const v = this.buffers.pop();\n            if (v) {\n                const max = this.byteLength;\n                if (n === undefined || n > max) {\n                    n = max;\n                }\n                const d = v.subarray(0, n);\n                if (max > n) {\n                    this.buffers.push(v.subarray(n));\n                }\n                this.byteLength = max - n;\n                return d;\n            }\n        }\n        return new Uint8Array(0);\n    }\n    fill(a, ...bufs) {\n        if (a) {\n            this.buffers.push(a);\n            this.byteLength += a.length;\n        }\n        for (let i = 0; i < bufs.length; i++) {\n            if (bufs[i] && bufs[i].length) {\n                this.buffers.push(bufs[i]);\n                this.byteLength += bufs[i].length;\n            }\n        }\n    }\n    peek() {\n        if (this.buffers.length) {\n            this.pack();\n            return this.buffers[0];\n        }\n        return new Uint8Array(0);\n    }\n    size() {\n        return this.byteLength;\n    }\n    length() {\n        return this.buffers.length;\n    }\n}\nexports.DataBuffer = DataBuffer;\n//# sourceMappingURL=databuffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9kYXRhYnVmZmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsbUJBQW1CLG1CQUFPLENBQUMscUVBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpQkFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIseUJBQXlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsaUJBQWlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvZGF0YWJ1ZmZlci5qcz9jZGU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDE4LTIwMjEgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGF0YUJ1ZmZlciA9IHZvaWQgMDtcbmNvbnN0IGVuY29kZXJzXzEgPSByZXF1aXJlKFwiLi9lbmNvZGVyc1wiKTtcbmNsYXNzIERhdGFCdWZmZXIge1xuICAgIGJ1ZmZlcnM7XG4gICAgYnl0ZUxlbmd0aDtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5idWZmZXJzID0gW107XG4gICAgICAgIHRoaXMuYnl0ZUxlbmd0aCA9IDA7XG4gICAgfVxuICAgIHN0YXRpYyBjb25jYXQoLi4uYnVmcykge1xuICAgICAgICBsZXQgbWF4ID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidWZzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBtYXggKz0gYnVmc1tpXS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkobWF4KTtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidWZzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBvdXQuc2V0KGJ1ZnNbaV0sIGluZGV4KTtcbiAgICAgICAgICAgIGluZGV4ICs9IGJ1ZnNbaV0ubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQXNjaWkobSkge1xuICAgICAgICBpZiAoIW0pIHtcbiAgICAgICAgICAgIG0gPSBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbmNvZGVyc18xLlRFLmVuY29kZShtKTtcbiAgICB9XG4gICAgc3RhdGljIHRvQXNjaWkoYSkge1xuICAgICAgICByZXR1cm4gZW5jb2RlcnNfMS5URC5kZWNvZGUoYSk7XG4gICAgfVxuICAgIHJlc2V0KCkge1xuICAgICAgICB0aGlzLmJ1ZmZlcnMubGVuZ3RoID0gMDtcbiAgICAgICAgdGhpcy5ieXRlTGVuZ3RoID0gMDtcbiAgICB9XG4gICAgcGFjaygpIHtcbiAgICAgICAgaWYgKHRoaXMuYnVmZmVycy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICBjb25zdCB2ID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5ieXRlTGVuZ3RoKTtcbiAgICAgICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYnVmZmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHYuc2V0KHRoaXMuYnVmZmVyc1tpXSwgaW5kZXgpO1xuICAgICAgICAgICAgICAgIGluZGV4ICs9IHRoaXMuYnVmZmVyc1tpXS5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmJ1ZmZlcnMubGVuZ3RoID0gMDtcbiAgICAgICAgICAgIHRoaXMuYnVmZmVycy5wdXNoKHYpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNoaWZ0KCkge1xuICAgICAgICBpZiAodGhpcy5idWZmZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgYSA9IHRoaXMuYnVmZmVycy5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKGEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVMZW5ndGggLT0gYS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KDApO1xuICAgIH1cbiAgICBkcmFpbihuKSB7XG4gICAgICAgIGlmICh0aGlzLmJ1ZmZlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLnBhY2soKTtcbiAgICAgICAgICAgIGNvbnN0IHYgPSB0aGlzLmJ1ZmZlcnMucG9wKCk7XG4gICAgICAgICAgICBpZiAodikge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1heCA9IHRoaXMuYnl0ZUxlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAobiA9PT0gdW5kZWZpbmVkIHx8IG4gPiBtYXgpIHtcbiAgICAgICAgICAgICAgICAgICAgbiA9IG1heDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZCA9IHYuc3ViYXJyYXkoMCwgbik7XG4gICAgICAgICAgICAgICAgaWYgKG1heCA+IG4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idWZmZXJzLnB1c2godi5zdWJhcnJheShuKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuYnl0ZUxlbmd0aCA9IG1heCAtIG47XG4gICAgICAgICAgICAgICAgcmV0dXJuIGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KDApO1xuICAgIH1cbiAgICBmaWxsKGEsIC4uLmJ1ZnMpIHtcbiAgICAgICAgaWYgKGEpIHtcbiAgICAgICAgICAgIHRoaXMuYnVmZmVycy5wdXNoKGEpO1xuICAgICAgICAgICAgdGhpcy5ieXRlTGVuZ3RoICs9IGEubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGJ1ZnNbaV0gJiYgYnVmc1tpXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmJ1ZmZlcnMucHVzaChidWZzW2ldKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVMZW5ndGggKz0gYnVmc1tpXS5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGVlaygpIHtcbiAgICAgICAgaWYgKHRoaXMuYnVmZmVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMucGFjaygpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyc1swXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCk7XG4gICAgfVxuICAgIHNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ5dGVMZW5ndGg7XG4gICAgfVxuICAgIGxlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVycy5sZW5ndGg7XG4gICAgfVxufVxuZXhwb3J0cy5EYXRhQnVmZmVyID0gRGF0YUJ1ZmZlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGFidWZmZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/databuffer.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/denobuffer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/denobuffer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DenoBuffer = exports.MAX_SIZE = exports.AssertionError = void 0;\nexports.assert = assert;\nexports.concat = concat;\nexports.append = append;\nexports.readAll = readAll;\nexports.writeAll = writeAll;\n// This code has been ported almost directly from Go's src/bytes/buffer.go\n// Copyright 2009 The Go Authors. All rights reserved. BSD license.\n// https://github.com/golang/go/blob/master/LICENSE\n// This code removes all Deno specific functionality to enable its use\n// in a browser environment\n//@internal\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nclass AssertionError extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = \"AssertionError\";\n    }\n}\nexports.AssertionError = AssertionError;\n// @internal\nfunction assert(cond, msg = \"Assertion failed.\") {\n    if (!cond) {\n        throw new AssertionError(msg);\n    }\n}\n// MIN_READ is the minimum ArrayBuffer size passed to a read call by\n// buffer.ReadFrom. As long as the Buffer has at least MIN_READ bytes beyond\n// what is required to hold the contents of r, readFrom() will not grow the\n// underlying buffer.\nconst MIN_READ = 32 * 1024;\nexports.MAX_SIZE = 2 ** 32 - 2;\n// `off` is the offset into `dst` where it will at which to begin writing values\n// from `src`.\n// Returns the number of bytes copied.\nfunction copy(src, dst, off = 0) {\n    const r = dst.byteLength - off;\n    if (src.byteLength > r) {\n        src = src.subarray(0, r);\n    }\n    dst.set(src, off);\n    return src.byteLength;\n}\nfunction concat(origin, b) {\n    if (origin === undefined && b === undefined) {\n        return new Uint8Array(0);\n    }\n    if (origin === undefined) {\n        return b;\n    }\n    if (b === undefined) {\n        return origin;\n    }\n    const output = new Uint8Array(origin.length + b.length);\n    output.set(origin, 0);\n    output.set(b, origin.length);\n    return output;\n}\nfunction append(origin, b) {\n    return concat(origin, Uint8Array.of(b));\n}\nclass DenoBuffer {\n    _buf; // contents are the bytes _buf[off : len(_buf)]\n    _off; // read at _buf[off], write at _buf[_buf.byteLength]\n    constructor(ab) {\n        this._off = 0;\n        if (ab == null) {\n            this._buf = new Uint8Array(0);\n            return;\n        }\n        this._buf = new Uint8Array(ab);\n    }\n    bytes(options = { copy: true }) {\n        if (options.copy === false)\n            return this._buf.subarray(this._off);\n        return this._buf.slice(this._off);\n    }\n    empty() {\n        return this._buf.byteLength <= this._off;\n    }\n    get length() {\n        return this._buf.byteLength - this._off;\n    }\n    get capacity() {\n        return this._buf.buffer.byteLength;\n    }\n    truncate(n) {\n        if (n === 0) {\n            this.reset();\n            return;\n        }\n        if (n < 0 || n > this.length) {\n            throw Error(\"bytes.Buffer: truncation out of range\");\n        }\n        this._reslice(this._off + n);\n    }\n    reset() {\n        this._reslice(0);\n        this._off = 0;\n    }\n    _tryGrowByReslice(n) {\n        const l = this._buf.byteLength;\n        if (n <= this.capacity - l) {\n            this._reslice(l + n);\n            return l;\n        }\n        return -1;\n    }\n    _reslice(len) {\n        assert(len <= this._buf.buffer.byteLength);\n        this._buf = new Uint8Array(this._buf.buffer, 0, len);\n    }\n    readByte() {\n        const a = new Uint8Array(1);\n        if (this.read(a)) {\n            return a[0];\n        }\n        return null;\n    }\n    read(p) {\n        if (this.empty()) {\n            // Buffer is empty, reset to recover space.\n            this.reset();\n            if (p.byteLength === 0) {\n                // this edge case is tested in 'bufferReadEmptyAtEOF' test\n                return 0;\n            }\n            return null;\n        }\n        const nread = copy(this._buf.subarray(this._off), p);\n        this._off += nread;\n        return nread;\n    }\n    writeByte(n) {\n        return this.write(Uint8Array.of(n));\n    }\n    writeString(s) {\n        return this.write(encoders_1.TE.encode(s));\n    }\n    write(p) {\n        const m = this._grow(p.byteLength);\n        return copy(p, this._buf, m);\n    }\n    _grow(n) {\n        const m = this.length;\n        // If buffer is empty, reset to recover space.\n        if (m === 0 && this._off !== 0) {\n            this.reset();\n        }\n        // Fast: Try to _grow by means of a _reslice.\n        const i = this._tryGrowByReslice(n);\n        if (i >= 0) {\n            return i;\n        }\n        const c = this.capacity;\n        if (n <= Math.floor(c / 2) - m) {\n            // We can slide things down instead of allocating a new\n            // ArrayBuffer. We only need m+n <= c to slide, but\n            // we instead let capacity get twice as large so we\n            // don't spend all our time copying.\n            copy(this._buf.subarray(this._off), this._buf);\n        }\n        else if (c + n > exports.MAX_SIZE) {\n            throw new Error(\"The buffer cannot be grown beyond the maximum size.\");\n        }\n        else {\n            // Not enough space anywhere, we need to allocate.\n            const buf = new Uint8Array(Math.min(2 * c + n, exports.MAX_SIZE));\n            copy(this._buf.subarray(this._off), buf);\n            this._buf = buf;\n        }\n        // Restore this.off and len(this._buf).\n        this._off = 0;\n        this._reslice(Math.min(m + n, exports.MAX_SIZE));\n        return m;\n    }\n    grow(n) {\n        if (n < 0) {\n            throw Error(\"Buffer._grow: negative count\");\n        }\n        const m = this._grow(n);\n        this._reslice(m);\n    }\n    readFrom(r) {\n        let n = 0;\n        const tmp = new Uint8Array(MIN_READ);\n        while (true) {\n            const shouldGrow = this.capacity - this.length < MIN_READ;\n            // read into tmp buffer if there's not enough room\n            // otherwise read directly into the internal buffer\n            const buf = shouldGrow\n                ? tmp\n                : new Uint8Array(this._buf.buffer, this.length);\n            const nread = r.read(buf);\n            if (nread === null) {\n                return n;\n            }\n            // write will grow if needed\n            if (shouldGrow)\n                this.write(buf.subarray(0, nread));\n            else\n                this._reslice(this.length + nread);\n            n += nread;\n        }\n    }\n}\nexports.DenoBuffer = DenoBuffer;\nfunction readAll(r) {\n    const buf = new DenoBuffer();\n    buf.readFrom(r);\n    return buf.bytes();\n}\nfunction writeAll(w, arr) {\n    let nwritten = 0;\n    while (nwritten < arr.length) {\n        nwritten += w.write(arr.subarray(nwritten));\n    }\n}\n//# sourceMappingURL=denobuffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/denobuffer.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/encoders.js":
/*!*********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/encoders.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TD = exports.TE = exports.Empty = void 0;\nexports.encode = encode;\nexports.decode = decode;\n/*\n * Copyright 2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexports.Empty = new Uint8Array(0);\nexports.TE = new TextEncoder();\nexports.TD = new TextDecoder();\nfunction concat(...bufs) {\n    let max = 0;\n    for (let i = 0; i < bufs.length; i++) {\n        max += bufs[i].length;\n    }\n    const out = new Uint8Array(max);\n    let index = 0;\n    for (let i = 0; i < bufs.length; i++) {\n        out.set(bufs[i], index);\n        index += bufs[i].length;\n    }\n    return out;\n}\nfunction encode(...a) {\n    const bufs = [];\n    for (let i = 0; i < a.length; i++) {\n        bufs.push(exports.TE.encode(a[i]));\n    }\n    if (bufs.length === 0) {\n        return exports.Empty;\n    }\n    if (bufs.length === 1) {\n        return bufs[0];\n    }\n    return concat(...bufs);\n}\nfunction decode(a) {\n    if (!a || a.length === 0) {\n        return \"\";\n    }\n    return exports.TD.decode(a);\n}\n//# sourceMappingURL=encoders.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9lbmNvZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxVQUFVLEdBQUcsVUFBVSxHQUFHLGFBQWE7QUFDdkMsY0FBYztBQUNkLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFVBQVU7QUFDVixVQUFVO0FBQ1Y7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9lbmNvZGVycy5qcz9kMTM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5URCA9IGV4cG9ydHMuVEUgPSBleHBvcnRzLkVtcHR5ID0gdm9pZCAwO1xuZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGU7XG5leHBvcnRzLmRlY29kZSA9IGRlY29kZTtcbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBUaGUgTkFUUyBBdXRob3JzXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0cy5FbXB0eSA9IG5ldyBVaW50OEFycmF5KDApO1xuZXhwb3J0cy5URSA9IG5ldyBUZXh0RW5jb2RlcigpO1xuZXhwb3J0cy5URCA9IG5ldyBUZXh0RGVjb2RlcigpO1xuZnVuY3Rpb24gY29uY2F0KC4uLmJ1ZnMpIHtcbiAgICBsZXQgbWF4ID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1ZnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbWF4ICs9IGJ1ZnNbaV0ubGVuZ3RoO1xuICAgIH1cbiAgICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShtYXgpO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidWZzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIG91dC5zZXQoYnVmc1tpXSwgaW5kZXgpO1xuICAgICAgICBpbmRleCArPSBidWZzW2ldLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn1cbmZ1bmN0aW9uIGVuY29kZSguLi5hKSB7XG4gICAgY29uc3QgYnVmcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICBidWZzLnB1c2goZXhwb3J0cy5URS5lbmNvZGUoYVtpXSkpO1xuICAgIH1cbiAgICBpZiAoYnVmcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGV4cG9ydHMuRW1wdHk7XG4gICAgfVxuICAgIGlmIChidWZzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gYnVmc1swXTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmNhdCguLi5idWZzKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShhKSB7XG4gICAgaWYgKCFhIHx8IGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgICByZXR1cm4gZXhwb3J0cy5URC5kZWNvZGUoYSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbmNvZGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/encoders.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2024 Synadia Communications, Inc\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.errors = exports.PermissionViolationError = exports.NoRespondersError = exports.TimeoutError = exports.RequestError = exports.ProtocolError = exports.ConnectionError = exports.DrainingConnectionError = exports.ClosedConnectionError = exports.AuthorizationError = exports.UserAuthenticationExpiredError = exports.InvalidOperationError = exports.InvalidArgumentError = exports.InvalidSubjectError = void 0;\n/**\n * Represents an error that is thrown when an invalid subject is encountered.\n * This class extends the built-in Error object.\n *\n * @class\n * @extends Error\n */\nclass InvalidSubjectError extends Error {\n    constructor(subject, options) {\n        super(`illegal subject: '${subject}'`, options);\n        this.name = \"InvalidSubjectError\";\n    }\n}\nexports.InvalidSubjectError = InvalidSubjectError;\nclass InvalidArgumentError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = \"InvalidArgumentError\";\n    }\n    static format(property, message, options) {\n        if (Array.isArray(message) && message.length > 1) {\n            message = message[0];\n        }\n        if (Array.isArray(property)) {\n            property = property.map((n) => `'${n}'`);\n            property = property.join(\",\");\n        }\n        else {\n            property = `'${property}'`;\n        }\n        return new InvalidArgumentError(`${property} ${message}`, options);\n    }\n}\nexports.InvalidArgumentError = InvalidArgumentError;\n/**\n * InvalidOperationError is a custom error class that extends the standard Error object.\n * It represents an error that occurs when an invalid operation is attempted on one of\n * objects returned by the API. For example, trying to iterate on an object that was\n * configured with a callback.\n *\n * @class InvalidOperationError\n * @extends {Error}\n *\n * @param {string} message - The error message that explains the reason for the error.\n * @param {ErrorOptions} [options] - Optional parameter to provide additional error options.\n */\nclass InvalidOperationError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = \"InvalidOperationError\";\n    }\n}\nexports.InvalidOperationError = InvalidOperationError;\n/**\n * Represents an error indicating that user authentication has expired.\n * This error is typically thrown when a user attempts to access a connection\n * but their authentication credentials have expired.\n */\nclass UserAuthenticationExpiredError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = \"UserAuthenticationExpiredError\";\n    }\n    static parse(s) {\n        const ss = s.toLowerCase();\n        if (ss.indexOf(\"user authentication expired\") !== -1) {\n            return new UserAuthenticationExpiredError(s);\n        }\n        return null;\n    }\n}\nexports.UserAuthenticationExpiredError = UserAuthenticationExpiredError;\n/**\n * Represents an error related to authorization issues.\n * Note that these could represent an authorization violation,\n * or that the account authentication configuration has expired,\n * or an authentication timeout.\n */\nclass AuthorizationError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = \"AuthorizationError\";\n    }\n    static parse(s) {\n        const messages = [\n            \"authorization violation\",\n            \"account authentication expired\",\n            \"authentication timeout\",\n        ];\n        const ss = s.toLowerCase();\n        for (let i = 0; i < messages.length; i++) {\n            if (ss.indexOf(messages[i]) !== -1) {\n                return new AuthorizationError(s);\n            }\n        }\n        return null;\n    }\n}\nexports.AuthorizationError = AuthorizationError;\n/**\n * Class representing an error thrown when an operation is attempted on a closed connection.\n *\n * This error is intended to signal that a connection-related operation could not be completed\n * because the connection is no longer open or has been terminated.\n *\n * @class\n * @extends Error\n */\nclass ClosedConnectionError extends Error {\n    constructor() {\n        super(\"closed connection\");\n        this.name = \"ClosedConnectionError\";\n    }\n}\nexports.ClosedConnectionError = ClosedConnectionError;\n/**\n * The `ConnectionDrainingError` class represents a specific type of error\n * that occurs when a connection is being drained.\n *\n * This error is typically used in scenarios where connections need to be\n * gracefully closed or when they are transitioning to an inactive state.\n *\n * The error message is set to \"connection draining\" and the error name is\n * overridden to \"DrainingConnectionError\".\n */\nclass DrainingConnectionError extends Error {\n    constructor() {\n        super(\"connection draining\");\n        this.name = \"DrainingConnectionError\";\n    }\n}\nexports.DrainingConnectionError = DrainingConnectionError;\n/**\n * Represents an error that occurs when a network connection fails.\n * Extends the built-in Error class to provide additional context for connection-related issues.\n *\n * @param {string} message - A human-readable description of the error.\n * @param {ErrorOptions} [options] - Optional settings for customizing the error behavior.\n */\nclass ConnectionError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = \"ConnectionError\";\n    }\n}\nexports.ConnectionError = ConnectionError;\n/**\n * Represents an error encountered during protocol operations.\n * This class extends the built-in `Error` class, providing a specific\n * error type called `ProtocolError`.\n *\n * @param {string} message - A descriptive message describing the error.\n * @param {ErrorOptions} [options] - Optional parameters to include additional details.\n */\nclass ProtocolError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = \"ProtocolError\";\n    }\n}\nexports.ProtocolError = ProtocolError;\n/**\n * Class representing an error that occurs during an request operation\n * (such as TimeoutError, or NoRespondersError, or some other error).\n *\n * @extends Error\n */\nclass RequestError extends Error {\n    constructor(message = \"\", options) {\n        super(message, options);\n        this.name = \"RequestError\";\n    }\n    isNoResponders() {\n        return this.cause instanceof NoRespondersError;\n    }\n}\nexports.RequestError = RequestError;\n/**\n * TimeoutError is a custom error class that extends the built-in Error class.\n * It is used to represent an error that occurs when an operation exceeds a\n * predefined time limit.\n *\n * @class\n * @extends {Error}\n */\nclass TimeoutError extends Error {\n    constructor(options) {\n        super(\"timeout\", options);\n        this.name = \"TimeoutError\";\n    }\n}\nexports.TimeoutError = TimeoutError;\n/**\n * NoRespondersError is an error thrown when no responders (no service is\n * subscribing to the subject) are found for a given subject. This error\n * is typically found as the cause for a RequestError\n *\n * @extends Error\n *\n * @param {string} subject - The subject for which no responders were found.\n * @param {ErrorOptions} [options] - Optional error options.\n */\nclass NoRespondersError extends Error {\n    subject;\n    constructor(subject, options) {\n        super(`no responders: '${subject}'`, options);\n        this.subject = subject;\n        this.name = \"NoResponders\";\n    }\n}\nexports.NoRespondersError = NoRespondersError;\n/**\n * Class representing a Permission Violation Error.\n * It provides information about the operation (either \"publish\" or \"subscription\")\n * and the subject used for the operation and the optional queue (if a subscription).\n *\n * This error is terminal for a subscription.\n */\nclass PermissionViolationError extends Error {\n    operation;\n    subject;\n    queue;\n    constructor(message, operation, subject, queue, options) {\n        super(message, options);\n        this.name = \"PermissionViolationError\";\n        this.operation = operation;\n        this.subject = subject;\n        this.queue = queue;\n    }\n    static parse(s) {\n        const t = s ? s.toLowerCase() : \"\";\n        if (t.indexOf(\"permissions violation\") === -1) {\n            return null;\n        }\n        let operation = \"publish\";\n        let subject = \"\";\n        let queue = undefined;\n        const m = s.match(/(Publish|Subscription) to \"(\\S+)\"/);\n        if (m) {\n            operation = m[1].toLowerCase();\n            subject = m[2];\n            if (operation === \"subscription\") {\n                const qm = s.match(/using queue \"(\\S+)\"/);\n                if (qm) {\n                    queue = qm[1];\n                }\n            }\n        }\n        return new PermissionViolationError(s, operation, subject, queue);\n    }\n}\nexports.PermissionViolationError = PermissionViolationError;\nexports.errors = {\n    AuthorizationError,\n    ClosedConnectionError,\n    ConnectionError,\n    DrainingConnectionError,\n    InvalidArgumentError,\n    InvalidOperationError,\n    InvalidSubjectError,\n    NoRespondersError,\n    PermissionViolationError,\n    ProtocolError,\n    RequestError,\n    TimeoutError,\n    UserAuthenticationExpiredError,\n};\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/headers.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/headers.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2020-2023 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MsgHdrsImpl = void 0;\nexports.canonicalMIMEHeaderKey = canonicalMIMEHeaderKey;\nexports.headers = headers;\n// Heavily inspired by Golang's https://golang.org/src/net/http/header.go\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nconst core_1 = __webpack_require__(/*! ./core */ \"./node_modules/@nats-io/nats-core/lib/core.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\n// https://www.ietf.org/rfc/rfc822.txt\n// 3.1.2.  STRUCTURE OF HEADER FIELDS\n//\n// Once a field has been unfolded, it may be viewed as being com-\n// posed of a field-name followed by a colon (\":\"), followed by a\n// field-body, and  terminated  by  a  carriage-return/line-feed.\n// The  field-name must be composed of printable ASCII characters\n// (i.e., characters that  have  values  between  33.  and  126.,\n// decimal, except colon).  The field-body may be composed of any\n// ASCII characters, except CR or LF.  (While CR and/or LF may be\n// present  in the actual text, they are removed by the action of\n// unfolding the field.)\nfunction canonicalMIMEHeaderKey(k) {\n    const a = 97;\n    const A = 65;\n    const Z = 90;\n    const z = 122;\n    const dash = 45;\n    const colon = 58;\n    const start = 33;\n    const end = 126;\n    const toLower = a - A;\n    let upper = true;\n    const buf = new Array(k.length);\n    for (let i = 0; i < k.length; i++) {\n        let c = k.charCodeAt(i);\n        if (c === colon || c < start || c > end) {\n            throw errors_1.InvalidArgumentError.format(\"header\", `'${k[i]}' is not a valid character in a header name`);\n        }\n        if (upper && a <= c && c <= z) {\n            c -= toLower;\n        }\n        else if (!upper && A <= c && c <= Z) {\n            c += toLower;\n        }\n        buf[i] = c;\n        upper = c == dash;\n    }\n    return String.fromCharCode(...buf);\n}\nfunction headers(code = 0, description = \"\") {\n    if ((code === 0 && description !== \"\") || (code > 0 && description === \"\")) {\n        throw errors_1.InvalidArgumentError.format(\"description\", \"is required\");\n    }\n    return new MsgHdrsImpl(code, description);\n}\nconst HEADER = \"NATS/1.0\";\nclass MsgHdrsImpl {\n    _code;\n    headers;\n    _description;\n    constructor(code = 0, description = \"\") {\n        this._code = code;\n        this._description = description;\n        this.headers = new Map();\n    }\n    [Symbol.iterator]() {\n        return this.headers.entries();\n    }\n    size() {\n        return this.headers.size;\n    }\n    equals(mh) {\n        if (mh && this.headers.size === mh.headers.size &&\n            this._code === mh._code) {\n            for (const [k, v] of this.headers) {\n                const a = mh.values(k);\n                if (v.length !== a.length) {\n                    return false;\n                }\n                const vv = [...v].sort();\n                const aa = [...a].sort();\n                for (let i = 0; i < vv.length; i++) {\n                    if (vv[i] !== aa[i]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    static decode(a) {\n        const mh = new MsgHdrsImpl();\n        const s = encoders_1.TD.decode(a);\n        const lines = s.split(\"\\r\\n\");\n        const h = lines[0];\n        if (h !== HEADER) {\n            // malformed headers could add extra space without adding a code or description\n            let str = h.replace(HEADER, \"\").trim();\n            if (str.length > 0) {\n                mh._code = parseInt(str, 10);\n                if (isNaN(mh._code)) {\n                    mh._code = 0;\n                }\n                const scode = mh._code.toString();\n                str = str.replace(scode, \"\");\n                mh._description = str.trim();\n            }\n        }\n        if (lines.length >= 1) {\n            lines.slice(1).map((s) => {\n                if (s) {\n                    const idx = s.indexOf(\":\");\n                    if (idx > -1) {\n                        const k = s.slice(0, idx);\n                        const v = s.slice(idx + 1).trim();\n                        mh.append(k, v);\n                    }\n                }\n            });\n        }\n        return mh;\n    }\n    toString() {\n        if (this.headers.size === 0 && this._code === 0) {\n            return \"\";\n        }\n        let s = HEADER;\n        if (this._code > 0 && this._description !== \"\") {\n            s += ` ${this._code} ${this._description}`;\n        }\n        for (const [k, v] of this.headers) {\n            for (let i = 0; i < v.length; i++) {\n                s = `${s}\\r\\n${k}: ${v[i]}`;\n            }\n        }\n        return `${s}\\r\\n\\r\\n`;\n    }\n    encode() {\n        return encoders_1.TE.encode(this.toString());\n    }\n    static validHeaderValue(k) {\n        const inv = /[\\r\\n]/;\n        if (inv.test(k)) {\n            throw errors_1.InvalidArgumentError.format(\"header\", \"values cannot contain \\\\r or \\\\n\");\n        }\n        return k.trim();\n    }\n    keys() {\n        const keys = [];\n        for (const sk of this.headers.keys()) {\n            keys.push(sk);\n        }\n        return keys;\n    }\n    findKeys(k, match = core_1.Match.Exact) {\n        const keys = this.keys();\n        switch (match) {\n            case core_1.Match.Exact:\n                return keys.filter((v) => {\n                    return v === k;\n                });\n            case core_1.Match.CanonicalMIME:\n                k = canonicalMIMEHeaderKey(k);\n                return keys.filter((v) => {\n                    return v === k;\n                });\n            default: {\n                const lci = k.toLowerCase();\n                return keys.filter((v) => {\n                    return lci === v.toLowerCase();\n                });\n            }\n        }\n    }\n    get(k, match = core_1.Match.Exact) {\n        const keys = this.findKeys(k, match);\n        if (keys.length) {\n            const v = this.headers.get(keys[0]);\n            if (v) {\n                return Array.isArray(v) ? v[0] : v;\n            }\n        }\n        return \"\";\n    }\n    last(k, match = core_1.Match.Exact) {\n        const keys = this.findKeys(k, match);\n        if (keys.length) {\n            const v = this.headers.get(keys[0]);\n            if (v) {\n                return Array.isArray(v) ? v[v.length - 1] : v;\n            }\n        }\n        return \"\";\n    }\n    has(k, match = core_1.Match.Exact) {\n        return this.findKeys(k, match).length > 0;\n    }\n    set(k, v, match = core_1.Match.Exact) {\n        this.delete(k, match);\n        this.append(k, v, match);\n    }\n    append(k, v, match = core_1.Match.Exact) {\n        // validate the key\n        const ck = canonicalMIMEHeaderKey(k);\n        if (match === core_1.Match.CanonicalMIME) {\n            k = ck;\n        }\n        // if we get non-sensical ignores/etc, we should try\n        // to do the right thing and use the first key that matches\n        const keys = this.findKeys(k, match);\n        k = keys.length > 0 ? keys[0] : k;\n        const value = MsgHdrsImpl.validHeaderValue(v);\n        let a = this.headers.get(k);\n        if (!a) {\n            a = [];\n            this.headers.set(k, a);\n        }\n        a.push(value);\n    }\n    values(k, match = core_1.Match.Exact) {\n        const buf = [];\n        const keys = this.findKeys(k, match);\n        keys.forEach((v) => {\n            const values = this.headers.get(v);\n            if (values) {\n                buf.push(...values);\n            }\n        });\n        return buf;\n    }\n    delete(k, match = core_1.Match.Exact) {\n        const keys = this.findKeys(k, match);\n        keys.forEach((v) => {\n            this.headers.delete(v);\n        });\n    }\n    get hasError() {\n        return this._code >= 300;\n    }\n    get status() {\n        return `${this._code} ${this._description}`.trim();\n    }\n    toRecord() {\n        const data = {};\n        this.keys().forEach((v) => {\n            data[v] = this.values(v);\n        });\n        return data;\n    }\n    get code() {\n        return this._code;\n    }\n    get description() {\n        return this._description;\n    }\n    static fromRecord(r) {\n        const h = new MsgHdrsImpl();\n        for (const k in r) {\n            h.headers.set(k, r[k]);\n        }\n        return h;\n    }\n}\nexports.MsgHdrsImpl = MsgHdrsImpl;\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/headers.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/heartbeats.js":
/*!***********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/heartbeats.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2020-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Heartbeat = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nclass Heartbeat {\n    ph;\n    interval;\n    maxOut;\n    timer;\n    pendings;\n    constructor(ph, interval, maxOut) {\n        this.ph = ph;\n        this.interval = interval;\n        this.maxOut = maxOut;\n        this.pendings = [];\n    }\n    // api to start the heartbeats, since this can be\n    // spuriously called from dial, ensure we don't\n    // leak timers\n    start() {\n        this.cancel();\n        this._schedule();\n    }\n    // api for canceling the heartbeats, if stale is\n    // true it will initiate a client disconnect\n    cancel(stale) {\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = undefined;\n        }\n        this._reset();\n        if (stale) {\n            this.ph.disconnect();\n        }\n    }\n    _schedule() {\n        // @ts-ignore: node is not a number - we treat this opaquely\n        this.timer = setTimeout(() => {\n            this.ph.dispatchStatus({ type: \"ping\", pendingPings: this.pendings.length + 1 });\n            if (this.pendings.length === this.maxOut) {\n                this.cancel(true);\n                return;\n            }\n            const ping = (0, util_1.deferred)();\n            this.ph.flush(ping)\n                .then(() => {\n                this._reset();\n            })\n                .catch(() => {\n                // we disconnected - pongs were rejected\n                this.cancel();\n            });\n            this.pendings.push(ping);\n            this._schedule();\n        }, this.interval);\n    }\n    _reset() {\n        // clear pendings after resolving them\n        this.pendings = this.pendings.filter((p) => {\n            const d = p;\n            d.resolve();\n            return false;\n        });\n    }\n}\nexports.Heartbeat = Heartbeat;\n//# sourceMappingURL=heartbeats.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9oZWFydGJlYXRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakIsZUFBZSxtQkFBTyxDQUFDLDZEQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHNEQUFzRDtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvaGVhcnRiZWF0cy5qcz9kNmVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDIwLTIwMjQgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGVhcnRiZWF0ID0gdm9pZCAwO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbmNsYXNzIEhlYXJ0YmVhdCB7XG4gICAgcGg7XG4gICAgaW50ZXJ2YWw7XG4gICAgbWF4T3V0O1xuICAgIHRpbWVyO1xuICAgIHBlbmRpbmdzO1xuICAgIGNvbnN0cnVjdG9yKHBoLCBpbnRlcnZhbCwgbWF4T3V0KSB7XG4gICAgICAgIHRoaXMucGggPSBwaDtcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IGludGVydmFsO1xuICAgICAgICB0aGlzLm1heE91dCA9IG1heE91dDtcbiAgICAgICAgdGhpcy5wZW5kaW5ncyA9IFtdO1xuICAgIH1cbiAgICAvLyBhcGkgdG8gc3RhcnQgdGhlIGhlYXJ0YmVhdHMsIHNpbmNlIHRoaXMgY2FuIGJlXG4gICAgLy8gc3B1cmlvdXNseSBjYWxsZWQgZnJvbSBkaWFsLCBlbnN1cmUgd2UgZG9uJ3RcbiAgICAvLyBsZWFrIHRpbWVyc1xuICAgIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLmNhbmNlbCgpO1xuICAgICAgICB0aGlzLl9zY2hlZHVsZSgpO1xuICAgIH1cbiAgICAvLyBhcGkgZm9yIGNhbmNlbGluZyB0aGUgaGVhcnRiZWF0cywgaWYgc3RhbGUgaXNcbiAgICAvLyB0cnVlIGl0IHdpbGwgaW5pdGlhdGUgYSBjbGllbnQgZGlzY29ubmVjdFxuICAgIGNhbmNlbChzdGFsZSkge1xuICAgICAgICBpZiAodGhpcy50aW1lcikge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICAgICAgdGhpcy50aW1lciA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yZXNldCgpO1xuICAgICAgICBpZiAoc3RhbGUpIHtcbiAgICAgICAgICAgIHRoaXMucGguZGlzY29ubmVjdCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9zY2hlZHVsZSgpIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZTogbm9kZSBpcyBub3QgYSBudW1iZXIgLSB3ZSB0cmVhdCB0aGlzIG9wYXF1ZWx5XG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucGguZGlzcGF0Y2hTdGF0dXMoeyB0eXBlOiBcInBpbmdcIiwgcGVuZGluZ1BpbmdzOiB0aGlzLnBlbmRpbmdzLmxlbmd0aCArIDEgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5wZW5kaW5ncy5sZW5ndGggPT09IHRoaXMubWF4T3V0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYW5jZWwodHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGluZyA9ICgwLCB1dGlsXzEuZGVmZXJyZWQpKCk7XG4gICAgICAgICAgICB0aGlzLnBoLmZsdXNoKHBpbmcpXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX3Jlc2V0KCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gd2UgZGlzY29ubmVjdGVkIC0gcG9uZ3Mgd2VyZSByZWplY3RlZFxuICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMucGVuZGluZ3MucHVzaChwaW5nKTtcbiAgICAgICAgICAgIHRoaXMuX3NjaGVkdWxlKCk7XG4gICAgICAgIH0sIHRoaXMuaW50ZXJ2YWwpO1xuICAgIH1cbiAgICBfcmVzZXQoKSB7XG4gICAgICAgIC8vIGNsZWFyIHBlbmRpbmdzIGFmdGVyIHJlc29sdmluZyB0aGVtXG4gICAgICAgIHRoaXMucGVuZGluZ3MgPSB0aGlzLnBlbmRpbmdzLmZpbHRlcigocCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZCA9IHA7XG4gICAgICAgICAgICBkLnJlc29sdmUoKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5IZWFydGJlYXQgPSBIZWFydGJlYXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFydGJlYXRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/heartbeats.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/idleheartbeat_monitor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/idleheartbeat_monitor.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2022 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdleHeartbeatMonitor = void 0;\nclass IdleHeartbeatMonitor {\n    interval;\n    maxOut;\n    cancelAfter;\n    timer;\n    autoCancelTimer;\n    last;\n    missed;\n    count;\n    callback;\n    /**\n     * Constructor\n     * @param interval in millis to check\n     * @param cb a callback to report when heartbeats are missed\n     * @param opts monitor options @see IdleHeartbeatOptions\n     */\n    constructor(interval, cb, opts = { maxOut: 2 }) {\n        this.interval = interval;\n        this.maxOut = opts?.maxOut || 2;\n        this.cancelAfter = opts?.cancelAfter || 0;\n        this.last = Date.now();\n        this.missed = 0;\n        this.count = 0;\n        this.callback = cb;\n        this._schedule();\n    }\n    /**\n     * cancel monitoring\n     */\n    cancel() {\n        if (this.autoCancelTimer) {\n            clearTimeout(this.autoCancelTimer);\n        }\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n        this.timer = 0;\n        this.autoCancelTimer = 0;\n        this.missed = 0;\n    }\n    /**\n     * work signals that there was work performed\n     */\n    work() {\n        this.last = Date.now();\n        this.missed = 0;\n    }\n    /**\n     * internal api to change the interval, cancelAfter and maxOut\n     * @param interval\n     * @param cancelAfter\n     * @param maxOut\n     */\n    _change(interval, cancelAfter = 0, maxOut = 2) {\n        this.interval = interval;\n        this.maxOut = maxOut;\n        this.cancelAfter = cancelAfter;\n        this.restart();\n    }\n    /**\n     * cancels and restarts the monitoring\n     */\n    restart() {\n        this.cancel();\n        this._schedule();\n    }\n    /**\n     * internal api called to start monitoring\n     */\n    _schedule() {\n        if (this.cancelAfter > 0) {\n            // @ts-ignore: in node is not a number - we treat this opaquely\n            this.autoCancelTimer = setTimeout(() => {\n                this.cancel();\n            }, this.cancelAfter);\n        }\n        // @ts-ignore: in node is not a number - we treat this opaquely\n        this.timer = setInterval(() => {\n            this.count++;\n            if ((Date.now() - this.last) > this.interval) {\n                this.missed++;\n            }\n            if (this.missed >= this.maxOut) {\n                try {\n                    if (this.callback(this.missed) === true) {\n                        this.cancel();\n                    }\n                }\n                catch (err) {\n                    console.log(err);\n                }\n            }\n        }, this.interval);\n    }\n}\nexports.IdleHeartbeatMonitor = IdleHeartbeatMonitor;\n//# sourceMappingURL=idleheartbeat_monitor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9pZGxlaGVhcnRiZWF0X21vbml0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvaWRsZWhlYXJ0YmVhdF9tb25pdG9yLmpzPzQxNDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IDIwMjIgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSWRsZUhlYXJ0YmVhdE1vbml0b3IgPSB2b2lkIDA7XG5jbGFzcyBJZGxlSGVhcnRiZWF0TW9uaXRvciB7XG4gICAgaW50ZXJ2YWw7XG4gICAgbWF4T3V0O1xuICAgIGNhbmNlbEFmdGVyO1xuICAgIHRpbWVyO1xuICAgIGF1dG9DYW5jZWxUaW1lcjtcbiAgICBsYXN0O1xuICAgIG1pc3NlZDtcbiAgICBjb3VudDtcbiAgICBjYWxsYmFjaztcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSBpbnRlcnZhbCBpbiBtaWxsaXMgdG8gY2hlY2tcbiAgICAgKiBAcGFyYW0gY2IgYSBjYWxsYmFjayB0byByZXBvcnQgd2hlbiBoZWFydGJlYXRzIGFyZSBtaXNzZWRcbiAgICAgKiBAcGFyYW0gb3B0cyBtb25pdG9yIG9wdGlvbnMgQHNlZSBJZGxlSGVhcnRiZWF0T3B0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGludGVydmFsLCBjYiwgb3B0cyA9IHsgbWF4T3V0OiAyIH0pIHtcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IGludGVydmFsO1xuICAgICAgICB0aGlzLm1heE91dCA9IG9wdHM/Lm1heE91dCB8fCAyO1xuICAgICAgICB0aGlzLmNhbmNlbEFmdGVyID0gb3B0cz8uY2FuY2VsQWZ0ZXIgfHwgMDtcbiAgICAgICAgdGhpcy5sYXN0ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdGhpcy5taXNzZWQgPSAwO1xuICAgICAgICB0aGlzLmNvdW50ID0gMDtcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNiO1xuICAgICAgICB0aGlzLl9zY2hlZHVsZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBjYW5jZWwgbW9uaXRvcmluZ1xuICAgICAqL1xuICAgIGNhbmNlbCgpIHtcbiAgICAgICAgaWYgKHRoaXMuYXV0b0NhbmNlbFRpbWVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5hdXRvQ2FuY2VsVGltZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnRpbWVyKSB7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGltZXIgPSAwO1xuICAgICAgICB0aGlzLmF1dG9DYW5jZWxUaW1lciA9IDA7XG4gICAgICAgIHRoaXMubWlzc2VkID0gMDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogd29yayBzaWduYWxzIHRoYXQgdGhlcmUgd2FzIHdvcmsgcGVyZm9ybWVkXG4gICAgICovXG4gICAgd29yaygpIHtcbiAgICAgICAgdGhpcy5sYXN0ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdGhpcy5taXNzZWQgPSAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBpbnRlcm5hbCBhcGkgdG8gY2hhbmdlIHRoZSBpbnRlcnZhbCwgY2FuY2VsQWZ0ZXIgYW5kIG1heE91dFxuICAgICAqIEBwYXJhbSBpbnRlcnZhbFxuICAgICAqIEBwYXJhbSBjYW5jZWxBZnRlclxuICAgICAqIEBwYXJhbSBtYXhPdXRcbiAgICAgKi9cbiAgICBfY2hhbmdlKGludGVydmFsLCBjYW5jZWxBZnRlciA9IDAsIG1heE91dCA9IDIpIHtcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IGludGVydmFsO1xuICAgICAgICB0aGlzLm1heE91dCA9IG1heE91dDtcbiAgICAgICAgdGhpcy5jYW5jZWxBZnRlciA9IGNhbmNlbEFmdGVyO1xuICAgICAgICB0aGlzLnJlc3RhcnQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogY2FuY2VscyBhbmQgcmVzdGFydHMgdGhlIG1vbml0b3JpbmdcbiAgICAgKi9cbiAgICByZXN0YXJ0KCkge1xuICAgICAgICB0aGlzLmNhbmNlbCgpO1xuICAgICAgICB0aGlzLl9zY2hlZHVsZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBpbnRlcm5hbCBhcGkgY2FsbGVkIHRvIHN0YXJ0IG1vbml0b3JpbmdcbiAgICAgKi9cbiAgICBfc2NoZWR1bGUoKSB7XG4gICAgICAgIGlmICh0aGlzLmNhbmNlbEFmdGVyID4gMCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZTogaW4gbm9kZSBpcyBub3QgYSBudW1iZXIgLSB3ZSB0cmVhdCB0aGlzIG9wYXF1ZWx5XG4gICAgICAgICAgICB0aGlzLmF1dG9DYW5jZWxUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsKCk7XG4gICAgICAgICAgICB9LCB0aGlzLmNhbmNlbEFmdGVyKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBAdHMtaWdub3JlOiBpbiBub2RlIGlzIG5vdCBhIG51bWJlciAtIHdlIHRyZWF0IHRoaXMgb3BhcXVlbHlcbiAgICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY291bnQrKztcbiAgICAgICAgICAgIGlmICgoRGF0ZS5ub3coKSAtIHRoaXMubGFzdCkgPiB0aGlzLmludGVydmFsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5taXNzZWQrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLm1pc3NlZCA+PSB0aGlzLm1heE91dCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrKHRoaXMubWlzc2VkKSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW5jZWwoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzLmludGVydmFsKTtcbiAgICB9XG59XG5leHBvcnRzLklkbGVIZWFydGJlYXRNb25pdG9yID0gSWRsZUhlYXJ0YmVhdE1vbml0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZGxlaGVhcnRiZWF0X21vbml0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/idleheartbeat_monitor.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/internal_mod.js":
/*!*************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/internal_mod.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TD = exports.Metric = exports.Bench = exports.writeAll = exports.readAll = exports.MAX_SIZE = exports.DenoBuffer = exports.State = exports.Parser = exports.Kind = exports.QueuedIteratorImpl = exports.usernamePasswordAuthenticator = exports.tokenAuthenticator = exports.nkeyAuthenticator = exports.jwtAuthenticator = exports.credsAuthenticator = exports.RequestOne = exports.parseOptions = exports.hasWsProtocol = exports.defaultOptions = exports.DEFAULT_MAX_RECONNECT_ATTEMPTS = exports.checkUnsupportedOption = exports.checkOptions = exports.buildAuthenticator = exports.DataBuffer = exports.MuxSubscription = exports.Heartbeat = exports.MsgHdrsImpl = exports.headers = exports.canonicalMIMEHeaderKey = exports.timeout = exports.SimpleMutex = exports.render = exports.nanos = exports.millis = exports.extend = exports.delay = exports.deferred = exports.deadline = exports.collect = exports.backoff = exports.ProtocolHandler = exports.INFO = exports.Connect = exports.setTransportFactory = exports.getResolveFn = exports.MsgImpl = exports.nuid = exports.Nuid = exports.NatsConnectionImpl = void 0;\nexports.UserAuthenticationExpiredError = exports.TimeoutError = exports.RequestError = exports.ProtocolError = exports.PermissionViolationError = exports.NoRespondersError = exports.InvalidSubjectError = exports.InvalidOperationError = exports.InvalidArgumentError = exports.errors = exports.DrainingConnectionError = exports.ConnectionError = exports.ClosedConnectionError = exports.AuthorizationError = exports.wsUrlParseFn = exports.wsconnect = exports.SHA256 = exports.Base64UrlPaddedCodec = exports.Base64UrlCodec = exports.Base64Codec = exports.Servers = exports.isIPV4OrHostname = exports.IdleHeartbeatMonitor = exports.Subscriptions = exports.SubscriptionImpl = exports.syncIterator = exports.Match = exports.createInbox = exports.protoLen = exports.extractProtocolMessage = exports.Empty = exports.parseSemVer = exports.Features = exports.Feature = exports.compare = exports.parseIP = exports.isIP = exports.ipV4 = exports.TE = void 0;\nvar nats_1 = __webpack_require__(/*! ./nats */ \"./node_modules/@nats-io/nats-core/lib/nats.js\");\nObject.defineProperty(exports, \"NatsConnectionImpl\", ({ enumerable: true, get: function () { return nats_1.NatsConnectionImpl; } }));\nvar nuid_1 = __webpack_require__(/*! ./nuid */ \"./node_modules/@nats-io/nats-core/lib/nuid.js\");\nObject.defineProperty(exports, \"Nuid\", ({ enumerable: true, get: function () { return nuid_1.Nuid; } }));\nObject.defineProperty(exports, \"nuid\", ({ enumerable: true, get: function () { return nuid_1.nuid; } }));\nvar msg_1 = __webpack_require__(/*! ./msg */ \"./node_modules/@nats-io/nats-core/lib/msg.js\");\nObject.defineProperty(exports, \"MsgImpl\", ({ enumerable: true, get: function () { return msg_1.MsgImpl; } }));\nvar transport_1 = __webpack_require__(/*! ./transport */ \"./node_modules/@nats-io/nats-core/lib/transport.js\");\nObject.defineProperty(exports, \"getResolveFn\", ({ enumerable: true, get: function () { return transport_1.getResolveFn; } }));\nObject.defineProperty(exports, \"setTransportFactory\", ({ enumerable: true, get: function () { return transport_1.setTransportFactory; } }));\nvar protocol_1 = __webpack_require__(/*! ./protocol */ \"./node_modules/@nats-io/nats-core/lib/protocol.js\");\nObject.defineProperty(exports, \"Connect\", ({ enumerable: true, get: function () { return protocol_1.Connect; } }));\nObject.defineProperty(exports, \"INFO\", ({ enumerable: true, get: function () { return protocol_1.INFO; } }));\nObject.defineProperty(exports, \"ProtocolHandler\", ({ enumerable: true, get: function () { return protocol_1.ProtocolHandler; } }));\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nObject.defineProperty(exports, \"backoff\", ({ enumerable: true, get: function () { return util_1.backoff; } }));\nObject.defineProperty(exports, \"collect\", ({ enumerable: true, get: function () { return util_1.collect; } }));\nObject.defineProperty(exports, \"deadline\", ({ enumerable: true, get: function () { return util_1.deadline; } }));\nObject.defineProperty(exports, \"deferred\", ({ enumerable: true, get: function () { return util_1.deferred; } }));\nObject.defineProperty(exports, \"delay\", ({ enumerable: true, get: function () { return util_1.delay; } }));\nObject.defineProperty(exports, \"extend\", ({ enumerable: true, get: function () { return util_1.extend; } }));\nObject.defineProperty(exports, \"millis\", ({ enumerable: true, get: function () { return util_1.millis; } }));\nObject.defineProperty(exports, \"nanos\", ({ enumerable: true, get: function () { return util_1.nanos; } }));\nObject.defineProperty(exports, \"render\", ({ enumerable: true, get: function () { return util_1.render; } }));\nObject.defineProperty(exports, \"SimpleMutex\", ({ enumerable: true, get: function () { return util_1.SimpleMutex; } }));\nObject.defineProperty(exports, \"timeout\", ({ enumerable: true, get: function () { return util_1.timeout; } }));\nvar headers_1 = __webpack_require__(/*! ./headers */ \"./node_modules/@nats-io/nats-core/lib/headers.js\");\nObject.defineProperty(exports, \"canonicalMIMEHeaderKey\", ({ enumerable: true, get: function () { return headers_1.canonicalMIMEHeaderKey; } }));\nObject.defineProperty(exports, \"headers\", ({ enumerable: true, get: function () { return headers_1.headers; } }));\nObject.defineProperty(exports, \"MsgHdrsImpl\", ({ enumerable: true, get: function () { return headers_1.MsgHdrsImpl; } }));\nvar heartbeats_1 = __webpack_require__(/*! ./heartbeats */ \"./node_modules/@nats-io/nats-core/lib/heartbeats.js\");\nObject.defineProperty(exports, \"Heartbeat\", ({ enumerable: true, get: function () { return heartbeats_1.Heartbeat; } }));\nvar muxsubscription_1 = __webpack_require__(/*! ./muxsubscription */ \"./node_modules/@nats-io/nats-core/lib/muxsubscription.js\");\nObject.defineProperty(exports, \"MuxSubscription\", ({ enumerable: true, get: function () { return muxsubscription_1.MuxSubscription; } }));\nvar databuffer_1 = __webpack_require__(/*! ./databuffer */ \"./node_modules/@nats-io/nats-core/lib/databuffer.js\");\nObject.defineProperty(exports, \"DataBuffer\", ({ enumerable: true, get: function () { return databuffer_1.DataBuffer; } }));\nvar options_1 = __webpack_require__(/*! ./options */ \"./node_modules/@nats-io/nats-core/lib/options.js\");\nObject.defineProperty(exports, \"buildAuthenticator\", ({ enumerable: true, get: function () { return options_1.buildAuthenticator; } }));\nObject.defineProperty(exports, \"checkOptions\", ({ enumerable: true, get: function () { return options_1.checkOptions; } }));\nObject.defineProperty(exports, \"checkUnsupportedOption\", ({ enumerable: true, get: function () { return options_1.checkUnsupportedOption; } }));\nObject.defineProperty(exports, \"DEFAULT_MAX_RECONNECT_ATTEMPTS\", ({ enumerable: true, get: function () { return options_1.DEFAULT_MAX_RECONNECT_ATTEMPTS; } }));\nObject.defineProperty(exports, \"defaultOptions\", ({ enumerable: true, get: function () { return options_1.defaultOptions; } }));\nObject.defineProperty(exports, \"hasWsProtocol\", ({ enumerable: true, get: function () { return options_1.hasWsProtocol; } }));\nObject.defineProperty(exports, \"parseOptions\", ({ enumerable: true, get: function () { return options_1.parseOptions; } }));\nvar request_1 = __webpack_require__(/*! ./request */ \"./node_modules/@nats-io/nats-core/lib/request.js\");\nObject.defineProperty(exports, \"RequestOne\", ({ enumerable: true, get: function () { return request_1.RequestOne; } }));\nvar authenticator_1 = __webpack_require__(/*! ./authenticator */ \"./node_modules/@nats-io/nats-core/lib/authenticator.js\");\nObject.defineProperty(exports, \"credsAuthenticator\", ({ enumerable: true, get: function () { return authenticator_1.credsAuthenticator; } }));\nObject.defineProperty(exports, \"jwtAuthenticator\", ({ enumerable: true, get: function () { return authenticator_1.jwtAuthenticator; } }));\nObject.defineProperty(exports, \"nkeyAuthenticator\", ({ enumerable: true, get: function () { return authenticator_1.nkeyAuthenticator; } }));\nObject.defineProperty(exports, \"tokenAuthenticator\", ({ enumerable: true, get: function () { return authenticator_1.tokenAuthenticator; } }));\nObject.defineProperty(exports, \"usernamePasswordAuthenticator\", ({ enumerable: true, get: function () { return authenticator_1.usernamePasswordAuthenticator; } }));\n__exportStar(__webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nats-core/lib/nkeys.js\"), exports);\nvar queued_iterator_1 = __webpack_require__(/*! ./queued_iterator */ \"./node_modules/@nats-io/nats-core/lib/queued_iterator.js\");\nObject.defineProperty(exports, \"QueuedIteratorImpl\", ({ enumerable: true, get: function () { return queued_iterator_1.QueuedIteratorImpl; } }));\nvar parser_1 = __webpack_require__(/*! ./parser */ \"./node_modules/@nats-io/nats-core/lib/parser.js\");\nObject.defineProperty(exports, \"Kind\", ({ enumerable: true, get: function () { return parser_1.Kind; } }));\nObject.defineProperty(exports, \"Parser\", ({ enumerable: true, get: function () { return parser_1.Parser; } }));\nObject.defineProperty(exports, \"State\", ({ enumerable: true, get: function () { return parser_1.State; } }));\nvar denobuffer_1 = __webpack_require__(/*! ./denobuffer */ \"./node_modules/@nats-io/nats-core/lib/denobuffer.js\");\nObject.defineProperty(exports, \"DenoBuffer\", ({ enumerable: true, get: function () { return denobuffer_1.DenoBuffer; } }));\nObject.defineProperty(exports, \"MAX_SIZE\", ({ enumerable: true, get: function () { return denobuffer_1.MAX_SIZE; } }));\nObject.defineProperty(exports, \"readAll\", ({ enumerable: true, get: function () { return denobuffer_1.readAll; } }));\nObject.defineProperty(exports, \"writeAll\", ({ enumerable: true, get: function () { return denobuffer_1.writeAll; } }));\nvar bench_1 = __webpack_require__(/*! ./bench */ \"./node_modules/@nats-io/nats-core/lib/bench.js\");\nObject.defineProperty(exports, \"Bench\", ({ enumerable: true, get: function () { return bench_1.Bench; } }));\nObject.defineProperty(exports, \"Metric\", ({ enumerable: true, get: function () { return bench_1.Metric; } }));\nvar encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nObject.defineProperty(exports, \"TD\", ({ enumerable: true, get: function () { return encoders_1.TD; } }));\nObject.defineProperty(exports, \"TE\", ({ enumerable: true, get: function () { return encoders_1.TE; } }));\nvar ipparser_1 = __webpack_require__(/*! ./ipparser */ \"./node_modules/@nats-io/nats-core/lib/ipparser.js\");\nObject.defineProperty(exports, \"ipV4\", ({ enumerable: true, get: function () { return ipparser_1.ipV4; } }));\nObject.defineProperty(exports, \"isIP\", ({ enumerable: true, get: function () { return ipparser_1.isIP; } }));\nObject.defineProperty(exports, \"parseIP\", ({ enumerable: true, get: function () { return ipparser_1.parseIP; } }));\nvar semver_1 = __webpack_require__(/*! ./semver */ \"./node_modules/@nats-io/nats-core/lib/semver.js\");\nObject.defineProperty(exports, \"compare\", ({ enumerable: true, get: function () { return semver_1.compare; } }));\nObject.defineProperty(exports, \"Feature\", ({ enumerable: true, get: function () { return semver_1.Feature; } }));\nObject.defineProperty(exports, \"Features\", ({ enumerable: true, get: function () { return semver_1.Features; } }));\nObject.defineProperty(exports, \"parseSemVer\", ({ enumerable: true, get: function () { return semver_1.parseSemVer; } }));\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@nats-io/nats-core/lib/types.js\");\nObject.defineProperty(exports, \"Empty\", ({ enumerable: true, get: function () { return types_1.Empty; } }));\nvar transport_2 = __webpack_require__(/*! ./transport */ \"./node_modules/@nats-io/nats-core/lib/transport.js\");\nObject.defineProperty(exports, \"extractProtocolMessage\", ({ enumerable: true, get: function () { return transport_2.extractProtocolMessage; } }));\nObject.defineProperty(exports, \"protoLen\", ({ enumerable: true, get: function () { return transport_2.protoLen; } }));\nvar core_1 = __webpack_require__(/*! ./core */ \"./node_modules/@nats-io/nats-core/lib/core.js\");\nObject.defineProperty(exports, \"createInbox\", ({ enumerable: true, get: function () { return core_1.createInbox; } }));\nObject.defineProperty(exports, \"Match\", ({ enumerable: true, get: function () { return core_1.Match; } }));\nObject.defineProperty(exports, \"syncIterator\", ({ enumerable: true, get: function () { return core_1.syncIterator; } }));\nvar protocol_2 = __webpack_require__(/*! ./protocol */ \"./node_modules/@nats-io/nats-core/lib/protocol.js\");\nObject.defineProperty(exports, \"SubscriptionImpl\", ({ enumerable: true, get: function () { return protocol_2.SubscriptionImpl; } }));\nObject.defineProperty(exports, \"Subscriptions\", ({ enumerable: true, get: function () { return protocol_2.Subscriptions; } }));\nvar idleheartbeat_monitor_1 = __webpack_require__(/*! ./idleheartbeat_monitor */ \"./node_modules/@nats-io/nats-core/lib/idleheartbeat_monitor.js\");\nObject.defineProperty(exports, \"IdleHeartbeatMonitor\", ({ enumerable: true, get: function () { return idleheartbeat_monitor_1.IdleHeartbeatMonitor; } }));\nvar servers_1 = __webpack_require__(/*! ./servers */ \"./node_modules/@nats-io/nats-core/lib/servers.js\");\nObject.defineProperty(exports, \"isIPV4OrHostname\", ({ enumerable: true, get: function () { return servers_1.isIPV4OrHostname; } }));\nObject.defineProperty(exports, \"Servers\", ({ enumerable: true, get: function () { return servers_1.Servers; } }));\nvar base64_1 = __webpack_require__(/*! ./base64 */ \"./node_modules/@nats-io/nats-core/lib/base64.js\");\nObject.defineProperty(exports, \"Base64Codec\", ({ enumerable: true, get: function () { return base64_1.Base64Codec; } }));\nObject.defineProperty(exports, \"Base64UrlCodec\", ({ enumerable: true, get: function () { return base64_1.Base64UrlCodec; } }));\nObject.defineProperty(exports, \"Base64UrlPaddedCodec\", ({ enumerable: true, get: function () { return base64_1.Base64UrlPaddedCodec; } }));\nvar sha256_1 = __webpack_require__(/*! ./sha256 */ \"./node_modules/@nats-io/nats-core/lib/sha256.js\");\nObject.defineProperty(exports, \"SHA256\", ({ enumerable: true, get: function () { return sha256_1.SHA256; } }));\nvar ws_transport_1 = __webpack_require__(/*! ./ws_transport */ \"./node_modules/@nats-io/nats-core/lib/ws_transport.js\");\nObject.defineProperty(exports, \"wsconnect\", ({ enumerable: true, get: function () { return ws_transport_1.wsconnect; } }));\nObject.defineProperty(exports, \"wsUrlParseFn\", ({ enumerable: true, get: function () { return ws_transport_1.wsUrlParseFn; } }));\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nObject.defineProperty(exports, \"AuthorizationError\", ({ enumerable: true, get: function () { return errors_1.AuthorizationError; } }));\nObject.defineProperty(exports, \"ClosedConnectionError\", ({ enumerable: true, get: function () { return errors_1.ClosedConnectionError; } }));\nObject.defineProperty(exports, \"ConnectionError\", ({ enumerable: true, get: function () { return errors_1.ConnectionError; } }));\nObject.defineProperty(exports, \"DrainingConnectionError\", ({ enumerable: true, get: function () { return errors_1.DrainingConnectionError; } }));\nObject.defineProperty(exports, \"errors\", ({ enumerable: true, get: function () { return errors_1.errors; } }));\nObject.defineProperty(exports, \"InvalidArgumentError\", ({ enumerable: true, get: function () { return errors_1.InvalidArgumentError; } }));\nObject.defineProperty(exports, \"InvalidOperationError\", ({ enumerable: true, get: function () { return errors_1.InvalidOperationError; } }));\nObject.defineProperty(exports, \"InvalidSubjectError\", ({ enumerable: true, get: function () { return errors_1.InvalidSubjectError; } }));\nObject.defineProperty(exports, \"NoRespondersError\", ({ enumerable: true, get: function () { return errors_1.NoRespondersError; } }));\nObject.defineProperty(exports, \"PermissionViolationError\", ({ enumerable: true, get: function () { return errors_1.PermissionViolationError; } }));\nObject.defineProperty(exports, \"ProtocolError\", ({ enumerable: true, get: function () { return errors_1.ProtocolError; } }));\nObject.defineProperty(exports, \"RequestError\", ({ enumerable: true, get: function () { return errors_1.RequestError; } }));\nObject.defineProperty(exports, \"TimeoutError\", ({ enumerable: true, get: function () { return errors_1.TimeoutError; } }));\nObject.defineProperty(exports, \"UserAuthenticationExpiredError\", ({ enumerable: true, get: function () { return errors_1.UserAuthenticationExpiredError; } }));\n//# sourceMappingURL=internal_mod.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/internal_mod.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/ipparser.js":
/*!*********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/ipparser.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2020-2021 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ipV4 = ipV4;\nexports.isIP = isIP;\nexports.parseIP = parseIP;\n// JavaScript port of go net/ip/ParseIP\n// https://github.com/golang/go/blob/master/src/net/ip.go\n// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\nconst IPv4LEN = 4;\nconst IPv6LEN = 16;\nconst ASCII0 = 48;\nconst ASCII9 = 57;\nconst ASCIIA = 65;\nconst ASCIIF = 70;\nconst ASCIIa = 97;\nconst ASCIIf = 102;\nconst big = 0xFFFFFF;\nfunction ipV4(a, b, c, d) {\n    const ip = new Uint8Array(IPv6LEN);\n    const prefix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff];\n    prefix.forEach((v, idx) => {\n        ip[idx] = v;\n    });\n    ip[12] = a;\n    ip[13] = b;\n    ip[14] = c;\n    ip[15] = d;\n    return ip;\n}\nfunction isIP(h) {\n    return parseIP(h) !== undefined;\n}\nfunction parseIP(h) {\n    for (let i = 0; i < h.length; i++) {\n        switch (h[i]) {\n            case \".\":\n                return parseIPv4(h);\n            case \":\":\n                return parseIPv6(h);\n        }\n    }\n    return;\n}\nfunction parseIPv4(s) {\n    const ip = new Uint8Array(IPv4LEN);\n    for (let i = 0; i < IPv4LEN; i++) {\n        if (s.length === 0) {\n            return undefined;\n        }\n        if (i > 0) {\n            if (s[0] !== \".\") {\n                return undefined;\n            }\n            s = s.substring(1);\n        }\n        const { n, c, ok } = dtoi(s);\n        if (!ok || n > 0xFF) {\n            return undefined;\n        }\n        s = s.substring(c);\n        ip[i] = n;\n    }\n    return ipV4(ip[0], ip[1], ip[2], ip[3]);\n}\nfunction parseIPv6(s) {\n    const ip = new Uint8Array(IPv6LEN);\n    let ellipsis = -1;\n    if (s.length >= 2 && s[0] === \":\" && s[1] === \":\") {\n        ellipsis = 0;\n        s = s.substring(2);\n        if (s.length === 0) {\n            return ip;\n        }\n    }\n    let i = 0;\n    while (i < IPv6LEN) {\n        const { n, c, ok } = xtoi(s);\n        if (!ok || n > 0xFFFF) {\n            return undefined;\n        }\n        if (c < s.length && s[c] === \".\") {\n            if (ellipsis < 0 && i != IPv6LEN - IPv4LEN) {\n                return undefined;\n            }\n            if (i + IPv4LEN > IPv6LEN) {\n                return undefined;\n            }\n            const ip4 = parseIPv4(s);\n            if (ip4 === undefined) {\n                return undefined;\n            }\n            ip[i] = ip4[12];\n            ip[i + 1] = ip4[13];\n            ip[i + 2] = ip4[14];\n            ip[i + 3] = ip4[15];\n            s = \"\";\n            i += IPv4LEN;\n            break;\n        }\n        ip[i] = n >> 8;\n        ip[i + 1] = n;\n        i += 2;\n        s = s.substring(c);\n        if (s.length === 0) {\n            break;\n        }\n        if (s[0] !== \":\" || s.length == 1) {\n            return undefined;\n        }\n        s = s.substring(1);\n        if (s[0] === \":\") {\n            if (ellipsis >= 0) {\n                return undefined;\n            }\n            ellipsis = i;\n            s = s.substring(1);\n            if (s.length === 0) {\n                break;\n            }\n        }\n    }\n    if (s.length !== 0) {\n        return undefined;\n    }\n    if (i < IPv6LEN) {\n        if (ellipsis < 0) {\n            return undefined;\n        }\n        const n = IPv6LEN - i;\n        for (let j = i - 1; j >= ellipsis; j--) {\n            ip[j + n] = ip[j];\n        }\n        for (let j = ellipsis + n - 1; j >= ellipsis; j--) {\n            ip[j] = 0;\n        }\n    }\n    else if (ellipsis >= 0) {\n        return undefined;\n    }\n    return ip;\n}\nfunction dtoi(s) {\n    let i = 0;\n    let n = 0;\n    for (i = 0; i < s.length && ASCII0 <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCII9; i++) {\n        n = n * 10 + (s.charCodeAt(i) - ASCII0);\n        if (n >= big) {\n            return { n: big, c: i, ok: false };\n        }\n    }\n    if (i === 0) {\n        return { n: 0, c: 0, ok: false };\n    }\n    return { n: n, c: i, ok: true };\n}\nfunction xtoi(s) {\n    let n = 0;\n    let i = 0;\n    for (i = 0; i < s.length; i++) {\n        if (ASCII0 <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCII9) {\n            n *= 16;\n            n += s.charCodeAt(i) - ASCII0;\n        }\n        else if (ASCIIa <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCIIf) {\n            n *= 16;\n            n += (s.charCodeAt(i) - ASCIIa) + 10;\n        }\n        else if (ASCIIA <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCIIF) {\n            n *= 16;\n            n += (s.charCodeAt(i) - ASCIIA) + 10;\n        }\n        else {\n            break;\n        }\n        if (n >= big) {\n            return { n: 0, c: i, ok: false };\n        }\n    }\n    if (i === 0) {\n        return { n: 0, c: i, ok: false };\n    }\n    return { n: n, c: i, ok: true };\n}\n//# sourceMappingURL=ipparser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/ipparser.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/mod.js":
/*!****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/mod.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.wsconnect = exports.usernamePasswordAuthenticator = exports.UserAuthenticationExpiredError = exports.tokenAuthenticator = exports.TimeoutError = exports.syncIterator = exports.RequestError = exports.ProtocolError = exports.PermissionViolationError = exports.nuid = exports.Nuid = exports.NoRespondersError = exports.nkeys = exports.nkeyAuthenticator = exports.nanos = exports.MsgHdrsImpl = exports.millis = exports.Metric = exports.Match = exports.jwtAuthenticator = exports.InvalidSubjectError = exports.InvalidOperationError = exports.InvalidArgumentError = exports.headers = exports.hasWsProtocol = exports.errors = exports.Empty = exports.DrainingConnectionError = exports.delay = exports.deferred = exports.deadline = exports.credsAuthenticator = exports.createInbox = exports.ConnectionError = exports.ClosedConnectionError = exports.canonicalMIMEHeaderKey = exports.buildAuthenticator = exports.Bench = exports.backoff = exports.AuthorizationError = void 0;\nvar internal_mod_1 = __webpack_require__(/*! ./internal_mod */ \"./node_modules/@nats-io/nats-core/lib/internal_mod.js\");\nObject.defineProperty(exports, \"AuthorizationError\", ({ enumerable: true, get: function () { return internal_mod_1.AuthorizationError; } }));\nObject.defineProperty(exports, \"backoff\", ({ enumerable: true, get: function () { return internal_mod_1.backoff; } }));\nObject.defineProperty(exports, \"Bench\", ({ enumerable: true, get: function () { return internal_mod_1.Bench; } }));\nObject.defineProperty(exports, \"buildAuthenticator\", ({ enumerable: true, get: function () { return internal_mod_1.buildAuthenticator; } }));\nObject.defineProperty(exports, \"canonicalMIMEHeaderKey\", ({ enumerable: true, get: function () { return internal_mod_1.canonicalMIMEHeaderKey; } }));\nObject.defineProperty(exports, \"ClosedConnectionError\", ({ enumerable: true, get: function () { return internal_mod_1.ClosedConnectionError; } }));\nObject.defineProperty(exports, \"ConnectionError\", ({ enumerable: true, get: function () { return internal_mod_1.ConnectionError; } }));\nObject.defineProperty(exports, \"createInbox\", ({ enumerable: true, get: function () { return internal_mod_1.createInbox; } }));\nObject.defineProperty(exports, \"credsAuthenticator\", ({ enumerable: true, get: function () { return internal_mod_1.credsAuthenticator; } }));\nObject.defineProperty(exports, \"deadline\", ({ enumerable: true, get: function () { return internal_mod_1.deadline; } }));\nObject.defineProperty(exports, \"deferred\", ({ enumerable: true, get: function () { return internal_mod_1.deferred; } }));\nObject.defineProperty(exports, \"delay\", ({ enumerable: true, get: function () { return internal_mod_1.delay; } }));\nObject.defineProperty(exports, \"DrainingConnectionError\", ({ enumerable: true, get: function () { return internal_mod_1.DrainingConnectionError; } }));\nObject.defineProperty(exports, \"Empty\", ({ enumerable: true, get: function () { return internal_mod_1.Empty; } }));\nObject.defineProperty(exports, \"errors\", ({ enumerable: true, get: function () { return internal_mod_1.errors; } }));\nObject.defineProperty(exports, \"hasWsProtocol\", ({ enumerable: true, get: function () { return internal_mod_1.hasWsProtocol; } }));\nObject.defineProperty(exports, \"headers\", ({ enumerable: true, get: function () { return internal_mod_1.headers; } }));\nObject.defineProperty(exports, \"InvalidArgumentError\", ({ enumerable: true, get: function () { return internal_mod_1.InvalidArgumentError; } }));\nObject.defineProperty(exports, \"InvalidOperationError\", ({ enumerable: true, get: function () { return internal_mod_1.InvalidOperationError; } }));\nObject.defineProperty(exports, \"InvalidSubjectError\", ({ enumerable: true, get: function () { return internal_mod_1.InvalidSubjectError; } }));\nObject.defineProperty(exports, \"jwtAuthenticator\", ({ enumerable: true, get: function () { return internal_mod_1.jwtAuthenticator; } }));\nObject.defineProperty(exports, \"Match\", ({ enumerable: true, get: function () { return internal_mod_1.Match; } }));\nObject.defineProperty(exports, \"Metric\", ({ enumerable: true, get: function () { return internal_mod_1.Metric; } }));\nObject.defineProperty(exports, \"millis\", ({ enumerable: true, get: function () { return internal_mod_1.millis; } }));\nObject.defineProperty(exports, \"MsgHdrsImpl\", ({ enumerable: true, get: function () { return internal_mod_1.MsgHdrsImpl; } }));\nObject.defineProperty(exports, \"nanos\", ({ enumerable: true, get: function () { return internal_mod_1.nanos; } }));\nObject.defineProperty(exports, \"nkeyAuthenticator\", ({ enumerable: true, get: function () { return internal_mod_1.nkeyAuthenticator; } }));\nObject.defineProperty(exports, \"nkeys\", ({ enumerable: true, get: function () { return internal_mod_1.nkeys; } }));\nObject.defineProperty(exports, \"NoRespondersError\", ({ enumerable: true, get: function () { return internal_mod_1.NoRespondersError; } }));\nObject.defineProperty(exports, \"Nuid\", ({ enumerable: true, get: function () { return internal_mod_1.Nuid; } }));\nObject.defineProperty(exports, \"nuid\", ({ enumerable: true, get: function () { return internal_mod_1.nuid; } }));\nObject.defineProperty(exports, \"PermissionViolationError\", ({ enumerable: true, get: function () { return internal_mod_1.PermissionViolationError; } }));\nObject.defineProperty(exports, \"ProtocolError\", ({ enumerable: true, get: function () { return internal_mod_1.ProtocolError; } }));\nObject.defineProperty(exports, \"RequestError\", ({ enumerable: true, get: function () { return internal_mod_1.RequestError; } }));\nObject.defineProperty(exports, \"syncIterator\", ({ enumerable: true, get: function () { return internal_mod_1.syncIterator; } }));\nObject.defineProperty(exports, \"TimeoutError\", ({ enumerable: true, get: function () { return internal_mod_1.TimeoutError; } }));\nObject.defineProperty(exports, \"tokenAuthenticator\", ({ enumerable: true, get: function () { return internal_mod_1.tokenAuthenticator; } }));\nObject.defineProperty(exports, \"UserAuthenticationExpiredError\", ({ enumerable: true, get: function () { return internal_mod_1.UserAuthenticationExpiredError; } }));\nObject.defineProperty(exports, \"usernamePasswordAuthenticator\", ({ enumerable: true, get: function () { return internal_mod_1.usernamePasswordAuthenticator; } }));\nObject.defineProperty(exports, \"wsconnect\", ({ enumerable: true, get: function () { return internal_mod_1.wsconnect; } }));\n//# sourceMappingURL=mod.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/mod.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/msg.js":
/*!****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/msg.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MsgImpl = void 0;\n/*\n * Copyright 2020-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst headers_1 = __webpack_require__(/*! ./headers */ \"./node_modules/@nats-io/nats-core/lib/headers.js\");\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nclass MsgImpl {\n    _headers;\n    _msg;\n    _rdata;\n    _reply;\n    _subject;\n    publisher;\n    constructor(msg, data, publisher) {\n        this._msg = msg;\n        this._rdata = data;\n        this.publisher = publisher;\n    }\n    get subject() {\n        if (this._subject) {\n            return this._subject;\n        }\n        this._subject = encoders_1.TD.decode(this._msg.subject);\n        return this._subject;\n    }\n    get reply() {\n        if (this._reply) {\n            return this._reply;\n        }\n        this._reply = encoders_1.TD.decode(this._msg.reply);\n        return this._reply;\n    }\n    get sid() {\n        return this._msg.sid;\n    }\n    get headers() {\n        if (this._msg.hdr > -1 && !this._headers) {\n            const buf = this._rdata.subarray(0, this._msg.hdr);\n            this._headers = headers_1.MsgHdrsImpl.decode(buf);\n        }\n        return this._headers;\n    }\n    get data() {\n        if (!this._rdata) {\n            return new Uint8Array(0);\n        }\n        return this._msg.hdr > -1\n            ? this._rdata.subarray(this._msg.hdr)\n            : this._rdata;\n    }\n    // eslint-ignore-next-line @typescript-eslint/no-explicit-any\n    respond(data = encoders_1.Empty, opts) {\n        if (this.reply) {\n            this.publisher.publish(this.reply, data, opts);\n            return true;\n        }\n        return false;\n    }\n    size() {\n        const subj = this._msg.subject.length;\n        const reply = this._msg.reply?.length || 0;\n        const payloadAndHeaders = this._msg.size === -1 ? 0 : this._msg.size;\n        return subj + reply + payloadAndHeaders;\n    }\n    json(reviver) {\n        return JSON.parse(this.string(), reviver);\n    }\n    string() {\n        return encoders_1.TD.decode(this.data);\n    }\n    requestInfo() {\n        const v = this.headers?.get(\"Nats-Request-Info\");\n        if (v) {\n            return JSON.parse(v, function (key, value) {\n                if ((key === \"start\" || key === \"stop\") && value !== \"\") {\n                    return new Date(Date.parse(value));\n                }\n                return value;\n            });\n        }\n        return null;\n    }\n}\nexports.MsgImpl = MsgImpl;\n//# sourceMappingURL=msg.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9tc2cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxtRUFBVztBQUNyQyxtQkFBbUIsbUJBQU8sQ0FBQyxxRUFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvbXNnLmpzPzY5YjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1zZ0ltcGwgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IDIwMjAtMjAyNCBUaGUgTkFUUyBBdXRob3JzXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuY29uc3QgaGVhZGVyc18xID0gcmVxdWlyZShcIi4vaGVhZGVyc1wiKTtcbmNvbnN0IGVuY29kZXJzXzEgPSByZXF1aXJlKFwiLi9lbmNvZGVyc1wiKTtcbmNsYXNzIE1zZ0ltcGwge1xuICAgIF9oZWFkZXJzO1xuICAgIF9tc2c7XG4gICAgX3JkYXRhO1xuICAgIF9yZXBseTtcbiAgICBfc3ViamVjdDtcbiAgICBwdWJsaXNoZXI7XG4gICAgY29uc3RydWN0b3IobXNnLCBkYXRhLCBwdWJsaXNoZXIpIHtcbiAgICAgICAgdGhpcy5fbXNnID0gbXNnO1xuICAgICAgICB0aGlzLl9yZGF0YSA9IGRhdGE7XG4gICAgICAgIHRoaXMucHVibGlzaGVyID0gcHVibGlzaGVyO1xuICAgIH1cbiAgICBnZXQgc3ViamVjdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3N1YmplY3QpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zdWJqZWN0O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3N1YmplY3QgPSBlbmNvZGVyc18xLlRELmRlY29kZSh0aGlzLl9tc2cuc3ViamVjdCk7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdWJqZWN0O1xuICAgIH1cbiAgICBnZXQgcmVwbHkoKSB7XG4gICAgICAgIGlmICh0aGlzLl9yZXBseSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3JlcGx5O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3JlcGx5ID0gZW5jb2RlcnNfMS5URC5kZWNvZGUodGhpcy5fbXNnLnJlcGx5KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlcGx5O1xuICAgIH1cbiAgICBnZXQgc2lkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbXNnLnNpZDtcbiAgICB9XG4gICAgZ2V0IGhlYWRlcnMoKSB7XG4gICAgICAgIGlmICh0aGlzLl9tc2cuaGRyID4gLTEgJiYgIXRoaXMuX2hlYWRlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ1ZiA9IHRoaXMuX3JkYXRhLnN1YmFycmF5KDAsIHRoaXMuX21zZy5oZHIpO1xuICAgICAgICAgICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnNfMS5Nc2dIZHJzSW1wbC5kZWNvZGUoYnVmKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faGVhZGVycztcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIGlmICghdGhpcy5fcmRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheSgwKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fbXNnLmhkciA+IC0xXG4gICAgICAgICAgICA/IHRoaXMuX3JkYXRhLnN1YmFycmF5KHRoaXMuX21zZy5oZHIpXG4gICAgICAgICAgICA6IHRoaXMuX3JkYXRhO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtaWdub3JlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgcmVzcG9uZChkYXRhID0gZW5jb2RlcnNfMS5FbXB0eSwgb3B0cykge1xuICAgICAgICBpZiAodGhpcy5yZXBseSkge1xuICAgICAgICAgICAgdGhpcy5wdWJsaXNoZXIucHVibGlzaCh0aGlzLnJlcGx5LCBkYXRhLCBvcHRzKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgc2l6ZSgpIHtcbiAgICAgICAgY29uc3Qgc3ViaiA9IHRoaXMuX21zZy5zdWJqZWN0Lmxlbmd0aDtcbiAgICAgICAgY29uc3QgcmVwbHkgPSB0aGlzLl9tc2cucmVwbHk/Lmxlbmd0aCB8fCAwO1xuICAgICAgICBjb25zdCBwYXlsb2FkQW5kSGVhZGVycyA9IHRoaXMuX21zZy5zaXplID09PSAtMSA/IDAgOiB0aGlzLl9tc2cuc2l6ZTtcbiAgICAgICAgcmV0dXJuIHN1YmogKyByZXBseSArIHBheWxvYWRBbmRIZWFkZXJzO1xuICAgIH1cbiAgICBqc29uKHJldml2ZXIpIHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGhpcy5zdHJpbmcoKSwgcmV2aXZlcik7XG4gICAgfVxuICAgIHN0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGVuY29kZXJzXzEuVEQuZGVjb2RlKHRoaXMuZGF0YSk7XG4gICAgfVxuICAgIHJlcXVlc3RJbmZvKCkge1xuICAgICAgICBjb25zdCB2ID0gdGhpcy5oZWFkZXJzPy5nZXQoXCJOYXRzLVJlcXVlc3QtSW5mb1wiKTtcbiAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHYsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKChrZXkgPT09IFwic3RhcnRcIiB8fCBrZXkgPT09IFwic3RvcFwiKSAmJiB2YWx1ZSAhPT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoRGF0ZS5wYXJzZSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG5leHBvcnRzLk1zZ0ltcGwgPSBNc2dJbXBsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXNnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/msg.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/muxsubscription.js":
/*!****************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/muxsubscription.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MuxSubscription = void 0;\nconst core_1 = __webpack_require__(/*! ./core */ \"./node_modules/@nats-io/nats-core/lib/core.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nclass MuxSubscription {\n    baseInbox;\n    reqs;\n    constructor() {\n        this.reqs = new Map();\n    }\n    size() {\n        return this.reqs.size;\n    }\n    init(prefix) {\n        this.baseInbox = `${(0, core_1.createInbox)(prefix)}.`;\n        return this.baseInbox;\n    }\n    add(r) {\n        if (!isNaN(r.received)) {\n            r.received = 0;\n        }\n        this.reqs.set(r.token, r);\n    }\n    get(token) {\n        return this.reqs.get(token);\n    }\n    cancel(r) {\n        this.reqs.delete(r.token);\n    }\n    getToken(m) {\n        const s = m.subject || \"\";\n        if (s.indexOf(this.baseInbox) === 0) {\n            return s.substring(this.baseInbox.length);\n        }\n        return null;\n    }\n    all() {\n        return Array.from(this.reqs.values());\n    }\n    handleError(isMuxPermissionError, err) {\n        if (isMuxPermissionError) {\n            // one or more requests queued but mux cannot process them\n            this.all().forEach((r) => {\n                r.resolver(err, {});\n            });\n            return true;\n        }\n        if (err.operation === \"publish\") {\n            const req = this.all().find((s) => {\n                return s.requestSubject === err.subject;\n            });\n            if (req) {\n                req.resolver(err, {});\n                return true;\n            }\n        }\n        return false;\n    }\n    dispatcher() {\n        return (err, m) => {\n            const token = this.getToken(m);\n            if (token) {\n                const r = this.get(token);\n                if (r) {\n                    if (err === null) {\n                        err = (m?.data?.length === 0 && m.headers?.code === 503)\n                            ? new errors_1.NoRespondersError(r.requestSubject)\n                            : null;\n                    }\n                    r.resolver(err, m);\n                }\n            }\n        };\n    }\n    close() {\n        const err = new errors_1.RequestError(\"connection closed\");\n        this.reqs.forEach((req) => {\n            req.resolver(err, {});\n        });\n    }\n}\nexports.MuxSubscription = MuxSubscription;\n//# sourceMappingURL=muxsubscription.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9tdXhzdWJzY3JpcHRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyw2REFBUTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQyxpRUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixnQ0FBZ0M7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDLFNBQVM7QUFDVDtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmF0cy1pby9uYXRzLWNvcmUvbGliL211eHN1YnNjcmlwdGlvbi5qcz9hMjcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdXhTdWJzY3JpcHRpb24gPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiLi9jb3JlXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5jbGFzcyBNdXhTdWJzY3JpcHRpb24ge1xuICAgIGJhc2VJbmJveDtcbiAgICByZXFzO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnJlcXMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIHNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcXMuc2l6ZTtcbiAgICB9XG4gICAgaW5pdChwcmVmaXgpIHtcbiAgICAgICAgdGhpcy5iYXNlSW5ib3ggPSBgJHsoMCwgY29yZV8xLmNyZWF0ZUluYm94KShwcmVmaXgpfS5gO1xuICAgICAgICByZXR1cm4gdGhpcy5iYXNlSW5ib3g7XG4gICAgfVxuICAgIGFkZChyKSB7XG4gICAgICAgIGlmICghaXNOYU4oci5yZWNlaXZlZCkpIHtcbiAgICAgICAgICAgIHIucmVjZWl2ZWQgPSAwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVxcy5zZXQoci50b2tlbiwgcik7XG4gICAgfVxuICAgIGdldCh0b2tlbikge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXFzLmdldCh0b2tlbik7XG4gICAgfVxuICAgIGNhbmNlbChyKSB7XG4gICAgICAgIHRoaXMucmVxcy5kZWxldGUoci50b2tlbik7XG4gICAgfVxuICAgIGdldFRva2VuKG0pIHtcbiAgICAgICAgY29uc3QgcyA9IG0uc3ViamVjdCB8fCBcIlwiO1xuICAgICAgICBpZiAocy5pbmRleE9mKHRoaXMuYmFzZUluYm94KSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHMuc3Vic3RyaW5nKHRoaXMuYmFzZUluYm94Lmxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGFsbCgpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5yZXFzLnZhbHVlcygpKTtcbiAgICB9XG4gICAgaGFuZGxlRXJyb3IoaXNNdXhQZXJtaXNzaW9uRXJyb3IsIGVycikge1xuICAgICAgICBpZiAoaXNNdXhQZXJtaXNzaW9uRXJyb3IpIHtcbiAgICAgICAgICAgIC8vIG9uZSBvciBtb3JlIHJlcXVlc3RzIHF1ZXVlZCBidXQgbXV4IGNhbm5vdCBwcm9jZXNzIHRoZW1cbiAgICAgICAgICAgIHRoaXMuYWxsKCkuZm9yRWFjaCgocikgPT4ge1xuICAgICAgICAgICAgICAgIHIucmVzb2x2ZXIoZXJyLCB7fSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnIub3BlcmF0aW9uID09PSBcInB1Ymxpc2hcIikge1xuICAgICAgICAgICAgY29uc3QgcmVxID0gdGhpcy5hbGwoKS5maW5kKChzKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHMucmVxdWVzdFN1YmplY3QgPT09IGVyci5zdWJqZWN0O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAocmVxKSB7XG4gICAgICAgICAgICAgICAgcmVxLnJlc29sdmVyKGVyciwge30pO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZGlzcGF0Y2hlcigpIHtcbiAgICAgICAgcmV0dXJuIChlcnIsIG0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRva2VuID0gdGhpcy5nZXRUb2tlbihtKTtcbiAgICAgICAgICAgIGlmICh0b2tlbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHIgPSB0aGlzLmdldCh0b2tlbik7XG4gICAgICAgICAgICAgICAgaWYgKHIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVyciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXJyID0gKG0/LmRhdGE/Lmxlbmd0aCA9PT0gMCAmJiBtLmhlYWRlcnM/LmNvZGUgPT09IDUwMylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IG5ldyBlcnJvcnNfMS5Ob1Jlc3BvbmRlcnNFcnJvcihyLnJlcXVlc3RTdWJqZWN0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByLnJlc29sdmVyKGVyciwgbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgY29uc3QgZXJyID0gbmV3IGVycm9yc18xLlJlcXVlc3RFcnJvcihcImNvbm5lY3Rpb24gY2xvc2VkXCIpO1xuICAgICAgICB0aGlzLnJlcXMuZm9yRWFjaCgocmVxKSA9PiB7XG4gICAgICAgICAgICByZXEucmVzb2x2ZXIoZXJyLCB7fSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuTXV4U3Vic2NyaXB0aW9uID0gTXV4U3Vic2NyaXB0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXV4c3Vic2NyaXB0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/muxsubscription.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/nats.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/nats.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2018-2023 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NatsConnectionImpl = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nconst protocol_1 = __webpack_require__(/*! ./protocol */ \"./node_modules/@nats-io/nats-core/lib/protocol.js\");\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nconst semver_1 = __webpack_require__(/*! ./semver */ \"./node_modules/@nats-io/nats-core/lib/semver.js\");\nconst options_1 = __webpack_require__(/*! ./options */ \"./node_modules/@nats-io/nats-core/lib/options.js\");\nconst queued_iterator_1 = __webpack_require__(/*! ./queued_iterator */ \"./node_modules/@nats-io/nats-core/lib/queued_iterator.js\");\nconst request_1 = __webpack_require__(/*! ./request */ \"./node_modules/@nats-io/nats-core/lib/request.js\");\nconst core_1 = __webpack_require__(/*! ./core */ \"./node_modules/@nats-io/nats-core/lib/core.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nclass NatsConnectionImpl {\n    options;\n    protocol;\n    draining;\n    constructor(opts) {\n        this.draining = false;\n        this.options = (0, options_1.parseOptions)(opts);\n    }\n    static connect(opts = {}) {\n        return new Promise((resolve, reject) => {\n            const nc = new NatsConnectionImpl(opts);\n            protocol_1.ProtocolHandler.connect(nc.options, nc)\n                .then((ph) => {\n                nc.protocol = ph;\n                resolve(nc);\n            })\n                .catch((err) => {\n                reject(err);\n            });\n        });\n    }\n    closed() {\n        return this.protocol.closed;\n    }\n    async close() {\n        await this.protocol.close();\n    }\n    _check(subject, sub, pub) {\n        if (this.isClosed()) {\n            throw new errors_1.errors.ClosedConnectionError();\n        }\n        if (sub && this.isDraining()) {\n            throw new errors_1.errors.DrainingConnectionError();\n        }\n        if (pub && this.protocol.noMorePublishing) {\n            throw new errors_1.errors.DrainingConnectionError();\n        }\n        subject = subject || \"\";\n        if (subject.length === 0) {\n            throw new errors_1.errors.InvalidSubjectError(subject);\n        }\n    }\n    publish(subject, data, options) {\n        this._check(subject, false, true);\n        if (options?.reply) {\n            this._check(options.reply, false, true);\n        }\n        this.protocol.publish(subject, data, options);\n    }\n    publishMessage(msg) {\n        return this.publish(msg.subject, msg.data, {\n            reply: msg.reply,\n            headers: msg.headers,\n        });\n    }\n    respondMessage(msg) {\n        if (msg.reply) {\n            this.publish(msg.reply, msg.data, {\n                reply: msg.reply,\n                headers: msg.headers,\n            });\n            return true;\n        }\n        return false;\n    }\n    subscribe(subject, opts = {}) {\n        this._check(subject, true, false);\n        const sub = new protocol_1.SubscriptionImpl(this.protocol, subject, opts);\n        if (typeof opts.callback !== \"function\" && typeof opts.slow === \"number\") {\n            sub.setSlowNotificationFn(opts.slow, (pending) => {\n                this.protocol.dispatchStatus({\n                    type: \"slowConsumer\",\n                    sub,\n                    pending,\n                });\n            });\n        }\n        this.protocol.subscribe(sub);\n        return sub;\n    }\n    _resub(s, subject, max) {\n        this._check(subject, true, false);\n        const si = s;\n        // FIXME: need way of understanding a callbacks processed\n        //   count without it, we cannot really do much - ie\n        //   for rejected messages, the count would be lower, etc.\n        //   To handle cases were for example KV is building a map\n        //   the consumer would say how many messages we need to do\n        //   a proper build before we can handle updates.\n        si.max = max; // this might clear it\n        if (max) {\n            // we cannot auto-unsub, because we don't know the\n            // number of messages we processed vs received\n            // allow the auto-unsub on processMsg to work if they\n            // we were called with a new max\n            si.max = max + si.received;\n        }\n        this.protocol.resub(si, subject);\n    }\n    // possibilities are:\n    // stop on error or any non-100 status\n    // AND:\n    // - wait for timer\n    // - wait for n messages or timer\n    // - wait for unknown messages, done when empty or reset timer expires (with possible alt wait)\n    // - wait for unknown messages, done when an empty payload is received or timer expires (with possible alt wait)\n    requestMany(subject, data = encoders_1.Empty, opts = { maxWait: 1000, maxMessages: -1 }) {\n        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\n        try {\n            this._check(subject, true, true);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n        opts.strategy = opts.strategy || \"timer\";\n        opts.maxWait = opts.maxWait || 1000;\n        if (opts.maxWait < 1) {\n            return Promise.reject(errors_1.InvalidArgumentError.format(\"timeout\", \"must be greater than 0\"));\n        }\n        // the iterator for user results\n        const qi = new queued_iterator_1.QueuedIteratorImpl();\n        function stop(err) {\n            qi.push(() => {\n                qi.stop(err);\n            });\n        }\n        // callback for the subscription or the mux handler\n        // simply pushes errors and messages into the iterator\n        function callback(err, msg) {\n            if (err || msg === null) {\n                stop(err === null ? undefined : err);\n            }\n            else {\n                qi.push(msg);\n            }\n        }\n        if (opts.noMux) {\n            // we setup a subscription and manage it\n            const stack = asyncTraces ? new Error().stack : null;\n            let max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0\n                ? opts.maxMessages\n                : -1;\n            const sub = this.subscribe((0, core_1.createInbox)(this.options.inboxPrefix), {\n                callback: (err, msg) => {\n                    // we only expect runtime errors or a no responders\n                    if (msg?.data?.length === 0 &&\n                        msg?.headers?.status === \"503\") {\n                        err = new errors_1.errors.NoRespondersError(subject);\n                    }\n                    // augment any error with the current stack to provide context\n                    // for the error on the suer code\n                    if (err) {\n                        if (stack) {\n                            err.stack += `\\n\\n${stack}`;\n                        }\n                        cancel(err);\n                        return;\n                    }\n                    // push the message\n                    callback(null, msg);\n                    // see if the m request is completed\n                    if (opts.strategy === \"count\") {\n                        max--;\n                        if (max === 0) {\n                            cancel();\n                        }\n                    }\n                    if (opts.strategy === \"stall\") {\n                        clearTimers();\n                        timer = setTimeout(() => {\n                            cancel();\n                        }, 300);\n                    }\n                    if (opts.strategy === \"sentinel\") {\n                        if (msg && msg.data.length === 0) {\n                            cancel();\n                        }\n                    }\n                },\n            });\n            sub.requestSubject = subject;\n            sub.closed\n                .then(() => {\n                stop();\n            })\n                .catch((err) => {\n                qi.stop(err);\n            });\n            const cancel = (err) => {\n                if (err) {\n                    qi.push(() => {\n                        throw err;\n                    });\n                }\n                clearTimers();\n                sub.drain()\n                    .then(() => {\n                    stop();\n                })\n                    .catch((_err) => {\n                    stop();\n                });\n            };\n            qi.iterClosed\n                .then(() => {\n                clearTimers();\n                sub?.unsubscribe();\n            })\n                .catch((_err) => {\n                clearTimers();\n                sub?.unsubscribe();\n            });\n            try {\n                this.publish(subject, data, { reply: sub.getSubject() });\n            }\n            catch (err) {\n                cancel(err);\n            }\n            let timer = setTimeout(() => {\n                cancel();\n            }, opts.maxWait);\n            const clearTimers = () => {\n                if (timer) {\n                    clearTimeout(timer);\n                }\n            };\n        }\n        else {\n            // the ingestion is the RequestMany\n            const rmo = opts;\n            rmo.callback = callback;\n            qi.iterClosed.then(() => {\n                r.cancel();\n            }).catch((err) => {\n                r.cancel(err);\n            });\n            const r = new request_1.RequestMany(this.protocol.muxSubscriptions, subject, rmo);\n            this.protocol.request(r);\n            try {\n                this.publish(subject, data, {\n                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\n                    headers: opts.headers,\n                });\n            }\n            catch (err) {\n                r.cancel(err);\n            }\n        }\n        return Promise.resolve(qi);\n    }\n    request(subject, data, opts = { timeout: 1000, noMux: false }) {\n        try {\n            this._check(subject, true, true);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\n        opts.timeout = opts.timeout || 1000;\n        if (opts.timeout < 1) {\n            return Promise.reject(errors_1.InvalidArgumentError.format(\"timeout\", `must be greater than 0`));\n        }\n        if (!opts.noMux && opts.reply) {\n            return Promise.reject(errors_1.InvalidArgumentError.format([\"reply\", \"noMux\"], \"are mutually exclusive\"));\n        }\n        if (opts.noMux) {\n            const inbox = opts.reply\n                ? opts.reply\n                : (0, core_1.createInbox)(this.options.inboxPrefix);\n            const d = (0, util_1.deferred)();\n            const errCtx = asyncTraces ? new errors_1.errors.RequestError(\"\") : null;\n            const sub = this.subscribe(inbox, {\n                max: 1,\n                timeout: opts.timeout,\n                callback: (err, msg) => {\n                    // check for no responders status\n                    if (msg && msg.data?.length === 0 && msg.headers?.code === 503) {\n                        err = new errors_1.errors.NoRespondersError(subject);\n                    }\n                    if (err) {\n                        // we have a proper stack on timeout\n                        if (!(err instanceof errors_1.TimeoutError)) {\n                            if (errCtx) {\n                                errCtx.message = err.message;\n                                errCtx.cause = err;\n                                err = errCtx;\n                            }\n                            else {\n                                err = new errors_1.errors.RequestError(err.message, { cause: err });\n                            }\n                        }\n                        d.reject(err);\n                        sub.unsubscribe();\n                    }\n                    else {\n                        d.resolve(msg);\n                    }\n                },\n            });\n            sub.requestSubject = subject;\n            this.protocol.publish(subject, data, {\n                reply: inbox,\n                headers: opts.headers,\n            });\n            return d;\n        }\n        else {\n            const r = new request_1.RequestOne(this.protocol.muxSubscriptions, subject, opts, asyncTraces);\n            this.protocol.request(r);\n            try {\n                this.publish(subject, data, {\n                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\n                    headers: opts.headers,\n                });\n            }\n            catch (err) {\n                r.cancel(err);\n            }\n            const p = Promise.race([r.timer, r.deferred]);\n            p.catch(() => {\n                r.cancel();\n            });\n            return p;\n        }\n    }\n    /** *\n     * Flushes to the server. Promise resolves when round-trip completes.\n     * @returns {Promise<void>}\n     */\n    flush() {\n        if (this.isClosed()) {\n            return Promise.reject(new errors_1.errors.ClosedConnectionError());\n        }\n        return this.protocol.flush();\n    }\n    drain() {\n        if (this.isClosed()) {\n            return Promise.reject(new errors_1.errors.ClosedConnectionError());\n        }\n        if (this.isDraining()) {\n            return Promise.reject(new errors_1.errors.DrainingConnectionError());\n        }\n        this.draining = true;\n        return this.protocol.drain();\n    }\n    isClosed() {\n        return this.protocol.isClosed();\n    }\n    isDraining() {\n        return this.draining;\n    }\n    getServer() {\n        const srv = this.protocol.getServer();\n        return srv ? srv.listen : \"\";\n    }\n    status() {\n        const iter = new queued_iterator_1.QueuedIteratorImpl();\n        iter.iterClosed.then(() => {\n            const idx = this.protocol.listeners.indexOf(iter);\n            if (idx > -1) {\n                this.protocol.listeners.splice(idx, 1);\n            }\n        });\n        this.protocol.listeners.push(iter);\n        return iter;\n    }\n    get info() {\n        return this.protocol.isClosed() ? undefined : this.protocol.info;\n    }\n    async context() {\n        const r = await this.request(`$SYS.REQ.USER.INFO`);\n        return r.json((key, value) => {\n            if (key === \"time\") {\n                return new Date(Date.parse(value));\n            }\n            return value;\n        });\n    }\n    stats() {\n        return {\n            inBytes: this.protocol.inBytes,\n            outBytes: this.protocol.outBytes,\n            inMsgs: this.protocol.inMsgs,\n            outMsgs: this.protocol.outMsgs,\n        };\n    }\n    getServerVersion() {\n        const info = this.info;\n        return info ? (0, semver_1.parseSemVer)(info.version) : undefined;\n    }\n    async rtt() {\n        if (this.isClosed()) {\n            throw new errors_1.errors.ClosedConnectionError();\n        }\n        if (!this.protocol.connected) {\n            throw new errors_1.errors.RequestError(\"connection disconnected\");\n        }\n        const start = Date.now();\n        await this.flush();\n        return Date.now() - start;\n    }\n    get features() {\n        return this.protocol.features;\n    }\n    reconnect() {\n        if (this.isClosed()) {\n            return Promise.reject(new errors_1.errors.ClosedConnectionError());\n        }\n        if (this.isDraining()) {\n            return Promise.reject(new errors_1.errors.DrainingConnectionError());\n        }\n        return this.protocol.reconnect();\n    }\n}\nexports.NatsConnectionImpl = NatsConnectionImpl;\n//# sourceMappingURL=nats.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/nats.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/nkeys.js":
/*!******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/nkeys.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.nkeys = void 0;\nexports.nkeys = __importStar(__webpack_require__(/*! @nats-io/nkeys */ \"./node_modules/@nats-io/nkeys/lib/mod.js\"));\n//# sourceMappingURL=nkeys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9ua2V5cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGFBQWEsZ0JBQWdCLG1CQUFPLENBQUMsZ0VBQWdCO0FBQ3JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmF0cy1pby9uYXRzLWNvcmUvbGliL25rZXlzLmpzPzMyYTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubmtleXMgPSB2b2lkIDA7XG5leHBvcnRzLm5rZXlzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJAbmF0cy1pby9ua2V5c1wiKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ua2V5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/nkeys.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/nuid.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/nuid.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2016-2021 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.nuid = exports.Nuid = void 0;\nvar nuid_1 = __webpack_require__(/*! @nats-io/nuid */ \"./node_modules/@nats-io/nuid/lib/nuid.js\");\nObject.defineProperty(exports, \"Nuid\", ({ enumerable: true, get: function () { return nuid_1.Nuid; } }));\nObject.defineProperty(exports, \"nuid\", ({ enumerable: true, get: function () { return nuid_1.nuid; } }));\n//# sourceMappingURL=nuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9udWlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZLEdBQUcsWUFBWTtBQUMzQixhQUFhLG1CQUFPLENBQUMsK0RBQWU7QUFDcEMsd0NBQXVDLEVBQUUscUNBQXFDLHVCQUF1QixFQUFDO0FBQ3RHLHdDQUF1QyxFQUFFLHFDQUFxQyx1QkFBdUIsRUFBQztBQUN0RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9udWlkLmpzP2QyZTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IDIwMTYtMjAyMSBUaGUgTkFUUyBBdXRob3JzXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5udWlkID0gZXhwb3J0cy5OdWlkID0gdm9pZCAwO1xudmFyIG51aWRfMSA9IHJlcXVpcmUoXCJAbmF0cy1pby9udWlkXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTnVpZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbnVpZF8xLk51aWQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJudWlkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBudWlkXzEubnVpZDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW51aWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/nuid.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/options.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/options.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2021-2023 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_RECONNECT_TIME_WAIT = exports.DEFAULT_MAX_PING_OUT = exports.DEFAULT_PING_INTERVAL = exports.DEFAULT_JITTER_TLS = exports.DEFAULT_JITTER = exports.DEFAULT_MAX_RECONNECT_ATTEMPTS = void 0;\nexports.defaultOptions = defaultOptions;\nexports.hasWsProtocol = hasWsProtocol;\nexports.buildAuthenticator = buildAuthenticator;\nexports.parseOptions = parseOptions;\nexports.checkOptions = checkOptions;\nexports.checkUnsupportedOption = checkUnsupportedOption;\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nconst transport_1 = __webpack_require__(/*! ./transport */ \"./node_modules/@nats-io/nats-core/lib/transport.js\");\nconst core_1 = __webpack_require__(/*! ./core */ \"./node_modules/@nats-io/nats-core/lib/core.js\");\nconst authenticator_1 = __webpack_require__(/*! ./authenticator */ \"./node_modules/@nats-io/nats-core/lib/authenticator.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nexports.DEFAULT_MAX_RECONNECT_ATTEMPTS = 10;\nexports.DEFAULT_JITTER = 100;\nexports.DEFAULT_JITTER_TLS = 1000;\n// Ping interval\nexports.DEFAULT_PING_INTERVAL = 2 * 60 * 1000; // 2 minutes\nexports.DEFAULT_MAX_PING_OUT = 2;\n// DISCONNECT Parameters, 2 sec wait, 10 tries\nexports.DEFAULT_RECONNECT_TIME_WAIT = 2 * 1000;\nfunction defaultOptions() {\n    return {\n        maxPingOut: exports.DEFAULT_MAX_PING_OUT,\n        maxReconnectAttempts: exports.DEFAULT_MAX_RECONNECT_ATTEMPTS,\n        noRandomize: false,\n        pedantic: false,\n        pingInterval: exports.DEFAULT_PING_INTERVAL,\n        reconnect: true,\n        reconnectJitter: exports.DEFAULT_JITTER,\n        reconnectJitterTLS: exports.DEFAULT_JITTER_TLS,\n        reconnectTimeWait: exports.DEFAULT_RECONNECT_TIME_WAIT,\n        tls: undefined,\n        verbose: false,\n        waitOnFirstConnect: false,\n        ignoreAuthErrorAbort: false,\n    };\n}\nfunction hasWsProtocol(opts) {\n    if (opts) {\n        let { servers } = opts;\n        if (typeof servers === \"string\") {\n            servers = [servers];\n        }\n        if (servers) {\n            for (let i = 0; i < servers.length; i++) {\n                const s = servers[i].toLowerCase();\n                if (s.startsWith(\"ws://\") || s.startsWith(\"wss://\")) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction buildAuthenticator(opts) {\n    const buf = [];\n    // jwtAuthenticator is created by the user, since it\n    // will require possibly reading files which\n    // some of the clients are simply unable to do\n    if (typeof opts.authenticator === \"function\") {\n        buf.push(opts.authenticator);\n    }\n    if (Array.isArray(opts.authenticator)) {\n        buf.push(...opts.authenticator);\n    }\n    if (opts.token) {\n        buf.push((0, authenticator_1.tokenAuthenticator)(opts.token));\n    }\n    if (opts.user) {\n        buf.push((0, authenticator_1.usernamePasswordAuthenticator)(opts.user, opts.pass));\n    }\n    return buf.length === 0 ? (0, authenticator_1.noAuthFn)() : (0, authenticator_1.multiAuthenticator)(buf);\n}\nfunction parseOptions(opts) {\n    const dhp = `${core_1.DEFAULT_HOST}:${(0, transport_1.defaultPort)()}`;\n    opts = opts || { servers: [dhp] };\n    opts.servers = opts.servers || [];\n    if (typeof opts.servers === \"string\") {\n        opts.servers = [opts.servers];\n    }\n    if (opts.servers.length > 0 && opts.port) {\n        throw errors_1.InvalidArgumentError.format([\"servers\", \"port\"], \"are mutually exclusive\");\n    }\n    if (opts.servers.length === 0 && opts.port) {\n        opts.servers = [`${core_1.DEFAULT_HOST}:${opts.port}`];\n    }\n    if (opts.servers && opts.servers.length === 0) {\n        opts.servers = [dhp];\n    }\n    const options = (0, util_1.extend)(defaultOptions(), opts);\n    options.authenticator = buildAuthenticator(options);\n    [\"reconnectDelayHandler\", \"authenticator\"].forEach((n) => {\n        if (options[n] && typeof options[n] !== \"function\") {\n            throw TypeError(`'${n}' must be a function`);\n        }\n    });\n    if (!options.reconnectDelayHandler) {\n        options.reconnectDelayHandler = () => {\n            let extra = options.tls\n                ? options.reconnectJitterTLS\n                : options.reconnectJitter;\n            if (extra) {\n                extra++;\n                extra = Math.floor(Math.random() * extra);\n            }\n            return options.reconnectTimeWait + extra;\n        };\n    }\n    if (options.inboxPrefix) {\n        (0, core_1.createInbox)(options.inboxPrefix);\n    }\n    // if not set - we set it\n    if (options.resolve === undefined) {\n        // set a default based on whether the client can resolve or not\n        options.resolve = typeof (0, transport_1.getResolveFn)() === \"function\";\n    }\n    if (options.resolve) {\n        if (typeof (0, transport_1.getResolveFn)() !== \"function\") {\n            throw errors_1.InvalidArgumentError.format(\"resolve\", \"is not supported in the current runtime\");\n        }\n    }\n    return options;\n}\nfunction checkOptions(info, options) {\n    const { proto, tls_required: tlsRequired, tls_available: tlsAvailable } = info;\n    if ((proto === undefined || proto < 1) && options.noEcho) {\n        throw new errors_1.errors.ConnectionError(`server does not support 'noEcho'`);\n    }\n    const tls = tlsRequired || tlsAvailable || false;\n    if (options.tls && !tls) {\n        throw new errors_1.errors.ConnectionError(`server does not support 'tls'`);\n    }\n}\nfunction checkUnsupportedOption(prop, v) {\n    if (v) {\n        throw errors_1.InvalidArgumentError.format(prop, \"is not supported\");\n    }\n}\n//# sourceMappingURL=options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/options.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/parser.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/parser.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.State = exports.Parser = exports.Kind = void 0;\nexports.describe = describe;\n// deno-lint-ignore-file no-undef\n/*\n * Copyright 2020-2021 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst denobuffer_1 = __webpack_require__(/*! ./denobuffer */ \"./node_modules/@nats-io/nats-core/lib/denobuffer.js\");\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nvar Kind;\n(function (Kind) {\n    Kind[Kind[\"OK\"] = 0] = \"OK\";\n    Kind[Kind[\"ERR\"] = 1] = \"ERR\";\n    Kind[Kind[\"MSG\"] = 2] = \"MSG\";\n    Kind[Kind[\"INFO\"] = 3] = \"INFO\";\n    Kind[Kind[\"PING\"] = 4] = \"PING\";\n    Kind[Kind[\"PONG\"] = 5] = \"PONG\";\n})(Kind || (exports.Kind = Kind = {}));\nfunction describe(e) {\n    let ks;\n    let data = \"\";\n    switch (e.kind) {\n        case Kind.MSG:\n            ks = \"MSG\";\n            break;\n        case Kind.OK:\n            ks = \"OK\";\n            break;\n        case Kind.ERR:\n            ks = \"ERR\";\n            data = encoders_1.TD.decode(e.data);\n            break;\n        case Kind.PING:\n            ks = \"PING\";\n            break;\n        case Kind.PONG:\n            ks = \"PONG\";\n            break;\n        case Kind.INFO:\n            ks = \"INFO\";\n            data = encoders_1.TD.decode(e.data);\n    }\n    return `${ks}: ${data}`;\n}\nfunction newMsgArg() {\n    const ma = {};\n    ma.sid = -1;\n    ma.hdr = -1;\n    ma.size = -1;\n    return ma;\n}\nconst ASCII_0 = 48;\nconst ASCII_9 = 57;\n// This is an almost verbatim port of the Go NATS parser\n// https://github.com/nats-io/nats.go/blob/master/parser.go\nclass Parser {\n    dispatcher;\n    state;\n    as;\n    drop;\n    hdr;\n    ma;\n    argBuf;\n    msgBuf;\n    constructor(dispatcher) {\n        this.dispatcher = dispatcher;\n        this.state = State.OP_START;\n        this.as = 0;\n        this.drop = 0;\n        this.hdr = 0;\n    }\n    parse(buf) {\n        let i;\n        for (i = 0; i < buf.length; i++) {\n            const b = buf[i];\n            switch (this.state) {\n                case State.OP_START:\n                    switch (b) {\n                        case cc.M:\n                        case cc.m:\n                            this.state = State.OP_M;\n                            this.hdr = -1;\n                            this.ma = newMsgArg();\n                            break;\n                        case cc.H:\n                        case cc.h:\n                            this.state = State.OP_H;\n                            this.hdr = 0;\n                            this.ma = newMsgArg();\n                            break;\n                        case cc.P:\n                        case cc.p:\n                            this.state = State.OP_P;\n                            break;\n                        case cc.PLUS:\n                            this.state = State.OP_PLUS;\n                            break;\n                        case cc.MINUS:\n                            this.state = State.OP_MINUS;\n                            break;\n                        case cc.I:\n                        case cc.i:\n                            this.state = State.OP_I;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_H:\n                    switch (b) {\n                        case cc.M:\n                        case cc.m:\n                            this.state = State.OP_M;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_M:\n                    switch (b) {\n                        case cc.S:\n                        case cc.s:\n                            this.state = State.OP_MS;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MS:\n                    switch (b) {\n                        case cc.G:\n                        case cc.g:\n                            this.state = State.OP_MSG;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MSG:\n                    switch (b) {\n                        case cc.SPACE:\n                        case cc.TAB:\n                            this.state = State.OP_MSG_SPC;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MSG_SPC:\n                    switch (b) {\n                        case cc.SPACE:\n                        case cc.TAB:\n                            continue;\n                        default:\n                            this.state = State.MSG_ARG;\n                            this.as = i;\n                    }\n                    break;\n                case State.MSG_ARG:\n                    switch (b) {\n                        case cc.CR:\n                            this.drop = 1;\n                            break;\n                        case cc.NL: {\n                            const arg = this.argBuf\n                                ? this.argBuf.bytes()\n                                : buf.subarray(this.as, i - this.drop);\n                            this.processMsgArgs(arg);\n                            this.drop = 0;\n                            this.as = i + 1;\n                            this.state = State.MSG_PAYLOAD;\n                            // jump ahead with the index. If this overruns\n                            // what is left we fall out and process a split buffer.\n                            i = this.as + this.ma.size - 1;\n                            break;\n                        }\n                        default:\n                            if (this.argBuf) {\n                                this.argBuf.writeByte(b);\n                            }\n                    }\n                    break;\n                case State.MSG_PAYLOAD:\n                    if (this.msgBuf) {\n                        if (this.msgBuf.length >= this.ma.size) {\n                            const data = this.msgBuf.bytes({ copy: false });\n                            this.dispatcher.push({ kind: Kind.MSG, msg: this.ma, data: data });\n                            this.argBuf = undefined;\n                            this.msgBuf = undefined;\n                            this.state = State.MSG_END;\n                        }\n                        else {\n                            let toCopy = this.ma.size - this.msgBuf.length;\n                            const avail = buf.length - i;\n                            if (avail < toCopy) {\n                                toCopy = avail;\n                            }\n                            if (toCopy > 0) {\n                                this.msgBuf.write(buf.subarray(i, i + toCopy));\n                                i = (i + toCopy) - 1;\n                            }\n                            else {\n                                this.msgBuf.writeByte(b);\n                            }\n                        }\n                    }\n                    else if (i - this.as >= this.ma.size) {\n                        this.dispatcher.push({ kind: Kind.MSG, msg: this.ma, data: buf.subarray(this.as, i) });\n                        this.argBuf = undefined;\n                        this.msgBuf = undefined;\n                        this.state = State.MSG_END;\n                    }\n                    break;\n                case State.MSG_END:\n                    switch (b) {\n                        case cc.NL:\n                            this.drop = 0;\n                            this.as = i + 1;\n                            this.state = State.OP_START;\n                            break;\n                        default:\n                            continue;\n                    }\n                    break;\n                case State.OP_PLUS:\n                    switch (b) {\n                        case cc.O:\n                        case cc.o:\n                            this.state = State.OP_PLUS_O;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PLUS_O:\n                    switch (b) {\n                        case cc.K:\n                        case cc.k:\n                            this.state = State.OP_PLUS_OK;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PLUS_OK:\n                    switch (b) {\n                        case cc.NL:\n                            this.dispatcher.push({ kind: Kind.OK });\n                            this.drop = 0;\n                            this.state = State.OP_START;\n                            break;\n                    }\n                    break;\n                case State.OP_MINUS:\n                    switch (b) {\n                        case cc.E:\n                        case cc.e:\n                            this.state = State.OP_MINUS_E;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_E:\n                    switch (b) {\n                        case cc.R:\n                        case cc.r:\n                            this.state = State.OP_MINUS_ER;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_ER:\n                    switch (b) {\n                        case cc.R:\n                        case cc.r:\n                            this.state = State.OP_MINUS_ERR;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_ERR:\n                    switch (b) {\n                        case cc.SPACE:\n                        case cc.TAB:\n                            this.state = State.OP_MINUS_ERR_SPC;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_ERR_SPC:\n                    switch (b) {\n                        case cc.SPACE:\n                        case cc.TAB:\n                            continue;\n                        default:\n                            this.state = State.MINUS_ERR_ARG;\n                            this.as = i;\n                    }\n                    break;\n                case State.MINUS_ERR_ARG:\n                    switch (b) {\n                        case cc.CR:\n                            this.drop = 1;\n                            break;\n                        case cc.NL: {\n                            let arg;\n                            if (this.argBuf) {\n                                arg = this.argBuf.bytes();\n                                this.argBuf = undefined;\n                            }\n                            else {\n                                arg = buf.subarray(this.as, i - this.drop);\n                            }\n                            this.dispatcher.push({ kind: Kind.ERR, data: arg });\n                            this.drop = 0;\n                            this.as = i + 1;\n                            this.state = State.OP_START;\n                            break;\n                        }\n                        default:\n                            if (this.argBuf) {\n                                this.argBuf.write(Uint8Array.of(b));\n                            }\n                    }\n                    break;\n                case State.OP_P:\n                    switch (b) {\n                        case cc.I:\n                        case cc.i:\n                            this.state = State.OP_PI;\n                            break;\n                        case cc.O:\n                        case cc.o:\n                            this.state = State.OP_PO;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PO:\n                    switch (b) {\n                        case cc.N:\n                        case cc.n:\n                            this.state = State.OP_PON;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PON:\n                    switch (b) {\n                        case cc.G:\n                        case cc.g:\n                            this.state = State.OP_PONG;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PONG:\n                    switch (b) {\n                        case cc.NL:\n                            this.dispatcher.push({ kind: Kind.PONG });\n                            this.drop = 0;\n                            this.state = State.OP_START;\n                            break;\n                    }\n                    break;\n                case State.OP_PI:\n                    switch (b) {\n                        case cc.N:\n                        case cc.n:\n                            this.state = State.OP_PIN;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PIN:\n                    switch (b) {\n                        case cc.G:\n                        case cc.g:\n                            this.state = State.OP_PING;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PING:\n                    switch (b) {\n                        case cc.NL:\n                            this.dispatcher.push({ kind: Kind.PING });\n                            this.drop = 0;\n                            this.state = State.OP_START;\n                            break;\n                    }\n                    break;\n                case State.OP_I:\n                    switch (b) {\n                        case cc.N:\n                        case cc.n:\n                            this.state = State.OP_IN;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_IN:\n                    switch (b) {\n                        case cc.F:\n                        case cc.f:\n                            this.state = State.OP_INF;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_INF:\n                    switch (b) {\n                        case cc.O:\n                        case cc.o:\n                            this.state = State.OP_INFO;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_INFO:\n                    switch (b) {\n                        case cc.SPACE:\n                        case cc.TAB:\n                            this.state = State.OP_INFO_SPC;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_INFO_SPC:\n                    switch (b) {\n                        case cc.SPACE:\n                        case cc.TAB:\n                            continue;\n                        default:\n                            this.state = State.INFO_ARG;\n                            this.as = i;\n                    }\n                    break;\n                case State.INFO_ARG:\n                    switch (b) {\n                        case cc.CR:\n                            this.drop = 1;\n                            break;\n                        case cc.NL: {\n                            let arg;\n                            if (this.argBuf) {\n                                arg = this.argBuf.bytes();\n                                this.argBuf = undefined;\n                            }\n                            else {\n                                arg = buf.subarray(this.as, i - this.drop);\n                            }\n                            this.dispatcher.push({ kind: Kind.INFO, data: arg });\n                            this.drop = 0;\n                            this.as = i + 1;\n                            this.state = State.OP_START;\n                            break;\n                        }\n                        default:\n                            if (this.argBuf) {\n                                this.argBuf.writeByte(b);\n                            }\n                    }\n                    break;\n                default:\n                    throw this.fail(buf.subarray(i));\n            }\n        }\n        if ((this.state === State.MSG_ARG || this.state === State.MINUS_ERR_ARG ||\n            this.state === State.INFO_ARG) && !this.argBuf) {\n            this.argBuf = new denobuffer_1.DenoBuffer(buf.subarray(this.as, i - this.drop));\n        }\n        if (this.state === State.MSG_PAYLOAD && !this.msgBuf) {\n            if (!this.argBuf) {\n                this.cloneMsgArg();\n            }\n            this.msgBuf = new denobuffer_1.DenoBuffer(buf.subarray(this.as));\n        }\n    }\n    cloneMsgArg() {\n        const s = this.ma.subject.length;\n        const r = this.ma.reply ? this.ma.reply.length : 0;\n        const buf = new Uint8Array(s + r);\n        buf.set(this.ma.subject);\n        if (this.ma.reply) {\n            buf.set(this.ma.reply, s);\n        }\n        this.argBuf = new denobuffer_1.DenoBuffer(buf);\n        this.ma.subject = buf.subarray(0, s);\n        if (this.ma.reply) {\n            this.ma.reply = buf.subarray(s);\n        }\n    }\n    processMsgArgs(arg) {\n        if (this.hdr >= 0) {\n            return this.processHeaderMsgArgs(arg);\n        }\n        const args = [];\n        let start = -1;\n        for (let i = 0; i < arg.length; i++) {\n            const b = arg[i];\n            switch (b) {\n                case cc.SPACE:\n                case cc.TAB:\n                case cc.CR:\n                case cc.NL:\n                    if (start >= 0) {\n                        args.push(arg.subarray(start, i));\n                        start = -1;\n                    }\n                    break;\n                default:\n                    if (start < 0) {\n                        start = i;\n                    }\n            }\n        }\n        if (start >= 0) {\n            args.push(arg.subarray(start));\n        }\n        switch (args.length) {\n            case 3:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = undefined;\n                this.ma.size = this.protoParseInt(args[2]);\n                break;\n            case 4:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = args[2];\n                this.ma.size = this.protoParseInt(args[3]);\n                break;\n            default:\n                throw this.fail(arg, \"processMsgArgs Parse Error\");\n        }\n        if (this.ma.sid < 0) {\n            throw this.fail(arg, \"processMsgArgs Bad or Missing Sid Error\");\n        }\n        if (this.ma.size < 0) {\n            throw this.fail(arg, \"processMsgArgs Bad or Missing Size Error\");\n        }\n    }\n    fail(data, label = \"\") {\n        if (!label) {\n            label = `parse error [${this.state}]`;\n        }\n        else {\n            label = `${label} [${this.state}]`;\n        }\n        return new Error(`${label}: ${encoders_1.TD.decode(data)}`);\n    }\n    processHeaderMsgArgs(arg) {\n        const args = [];\n        let start = -1;\n        for (let i = 0; i < arg.length; i++) {\n            const b = arg[i];\n            switch (b) {\n                case cc.SPACE:\n                case cc.TAB:\n                case cc.CR:\n                case cc.NL:\n                    if (start >= 0) {\n                        args.push(arg.subarray(start, i));\n                        start = -1;\n                    }\n                    break;\n                default:\n                    if (start < 0) {\n                        start = i;\n                    }\n            }\n        }\n        if (start >= 0) {\n            args.push(arg.subarray(start));\n        }\n        switch (args.length) {\n            case 4:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = undefined;\n                this.ma.hdr = this.protoParseInt(args[2]);\n                this.ma.size = this.protoParseInt(args[3]);\n                break;\n            case 5:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = args[2];\n                this.ma.hdr = this.protoParseInt(args[3]);\n                this.ma.size = this.protoParseInt(args[4]);\n                break;\n            default:\n                throw this.fail(arg, \"processHeaderMsgArgs Parse Error\");\n        }\n        if (this.ma.sid < 0) {\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Sid Error\");\n        }\n        if (this.ma.hdr < 0 || this.ma.hdr > this.ma.size) {\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Header Size Error\");\n        }\n        if (this.ma.size < 0) {\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Size Error\");\n        }\n    }\n    protoParseInt(a) {\n        if (a.length === 0) {\n            return -1;\n        }\n        let n = 0;\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] < ASCII_0 || a[i] > ASCII_9) {\n                return -1;\n            }\n            n = n * 10 + (a[i] - ASCII_0);\n        }\n        return n;\n    }\n}\nexports.Parser = Parser;\nvar State;\n(function (State) {\n    State[State[\"OP_START\"] = 0] = \"OP_START\";\n    State[State[\"OP_PLUS\"] = 1] = \"OP_PLUS\";\n    State[State[\"OP_PLUS_O\"] = 2] = \"OP_PLUS_O\";\n    State[State[\"OP_PLUS_OK\"] = 3] = \"OP_PLUS_OK\";\n    State[State[\"OP_MINUS\"] = 4] = \"OP_MINUS\";\n    State[State[\"OP_MINUS_E\"] = 5] = \"OP_MINUS_E\";\n    State[State[\"OP_MINUS_ER\"] = 6] = \"OP_MINUS_ER\";\n    State[State[\"OP_MINUS_ERR\"] = 7] = \"OP_MINUS_ERR\";\n    State[State[\"OP_MINUS_ERR_SPC\"] = 8] = \"OP_MINUS_ERR_SPC\";\n    State[State[\"MINUS_ERR_ARG\"] = 9] = \"MINUS_ERR_ARG\";\n    State[State[\"OP_M\"] = 10] = \"OP_M\";\n    State[State[\"OP_MS\"] = 11] = \"OP_MS\";\n    State[State[\"OP_MSG\"] = 12] = \"OP_MSG\";\n    State[State[\"OP_MSG_SPC\"] = 13] = \"OP_MSG_SPC\";\n    State[State[\"MSG_ARG\"] = 14] = \"MSG_ARG\";\n    State[State[\"MSG_PAYLOAD\"] = 15] = \"MSG_PAYLOAD\";\n    State[State[\"MSG_END\"] = 16] = \"MSG_END\";\n    State[State[\"OP_H\"] = 17] = \"OP_H\";\n    State[State[\"OP_P\"] = 18] = \"OP_P\";\n    State[State[\"OP_PI\"] = 19] = \"OP_PI\";\n    State[State[\"OP_PIN\"] = 20] = \"OP_PIN\";\n    State[State[\"OP_PING\"] = 21] = \"OP_PING\";\n    State[State[\"OP_PO\"] = 22] = \"OP_PO\";\n    State[State[\"OP_PON\"] = 23] = \"OP_PON\";\n    State[State[\"OP_PONG\"] = 24] = \"OP_PONG\";\n    State[State[\"OP_I\"] = 25] = \"OP_I\";\n    State[State[\"OP_IN\"] = 26] = \"OP_IN\";\n    State[State[\"OP_INF\"] = 27] = \"OP_INF\";\n    State[State[\"OP_INFO\"] = 28] = \"OP_INFO\";\n    State[State[\"OP_INFO_SPC\"] = 29] = \"OP_INFO_SPC\";\n    State[State[\"INFO_ARG\"] = 30] = \"INFO_ARG\";\n})(State || (exports.State = State = {}));\nvar cc;\n(function (cc) {\n    cc[cc[\"CR\"] = \"\\r\".charCodeAt(0)] = \"CR\";\n    cc[cc[\"E\"] = \"E\".charCodeAt(0)] = \"E\";\n    cc[cc[\"e\"] = \"e\".charCodeAt(0)] = \"e\";\n    cc[cc[\"F\"] = \"F\".charCodeAt(0)] = \"F\";\n    cc[cc[\"f\"] = \"f\".charCodeAt(0)] = \"f\";\n    cc[cc[\"G\"] = \"G\".charCodeAt(0)] = \"G\";\n    cc[cc[\"g\"] = \"g\".charCodeAt(0)] = \"g\";\n    cc[cc[\"H\"] = \"H\".charCodeAt(0)] = \"H\";\n    cc[cc[\"h\"] = \"h\".charCodeAt(0)] = \"h\";\n    cc[cc[\"I\"] = \"I\".charCodeAt(0)] = \"I\";\n    cc[cc[\"i\"] = \"i\".charCodeAt(0)] = \"i\";\n    cc[cc[\"K\"] = \"K\".charCodeAt(0)] = \"K\";\n    cc[cc[\"k\"] = \"k\".charCodeAt(0)] = \"k\";\n    cc[cc[\"M\"] = \"M\".charCodeAt(0)] = \"M\";\n    cc[cc[\"m\"] = \"m\".charCodeAt(0)] = \"m\";\n    cc[cc[\"MINUS\"] = \"-\".charCodeAt(0)] = \"MINUS\";\n    cc[cc[\"N\"] = \"N\".charCodeAt(0)] = \"N\";\n    cc[cc[\"n\"] = \"n\".charCodeAt(0)] = \"n\";\n    cc[cc[\"NL\"] = \"\\n\".charCodeAt(0)] = \"NL\";\n    cc[cc[\"O\"] = \"O\".charCodeAt(0)] = \"O\";\n    cc[cc[\"o\"] = \"o\".charCodeAt(0)] = \"o\";\n    cc[cc[\"P\"] = \"P\".charCodeAt(0)] = \"P\";\n    cc[cc[\"p\"] = \"p\".charCodeAt(0)] = \"p\";\n    cc[cc[\"PLUS\"] = \"+\".charCodeAt(0)] = \"PLUS\";\n    cc[cc[\"R\"] = \"R\".charCodeAt(0)] = \"R\";\n    cc[cc[\"r\"] = \"r\".charCodeAt(0)] = \"r\";\n    cc[cc[\"S\"] = \"S\".charCodeAt(0)] = \"S\";\n    cc[cc[\"s\"] = \"s\".charCodeAt(0)] = \"s\";\n    cc[cc[\"SPACE\"] = \" \".charCodeAt(0)] = \"SPACE\";\n    cc[cc[\"TAB\"] = \"\\t\".charCodeAt(0)] = \"TAB\";\n})(cc || (cc = {}));\n//# sourceMappingURL=parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/parser.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/protocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/protocol.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ProtocolHandler = exports.Subscriptions = exports.SubscriptionImpl = exports.Connect = exports.INFO = void 0;\n/*\n * Copyright 2018-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nconst transport_1 = __webpack_require__(/*! ./transport */ \"./node_modules/@nats-io/nats-core/lib/transport.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nconst databuffer_1 = __webpack_require__(/*! ./databuffer */ \"./node_modules/@nats-io/nats-core/lib/databuffer.js\");\nconst servers_1 = __webpack_require__(/*! ./servers */ \"./node_modules/@nats-io/nats-core/lib/servers.js\");\nconst queued_iterator_1 = __webpack_require__(/*! ./queued_iterator */ \"./node_modules/@nats-io/nats-core/lib/queued_iterator.js\");\nconst muxsubscription_1 = __webpack_require__(/*! ./muxsubscription */ \"./node_modules/@nats-io/nats-core/lib/muxsubscription.js\");\nconst heartbeats_1 = __webpack_require__(/*! ./heartbeats */ \"./node_modules/@nats-io/nats-core/lib/heartbeats.js\");\nconst parser_1 = __webpack_require__(/*! ./parser */ \"./node_modules/@nats-io/nats-core/lib/parser.js\");\nconst msg_1 = __webpack_require__(/*! ./msg */ \"./node_modules/@nats-io/nats-core/lib/msg.js\");\nconst semver_1 = __webpack_require__(/*! ./semver */ \"./node_modules/@nats-io/nats-core/lib/semver.js\");\nconst options_1 = __webpack_require__(/*! ./options */ \"./node_modules/@nats-io/nats-core/lib/options.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nconst FLUSH_THRESHOLD = 1024 * 32;\nexports.INFO = /^INFO\\s+([^\\r\\n]+)\\r\\n/i;\nconst PONG_CMD = (0, encoders_1.encode)(\"PONG\\r\\n\");\nconst PING_CMD = (0, encoders_1.encode)(\"PING\\r\\n\");\nclass Connect {\n    echo;\n    no_responders;\n    protocol;\n    verbose;\n    pedantic;\n    jwt;\n    nkey;\n    sig;\n    user;\n    pass;\n    auth_token;\n    tls_required;\n    name;\n    lang;\n    version;\n    headers;\n    constructor(transport, opts, nonce) {\n        this.protocol = 1;\n        this.version = transport.version;\n        this.lang = transport.lang;\n        this.echo = opts.noEcho ? false : undefined;\n        this.verbose = opts.verbose;\n        this.pedantic = opts.pedantic;\n        this.tls_required = opts.tls ? true : undefined;\n        this.name = opts.name;\n        const creds = (opts && typeof opts.authenticator === \"function\"\n            ? opts.authenticator(nonce)\n            : {}) || {};\n        (0, util_1.extend)(this, creds);\n    }\n}\nexports.Connect = Connect;\nclass SlowNotifier {\n    slow;\n    cb;\n    notified;\n    constructor(slow, cb) {\n        this.slow = slow;\n        this.cb = cb;\n        this.notified = false;\n    }\n    maybeNotify(pending) {\n        // if we are below the threshold reset the ability to notify\n        if (pending <= this.slow) {\n            this.notified = false;\n        }\n        else {\n            if (!this.notified) {\n                // crossed the threshold, notify and silence.\n                this.cb(pending);\n                this.notified = true;\n            }\n        }\n    }\n}\nclass SubscriptionImpl extends queued_iterator_1.QueuedIteratorImpl {\n    sid;\n    queue;\n    draining;\n    max;\n    subject;\n    drained;\n    protocol;\n    timer;\n    info;\n    cleanupFn;\n    closed;\n    requestSubject;\n    slow;\n    constructor(protocol, subject, opts = {}) {\n        super();\n        (0, util_1.extend)(this, opts);\n        this.protocol = protocol;\n        this.subject = subject;\n        this.draining = false;\n        this.noIterator = typeof opts.callback === \"function\";\n        this.closed = (0, util_1.deferred)();\n        const asyncTraces = !(protocol.options?.noAsyncTraces || false);\n        if (opts.timeout) {\n            this.timer = (0, util_1.timeout)(opts.timeout, asyncTraces);\n            this.timer\n                .then(() => {\n                // timer was cancelled\n                this.timer = undefined;\n            })\n                .catch((err) => {\n                // timer fired\n                this.stop(err);\n                if (this.noIterator) {\n                    this.callback(err, {});\n                }\n            });\n        }\n        if (!this.noIterator) {\n            // cleanup - they used break or return from the iterator\n            // make sure we clean up, if they didn't call unsub\n            this.iterClosed.then((err) => {\n                this.closed.resolve(err);\n                this.unsubscribe();\n            });\n        }\n    }\n    setSlowNotificationFn(slow, fn) {\n        this.slow = undefined;\n        if (fn) {\n            if (this.noIterator) {\n                throw new Error(\"callbacks don't support slow notifications\");\n            }\n            this.slow = new SlowNotifier(slow, fn);\n        }\n    }\n    callback(err, msg) {\n        this.cancelTimeout();\n        err ? this.stop(err) : this.push(msg);\n        if (!err && this.slow) {\n            this.slow.maybeNotify(this.getPending());\n        }\n    }\n    close(err) {\n        if (!this.isClosed()) {\n            this.cancelTimeout();\n            const fn = () => {\n                this.stop();\n                if (this.cleanupFn) {\n                    try {\n                        this.cleanupFn(this, this.info);\n                    }\n                    catch (_err) {\n                        // ignoring\n                    }\n                }\n                this.closed.resolve(err);\n            };\n            if (this.noIterator) {\n                fn();\n            }\n            else {\n                this.push(fn);\n            }\n        }\n    }\n    unsubscribe(max) {\n        this.protocol.unsubscribe(this, max);\n    }\n    cancelTimeout() {\n        if (this.timer) {\n            this.timer.cancel();\n            this.timer = undefined;\n        }\n    }\n    drain() {\n        if (this.protocol.isClosed()) {\n            return Promise.reject(new errors_1.errors.ClosedConnectionError());\n        }\n        if (this.isClosed()) {\n            return Promise.reject(new errors_1.errors.InvalidOperationError(\"subscription is already closed\"));\n        }\n        if (!this.drained) {\n            this.draining = true;\n            this.protocol.unsub(this);\n            this.drained = this.protocol.flush((0, util_1.deferred)())\n                .then(() => {\n                this.protocol.subscriptions.cancel(this);\n            })\n                .catch(() => {\n                this.protocol.subscriptions.cancel(this);\n            });\n        }\n        return this.drained;\n    }\n    isDraining() {\n        return this.draining;\n    }\n    isClosed() {\n        return this.done;\n    }\n    getSubject() {\n        return this.subject;\n    }\n    getMax() {\n        return this.max;\n    }\n    getID() {\n        return this.sid;\n    }\n}\nexports.SubscriptionImpl = SubscriptionImpl;\nclass Subscriptions {\n    mux;\n    subs;\n    sidCounter;\n    constructor() {\n        this.sidCounter = 0;\n        this.mux = null;\n        this.subs = new Map();\n    }\n    size() {\n        return this.subs.size;\n    }\n    add(s) {\n        this.sidCounter++;\n        s.sid = this.sidCounter;\n        this.subs.set(s.sid, s);\n        return s;\n    }\n    setMux(s) {\n        this.mux = s;\n        return s;\n    }\n    getMux() {\n        return this.mux;\n    }\n    get(sid) {\n        return this.subs.get(sid);\n    }\n    resub(s) {\n        this.sidCounter++;\n        this.subs.delete(s.sid);\n        s.sid = this.sidCounter;\n        this.subs.set(s.sid, s);\n        return s;\n    }\n    all() {\n        return Array.from(this.subs.values());\n    }\n    cancel(s) {\n        if (s) {\n            s.close();\n            this.subs.delete(s.sid);\n        }\n    }\n    handleError(err) {\n        const subs = this.all();\n        let sub;\n        if (err.operation === \"subscription\") {\n            sub = subs.find((s) => {\n                return s.subject === err.subject && s.queue === err.queue;\n            });\n        }\n        else if (err.operation === \"publish\") {\n            // we have a no mux subscription\n            sub = subs.find((s) => {\n                return s.requestSubject === err.subject;\n            });\n        }\n        if (sub) {\n            sub.callback(err, {});\n            sub.close(err);\n            this.subs.delete(sub.sid);\n            return sub !== this.mux;\n        }\n        return false;\n    }\n    close() {\n        this.subs.forEach((sub) => {\n            sub.close();\n        });\n    }\n}\nexports.Subscriptions = Subscriptions;\nclass ProtocolHandler {\n    connected;\n    connectedOnce;\n    infoReceived;\n    info;\n    muxSubscriptions;\n    options;\n    outbound;\n    pongs;\n    subscriptions;\n    transport;\n    noMorePublishing;\n    connectError;\n    publisher;\n    _closed;\n    closed;\n    listeners;\n    heartbeats;\n    parser;\n    outMsgs;\n    inMsgs;\n    outBytes;\n    inBytes;\n    pendingLimit;\n    lastError;\n    abortReconnect;\n    whyClosed;\n    servers;\n    server;\n    features;\n    connectPromise;\n    dialDelay;\n    raceTimer;\n    constructor(options, publisher) {\n        this._closed = false;\n        this.connected = false;\n        this.connectedOnce = false;\n        this.infoReceived = false;\n        this.noMorePublishing = false;\n        this.abortReconnect = false;\n        this.listeners = [];\n        this.pendingLimit = FLUSH_THRESHOLD;\n        this.outMsgs = 0;\n        this.inMsgs = 0;\n        this.outBytes = 0;\n        this.inBytes = 0;\n        this.options = options;\n        this.publisher = publisher;\n        this.subscriptions = new Subscriptions();\n        this.muxSubscriptions = new muxsubscription_1.MuxSubscription();\n        this.outbound = new databuffer_1.DataBuffer();\n        this.pongs = [];\n        this.whyClosed = \"\";\n        //@ts-ignore: options.pendingLimit is hidden\n        this.pendingLimit = options.pendingLimit || this.pendingLimit;\n        this.features = new semver_1.Features({ major: 0, minor: 0, micro: 0 });\n        this.connectPromise = null;\n        this.dialDelay = null;\n        const servers = typeof options.servers === \"string\"\n            ? [options.servers]\n            : options.servers;\n        this.servers = new servers_1.Servers(servers, {\n            randomize: !options.noRandomize,\n        });\n        this.closed = (0, util_1.deferred)();\n        this.parser = new parser_1.Parser(this);\n        this.heartbeats = new heartbeats_1.Heartbeat(this, this.options.pingInterval || options_1.DEFAULT_PING_INTERVAL, this.options.maxPingOut || options_1.DEFAULT_MAX_PING_OUT);\n    }\n    resetOutbound() {\n        this.outbound.reset();\n        const pongs = this.pongs;\n        this.pongs = [];\n        // reject the pongs - the disconnect from here shouldn't have a trace\n        // because that confuses API consumers\n        const err = new errors_1.errors.RequestError(\"connection disconnected\");\n        err.stack = \"\";\n        pongs.forEach((p) => {\n            p.reject(err);\n        });\n        this.parser = new parser_1.Parser(this);\n        this.infoReceived = false;\n    }\n    dispatchStatus(status) {\n        this.listeners.forEach((q) => {\n            q.push(status);\n        });\n    }\n    prepare() {\n        if (this.transport) {\n            this.transport.discard();\n        }\n        this.info = undefined;\n        this.resetOutbound();\n        const pong = (0, util_1.deferred)();\n        pong.catch(() => {\n            // provide at least one catch - as pong rejection can happen before it is expected\n        });\n        this.pongs.unshift(pong);\n        this.connectError = (err) => {\n            pong.reject(err);\n        };\n        this.transport = (0, transport_1.newTransport)();\n        this.transport.closed()\n            .then(async (_err) => {\n            this.connected = false;\n            if (!this.isClosed()) {\n                // if the transport gave an error use that, otherwise\n                // we may have received a protocol error\n                await this.disconnected(this.transport.closeError || this.lastError);\n                return;\n            }\n        });\n        return pong;\n    }\n    disconnect() {\n        this.dispatchStatus({ type: \"staleConnection\" });\n        this.transport.disconnect();\n    }\n    reconnect() {\n        if (this.connected) {\n            this.dispatchStatus({\n                type: \"forceReconnect\",\n            });\n            this.transport.disconnect();\n        }\n        return Promise.resolve();\n    }\n    async disconnected(err) {\n        this.dispatchStatus({\n            type: \"disconnect\",\n            server: this.servers.getCurrentServer().toString(),\n        });\n        if (this.options.reconnect) {\n            await this.dialLoop()\n                .then(() => {\n                this.dispatchStatus({\n                    type: \"reconnect\",\n                    server: this.servers.getCurrentServer().toString(),\n                });\n                // if we are here we reconnected, but we have an authentication\n                // that expired, we need to clean it up, otherwise we'll queue up\n                // two of these, and the default for the client will be to\n                // close, rather than attempt again - possibly they have an\n                // authenticator that dynamically updates\n                if (this.lastError instanceof errors_1.errors.UserAuthenticationExpiredError) {\n                    this.lastError = undefined;\n                }\n            })\n                .catch((err) => {\n                this.close(err).catch();\n            });\n        }\n        else {\n            await this.close(err).catch();\n        }\n    }\n    async dial(srv) {\n        const pong = this.prepare();\n        try {\n            this.raceTimer = (0, util_1.timeout)(this.options.timeout || 20000);\n            const cp = this.transport.connect(srv, this.options);\n            await Promise.race([cp, this.raceTimer]);\n            (async () => {\n                try {\n                    for await (const b of this.transport) {\n                        this.parser.parse(b);\n                    }\n                }\n                catch (err) {\n                    console.log(\"reader closed\", err);\n                }\n            })().then();\n        }\n        catch (err) {\n            pong.reject(err);\n        }\n        try {\n            await Promise.race([this.raceTimer, pong]);\n            this.raceTimer?.cancel();\n            this.connected = true;\n            this.connectError = undefined;\n            this.sendSubscriptions();\n            this.connectedOnce = true;\n            this.server.didConnect = true;\n            this.server.reconnects = 0;\n            this.flushPending();\n            this.heartbeats.start();\n        }\n        catch (err) {\n            this.raceTimer?.cancel();\n            await this.transport.close(err);\n            throw err;\n        }\n    }\n    async _doDial(srv) {\n        const { resolve } = this.options;\n        const alts = await srv.resolve({\n            fn: (0, transport_1.getResolveFn)(),\n            debug: this.options.debug,\n            randomize: !this.options.noRandomize,\n            resolve,\n        });\n        let lastErr = null;\n        for (const a of alts) {\n            try {\n                lastErr = null;\n                this.dispatchStatus({ type: \"reconnecting\" });\n                await this.dial(a);\n                // if here we connected\n                return;\n            }\n            catch (err) {\n                lastErr = err;\n            }\n        }\n        // if we are here, we failed, and we have no additional\n        // alternatives for this server\n        throw lastErr;\n    }\n    dialLoop() {\n        if (this.connectPromise === null) {\n            this.connectPromise = this.dodialLoop();\n            this.connectPromise\n                .then(() => { })\n                .catch(() => { })\n                .finally(() => {\n                this.connectPromise = null;\n            });\n        }\n        return this.connectPromise;\n    }\n    async dodialLoop() {\n        let lastError;\n        while (true) {\n            if (this._closed) {\n                // if we are disconnected, and close is called, the client\n                // still tries to reconnect - to match the reconnect policy\n                // in the case of close, want to stop.\n                this.servers.clear();\n            }\n            const wait = this.options.reconnectDelayHandler\n                ? this.options.reconnectDelayHandler()\n                : options_1.DEFAULT_RECONNECT_TIME_WAIT;\n            let maxWait = wait;\n            const srv = this.selectServer();\n            if (!srv || this.abortReconnect) {\n                if (lastError) {\n                    throw lastError;\n                }\n                else if (this.lastError) {\n                    throw this.lastError;\n                }\n                else {\n                    throw new errors_1.errors.ConnectionError(\"connection refused\");\n                }\n            }\n            const now = Date.now();\n            if (srv.lastConnect === 0 || srv.lastConnect + wait <= now) {\n                srv.lastConnect = Date.now();\n                try {\n                    await this._doDial(srv);\n                    break;\n                }\n                catch (err) {\n                    lastError = err;\n                    if (!this.connectedOnce) {\n                        if (this.options.waitOnFirstConnect) {\n                            continue;\n                        }\n                        this.servers.removeCurrentServer();\n                    }\n                    srv.reconnects++;\n                    const mra = this.options.maxReconnectAttempts || 0;\n                    if (mra !== -1 && srv.reconnects >= mra) {\n                        this.servers.removeCurrentServer();\n                    }\n                }\n            }\n            else {\n                maxWait = Math.min(maxWait, srv.lastConnect + wait - now);\n                this.dialDelay = (0, util_1.delay)(maxWait);\n                await this.dialDelay;\n            }\n        }\n    }\n    static async connect(options, publisher) {\n        const h = new ProtocolHandler(options, publisher);\n        await h.dialLoop();\n        return h;\n    }\n    static toError(s) {\n        let err = errors_1.errors.PermissionViolationError.parse(s);\n        if (err) {\n            return err;\n        }\n        err = errors_1.errors.UserAuthenticationExpiredError.parse(s);\n        if (err) {\n            return err;\n        }\n        err = errors_1.errors.AuthorizationError.parse(s);\n        if (err) {\n            return err;\n        }\n        return new errors_1.errors.ProtocolError(s);\n    }\n    processMsg(msg, data) {\n        this.inMsgs++;\n        this.inBytes += data.length;\n        if (!this.subscriptions.sidCounter) {\n            return;\n        }\n        const sub = this.subscriptions.get(msg.sid);\n        if (!sub) {\n            return;\n        }\n        sub.received += 1;\n        if (sub.callback) {\n            sub.callback(null, new msg_1.MsgImpl(msg, data, this));\n        }\n        if (sub.max !== undefined && sub.received >= sub.max) {\n            sub.unsubscribe();\n        }\n    }\n    processError(m) {\n        let s = (0, encoders_1.decode)(m);\n        if (s.startsWith(\"'\") && s.endsWith(\"'\")) {\n            s = s.slice(1, s.length - 1);\n        }\n        const err = ProtocolHandler.toError(s);\n        switch (err.constructor) {\n            case errors_1.errors.PermissionViolationError: {\n                const pe = err;\n                const mux = this.subscriptions.getMux();\n                const isMuxPermission = mux ? pe.subject === mux.subject : false;\n                this.subscriptions.handleError(pe);\n                this.muxSubscriptions.handleError(isMuxPermission, pe);\n                if (isMuxPermission) {\n                    // remove the permission - enable it to be recreated\n                    this.subscriptions.setMux(null);\n                }\n            }\n        }\n        this.dispatchStatus({ type: \"error\", error: err });\n        this.handleError(err);\n    }\n    handleError(err) {\n        if (err instanceof errors_1.errors.UserAuthenticationExpiredError ||\n            err instanceof errors_1.errors.AuthorizationError) {\n            this.handleAuthError(err);\n        }\n        if (!(err instanceof errors_1.errors.PermissionViolationError)) {\n            this.lastError = err;\n        }\n    }\n    handleAuthError(err) {\n        if ((this.lastError instanceof errors_1.errors.UserAuthenticationExpiredError ||\n            this.lastError instanceof errors_1.errors.AuthorizationError) &&\n            this.options.ignoreAuthErrorAbort === false) {\n            this.abortReconnect = true;\n        }\n        if (this.connectError) {\n            this.connectError(err);\n        }\n        else {\n            this.disconnect();\n        }\n    }\n    processPing() {\n        this.transport.send(PONG_CMD);\n    }\n    processPong() {\n        const cb = this.pongs.shift();\n        if (cb) {\n            cb.resolve();\n        }\n    }\n    processInfo(m) {\n        const info = JSON.parse((0, encoders_1.decode)(m));\n        this.info = info;\n        const updates = this.options && this.options.ignoreClusterUpdates\n            ? undefined\n            : this.servers.update(info, this.transport.isEncrypted());\n        if (!this.infoReceived) {\n            this.features.update((0, semver_1.parseSemVer)(info.version));\n            this.infoReceived = true;\n            if (this.transport.isEncrypted()) {\n                this.servers.updateTLSName();\n            }\n            // send connect\n            const { version, lang } = this.transport;\n            try {\n                const c = new Connect({ version, lang }, this.options, info.nonce);\n                if (info.headers) {\n                    c.headers = true;\n                    c.no_responders = true;\n                }\n                const cs = JSON.stringify(c);\n                this.transport.send((0, encoders_1.encode)(`CONNECT ${cs}${transport_1.CR_LF}`));\n                this.transport.send(PING_CMD);\n            }\n            catch (err) {\n                // if we are dying here, this is likely some an authenticator blowing up\n                this.close(err).catch();\n            }\n        }\n        if (updates) {\n            const { added, deleted } = updates;\n            this.dispatchStatus({ type: \"update\", added, deleted });\n        }\n        const ldm = info.ldm !== undefined ? info.ldm : false;\n        if (ldm) {\n            this.dispatchStatus({\n                type: \"ldm\",\n                server: this.servers.getCurrentServer().toString(),\n            });\n        }\n    }\n    push(e) {\n        switch (e.kind) {\n            case parser_1.Kind.MSG: {\n                const { msg, data } = e;\n                this.processMsg(msg, data);\n                break;\n            }\n            case parser_1.Kind.OK:\n                break;\n            case parser_1.Kind.ERR:\n                this.processError(e.data);\n                break;\n            case parser_1.Kind.PING:\n                this.processPing();\n                break;\n            case parser_1.Kind.PONG:\n                this.processPong();\n                break;\n            case parser_1.Kind.INFO:\n                this.processInfo(e.data);\n                break;\n        }\n    }\n    sendCommand(cmd, ...payloads) {\n        const len = this.outbound.length();\n        let buf;\n        if (typeof cmd === \"string\") {\n            buf = (0, encoders_1.encode)(cmd);\n        }\n        else {\n            buf = cmd;\n        }\n        this.outbound.fill(buf, ...payloads);\n        if (len === 0) {\n            queueMicrotask(() => {\n                this.flushPending();\n            });\n        }\n        else if (this.outbound.size() >= this.pendingLimit) {\n            // flush inline\n            this.flushPending();\n        }\n    }\n    publish(subject, payload = encoders_1.Empty, options) {\n        let data;\n        if (payload instanceof Uint8Array) {\n            data = payload;\n        }\n        else if (typeof payload === \"string\") {\n            data = encoders_1.TE.encode(payload);\n        }\n        else {\n            throw new TypeError(\"payload types can be strings or Uint8Array\");\n        }\n        let len = data.length;\n        options = options || {};\n        options.reply = options.reply || \"\";\n        let headers = encoders_1.Empty;\n        let hlen = 0;\n        if (options.headers) {\n            if (this.info && !this.info.headers) {\n                errors_1.InvalidArgumentError.format(\"headers\", \"are not available on this server\");\n            }\n            const hdrs = options.headers;\n            headers = hdrs.encode();\n            hlen = headers.length;\n            len = data.length + hlen;\n        }\n        if (this.info && len > this.info.max_payload) {\n            throw errors_1.InvalidArgumentError.format(\"payload\", \"max_payload size exceeded\");\n        }\n        this.outBytes += len;\n        this.outMsgs++;\n        let proto;\n        if (options.headers) {\n            if (options.reply) {\n                proto = `HPUB ${subject} ${options.reply} ${hlen} ${len}\\r\\n`;\n            }\n            else {\n                proto = `HPUB ${subject} ${hlen} ${len}\\r\\n`;\n            }\n            this.sendCommand(proto, headers, data, transport_1.CRLF);\n        }\n        else {\n            if (options.reply) {\n                proto = `PUB ${subject} ${options.reply} ${len}\\r\\n`;\n            }\n            else {\n                proto = `PUB ${subject} ${len}\\r\\n`;\n            }\n            this.sendCommand(proto, data, transport_1.CRLF);\n        }\n    }\n    request(r) {\n        this.initMux();\n        this.muxSubscriptions.add(r);\n        return r;\n    }\n    subscribe(s) {\n        this.subscriptions.add(s);\n        this._subunsub(s);\n        return s;\n    }\n    _sub(s) {\n        if (s.queue) {\n            this.sendCommand(`SUB ${s.subject} ${s.queue} ${s.sid}\\r\\n`);\n        }\n        else {\n            this.sendCommand(`SUB ${s.subject} ${s.sid}\\r\\n`);\n        }\n    }\n    _subunsub(s) {\n        this._sub(s);\n        if (s.max) {\n            this.unsubscribe(s, s.max);\n        }\n        return s;\n    }\n    unsubscribe(s, max) {\n        this.unsub(s, max);\n        if (s.max === undefined || s.received >= s.max) {\n            this.subscriptions.cancel(s);\n        }\n    }\n    unsub(s, max) {\n        if (!s || this.isClosed()) {\n            return;\n        }\n        if (max) {\n            this.sendCommand(`UNSUB ${s.sid} ${max}\\r\\n`);\n        }\n        else {\n            this.sendCommand(`UNSUB ${s.sid}\\r\\n`);\n        }\n        s.max = max;\n    }\n    resub(s, subject) {\n        if (!s || this.isClosed()) {\n            return;\n        }\n        this.unsub(s);\n        s.subject = subject;\n        this.subscriptions.resub(s);\n        // we don't auto-unsub here because we don't\n        // really know \"processed\"\n        this._sub(s);\n    }\n    flush(p) {\n        if (!p) {\n            p = (0, util_1.deferred)();\n        }\n        this.pongs.push(p);\n        this.outbound.fill(PING_CMD);\n        this.flushPending();\n        return p;\n    }\n    sendSubscriptions() {\n        const cmds = [];\n        this.subscriptions.all().forEach((s) => {\n            const sub = s;\n            if (sub.queue) {\n                cmds.push(`SUB ${sub.subject} ${sub.queue} ${sub.sid}${transport_1.CR_LF}`);\n            }\n            else {\n                cmds.push(`SUB ${sub.subject} ${sub.sid}${transport_1.CR_LF}`);\n            }\n        });\n        if (cmds.length) {\n            this.transport.send((0, encoders_1.encode)(cmds.join(\"\")));\n        }\n    }\n    async close(err) {\n        if (this._closed) {\n            return;\n        }\n        this.whyClosed = new Error(\"close trace\").stack || \"\";\n        this.heartbeats.cancel();\n        if (this.connectError) {\n            this.connectError(err);\n            this.connectError = undefined;\n        }\n        this.muxSubscriptions.close();\n        this.subscriptions.close();\n        const proms = [];\n        for (let i = 0; i < this.listeners.length; i++) {\n            const qi = this.listeners[i];\n            if (qi) {\n                qi.stop();\n                proms.push(qi.iterClosed);\n            }\n        }\n        if (proms.length) {\n            await Promise.all(proms);\n        }\n        this._closed = true;\n        await this.transport.close(err);\n        this.raceTimer?.cancel();\n        this.dialDelay?.cancel();\n        this.closed.resolve(err);\n    }\n    isClosed() {\n        return this._closed;\n    }\n    async drain() {\n        const subs = this.subscriptions.all();\n        const promises = [];\n        subs.forEach((sub) => {\n            promises.push(sub.drain());\n        });\n        try {\n            await Promise.allSettled(promises);\n        }\n        catch {\n            // nothing we can do here\n        }\n        finally {\n            this.noMorePublishing = true;\n            await this.flush();\n        }\n        return this.close();\n    }\n    flushPending() {\n        if (!this.infoReceived || !this.connected) {\n            return;\n        }\n        if (this.outbound.size()) {\n            const d = this.outbound.drain();\n            this.transport.send(d);\n        }\n    }\n    initMux() {\n        const mux = this.subscriptions.getMux();\n        if (!mux) {\n            const inbox = this.muxSubscriptions.init(this.options.inboxPrefix);\n            // dot is already part of mux\n            const sub = new SubscriptionImpl(this, `${inbox}*`);\n            sub.callback = this.muxSubscriptions.dispatcher();\n            this.subscriptions.setMux(sub);\n            this.subscribe(sub);\n        }\n    }\n    selectServer() {\n        const server = this.servers.selectServer();\n        if (server === undefined) {\n            return undefined;\n        }\n        // Place in client context.\n        this.server = server;\n        return this.server;\n    }\n    getServer() {\n        return this.server;\n    }\n}\nexports.ProtocolHandler = ProtocolHandler;\n//# sourceMappingURL=protocol.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/protocol.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/queued_iterator.js":
/*!****************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/queued_iterator.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.QueuedIteratorImpl = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nclass QueuedIteratorImpl {\n    inflight;\n    processed;\n    // this is updated by the protocol\n    received;\n    noIterator;\n    iterClosed;\n    done;\n    signal;\n    yields;\n    filtered;\n    pendingFiltered;\n    ctx;\n    _data; //data is for use by extenders in any way they like\n    err;\n    time;\n    profile;\n    yielding;\n    didBreak;\n    constructor() {\n        this.inflight = 0;\n        this.filtered = 0;\n        this.pendingFiltered = 0;\n        this.processed = 0;\n        this.received = 0;\n        this.noIterator = false;\n        this.done = false;\n        this.signal = (0, util_1.deferred)();\n        this.yields = [];\n        this.iterClosed = (0, util_1.deferred)();\n        this.time = 0;\n        this.yielding = false;\n        this.didBreak = false;\n        this.profile = false;\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n    push(v) {\n        if (this.done) {\n            return;\n        }\n        // if they `break` from a `for await`, any signaling that is pushed via\n        // a function is not handled this can prevent closed promises from\n        // resolving downstream.\n        if (this.didBreak) {\n            if (typeof v === \"function\") {\n                const cb = v;\n                try {\n                    cb();\n                }\n                catch (_) {\n                    // ignored\n                }\n            }\n            return;\n        }\n        this.yields.push(v);\n        this.signal.resolve();\n    }\n    async *iterate() {\n        if (this.noIterator) {\n            throw new errors_1.InvalidOperationError(\"iterator cannot be used when a callback is registered\");\n        }\n        if (this.yielding) {\n            throw new errors_1.InvalidOperationError(\"iterator is already yielding\");\n        }\n        this.yielding = true;\n        try {\n            while (true) {\n                if (this.yields.length === 0) {\n                    await this.signal;\n                }\n                if (this.err) {\n                    throw this.err;\n                }\n                const yields = this.yields;\n                this.inflight = yields.length;\n                this.yields = [];\n                for (let i = 0; i < yields.length; i++) {\n                    if (typeof yields[i] === \"function\") {\n                        const fn = yields[i];\n                        try {\n                            fn();\n                        }\n                        catch (err) {\n                            // failed on the invocation - fail the iterator\n                            // so they know to fix the callback\n                            throw err;\n                        }\n                        // fn could have also set an error\n                        if (this.err) {\n                            throw this.err;\n                        }\n                        continue;\n                    }\n                    this.processed++;\n                    const start = this.profile ? Date.now() : 0;\n                    yield yields[i];\n                    this.time = this.profile ? Date.now() - start : 0;\n                    this.inflight--;\n                }\n                // yielding could have paused and microtask\n                // could have added messages. Prevent allocations\n                // if possible\n                if (this.done) {\n                    break;\n                }\n                else if (this.yields.length === 0) {\n                    yields.length = 0;\n                    this.yields = yields;\n                    this.signal = (0, util_1.deferred)();\n                }\n            }\n        }\n        finally {\n            // the iterator used break/return\n            this.didBreak = true;\n            this.stop();\n        }\n    }\n    stop(err) {\n        if (this.done) {\n            return;\n        }\n        this.err = err;\n        this.done = true;\n        this.signal.resolve();\n        this.iterClosed.resolve(err);\n    }\n    getProcessed() {\n        return this.noIterator ? this.received : this.processed;\n    }\n    getPending() {\n        return this.yields.length + this.inflight - this.pendingFiltered;\n    }\n    getReceived() {\n        return this.received - this.filtered;\n    }\n}\nexports.QueuedIteratorImpl = QueuedIteratorImpl;\n//# sourceMappingURL=queued_iterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9xdWV1ZWRfaXRlcmF0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGVBQWUsbUJBQU8sQ0FBQyw2REFBUTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQyxpRUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG1CQUFtQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvcXVldWVkX2l0ZXJhdG9yLmpzPzk3ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlF1ZXVlZEl0ZXJhdG9ySW1wbCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbmNsYXNzIFF1ZXVlZEl0ZXJhdG9ySW1wbCB7XG4gICAgaW5mbGlnaHQ7XG4gICAgcHJvY2Vzc2VkO1xuICAgIC8vIHRoaXMgaXMgdXBkYXRlZCBieSB0aGUgcHJvdG9jb2xcbiAgICByZWNlaXZlZDtcbiAgICBub0l0ZXJhdG9yO1xuICAgIGl0ZXJDbG9zZWQ7XG4gICAgZG9uZTtcbiAgICBzaWduYWw7XG4gICAgeWllbGRzO1xuICAgIGZpbHRlcmVkO1xuICAgIHBlbmRpbmdGaWx0ZXJlZDtcbiAgICBjdHg7XG4gICAgX2RhdGE7IC8vZGF0YSBpcyBmb3IgdXNlIGJ5IGV4dGVuZGVycyBpbiBhbnkgd2F5IHRoZXkgbGlrZVxuICAgIGVycjtcbiAgICB0aW1lO1xuICAgIHByb2ZpbGU7XG4gICAgeWllbGRpbmc7XG4gICAgZGlkQnJlYWs7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW5mbGlnaHQgPSAwO1xuICAgICAgICB0aGlzLmZpbHRlcmVkID0gMDtcbiAgICAgICAgdGhpcy5wZW5kaW5nRmlsdGVyZWQgPSAwO1xuICAgICAgICB0aGlzLnByb2Nlc3NlZCA9IDA7XG4gICAgICAgIHRoaXMucmVjZWl2ZWQgPSAwO1xuICAgICAgICB0aGlzLm5vSXRlcmF0b3IgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc2lnbmFsID0gKDAsIHV0aWxfMS5kZWZlcnJlZCkoKTtcbiAgICAgICAgdGhpcy55aWVsZHMgPSBbXTtcbiAgICAgICAgdGhpcy5pdGVyQ2xvc2VkID0gKDAsIHV0aWxfMS5kZWZlcnJlZCkoKTtcbiAgICAgICAgdGhpcy50aW1lID0gMDtcbiAgICAgICAgdGhpcy55aWVsZGluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRpZEJyZWFrID0gZmFsc2U7XG4gICAgICAgIHRoaXMucHJvZmlsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVyYXRlKCk7XG4gICAgfVxuICAgIHB1c2godikge1xuICAgICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgdGhleSBgYnJlYWtgIGZyb20gYSBgZm9yIGF3YWl0YCwgYW55IHNpZ25hbGluZyB0aGF0IGlzIHB1c2hlZCB2aWFcbiAgICAgICAgLy8gYSBmdW5jdGlvbiBpcyBub3QgaGFuZGxlZCB0aGlzIGNhbiBwcmV2ZW50IGNsb3NlZCBwcm9taXNlcyBmcm9tXG4gICAgICAgIC8vIHJlc29sdmluZyBkb3duc3RyZWFtLlxuICAgICAgICBpZiAodGhpcy5kaWRCcmVhaykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYiA9IHY7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKF8pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWdub3JlZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnlpZWxkcy5wdXNoKHYpO1xuICAgICAgICB0aGlzLnNpZ25hbC5yZXNvbHZlKCk7XG4gICAgfVxuICAgIGFzeW5jICppdGVyYXRlKCkge1xuICAgICAgICBpZiAodGhpcy5ub0l0ZXJhdG9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuSW52YWxpZE9wZXJhdGlvbkVycm9yKFwiaXRlcmF0b3IgY2Fubm90IGJlIHVzZWQgd2hlbiBhIGNhbGxiYWNrIGlzIHJlZ2lzdGVyZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMueWllbGRpbmcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkT3BlcmF0aW9uRXJyb3IoXCJpdGVyYXRvciBpcyBhbHJlYWR5IHlpZWxkaW5nXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMueWllbGRpbmcgPSB0cnVlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy55aWVsZHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuc2lnbmFsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5lcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgdGhpcy5lcnI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHlpZWxkcyA9IHRoaXMueWllbGRzO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5mbGlnaHQgPSB5aWVsZHMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHRoaXMueWllbGRzID0gW107XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB5aWVsZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB5aWVsZHNbaV0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZm4gPSB5aWVsZHNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZuKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZmFpbGVkIG9uIHRoZSBpbnZvY2F0aW9uIC0gZmFpbCB0aGUgaXRlcmF0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzbyB0aGV5IGtub3cgdG8gZml4IHRoZSBjYWxsYmFja1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZuIGNvdWxkIGhhdmUgYWxzbyBzZXQgYW4gZXJyb3JcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IHRoaXMuZXJyO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzZWQrKztcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSB0aGlzLnByb2ZpbGUgPyBEYXRlLm5vdygpIDogMDtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgeWllbGRzW2ldO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWUgPSB0aGlzLnByb2ZpbGUgPyBEYXRlLm5vdygpIC0gc3RhcnQgOiAwO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmluZmxpZ2h0LS07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIHlpZWxkaW5nIGNvdWxkIGhhdmUgcGF1c2VkIGFuZCBtaWNyb3Rhc2tcbiAgICAgICAgICAgICAgICAvLyBjb3VsZCBoYXZlIGFkZGVkIG1lc3NhZ2VzLiBQcmV2ZW50IGFsbG9jYXRpb25zXG4gICAgICAgICAgICAgICAgLy8gaWYgcG9zc2libGVcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLnlpZWxkcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGRzLmxlbmd0aCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMueWllbGRzID0geWllbGRzO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNpZ25hbCA9ICgwLCB1dGlsXzEuZGVmZXJyZWQpKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgLy8gdGhlIGl0ZXJhdG9yIHVzZWQgYnJlYWsvcmV0dXJuXG4gICAgICAgICAgICB0aGlzLmRpZEJyZWFrID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0b3AoZXJyKSB7XG4gICAgICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVyciA9IGVycjtcbiAgICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zaWduYWwucmVzb2x2ZSgpO1xuICAgICAgICB0aGlzLml0ZXJDbG9zZWQucmVzb2x2ZShlcnIpO1xuICAgIH1cbiAgICBnZXRQcm9jZXNzZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vSXRlcmF0b3IgPyB0aGlzLnJlY2VpdmVkIDogdGhpcy5wcm9jZXNzZWQ7XG4gICAgfVxuICAgIGdldFBlbmRpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnlpZWxkcy5sZW5ndGggKyB0aGlzLmluZmxpZ2h0IC0gdGhpcy5wZW5kaW5nRmlsdGVyZWQ7XG4gICAgfVxuICAgIGdldFJlY2VpdmVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWNlaXZlZCAtIHRoaXMuZmlsdGVyZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5RdWV1ZWRJdGVyYXRvckltcGwgPSBRdWV1ZWRJdGVyYXRvckltcGw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWV1ZWRfaXRlcmF0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/queued_iterator.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/request.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/request.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RequestOne = exports.RequestMany = exports.BaseRequest = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nconst nuid_1 = __webpack_require__(/*! ./nuid */ \"./node_modules/@nats-io/nats-core/lib/nuid.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nclass BaseRequest {\n    token;\n    received;\n    ctx;\n    requestSubject;\n    mux;\n    constructor(mux, requestSubject, asyncTraces = true) {\n        this.mux = mux;\n        this.requestSubject = requestSubject;\n        this.received = 0;\n        this.token = nuid_1.nuid.next();\n        if (asyncTraces) {\n            this.ctx = new errors_1.RequestError();\n        }\n    }\n}\nexports.BaseRequest = BaseRequest;\n/**\n * Request expects multiple message response\n * the request ends when the timer expires,\n * an error arrives or an expected count of messages\n * arrives, end is signaled by a null message\n */\nclass RequestMany extends BaseRequest {\n    callback;\n    done;\n    timer;\n    max;\n    opts;\n    constructor(mux, requestSubject, opts = { maxWait: 1000 }) {\n        super(mux, requestSubject);\n        this.opts = opts;\n        if (typeof this.opts.callback !== \"function\") {\n            throw new TypeError(\"callback must be a function\");\n        }\n        this.callback = this.opts.callback;\n        this.max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0\n            ? opts.maxMessages\n            : -1;\n        this.done = (0, util_1.deferred)();\n        this.done.then(() => {\n            this.callback(null, null);\n        });\n        // @ts-ignore: node is not a number\n        this.timer = setTimeout(() => {\n            this.cancel();\n        }, opts.maxWait);\n    }\n    cancel(err) {\n        if (err) {\n            this.callback(err, null);\n        }\n        clearTimeout(this.timer);\n        this.mux.cancel(this);\n        this.done.resolve();\n    }\n    resolver(err, msg) {\n        if (err) {\n            if (this.ctx) {\n                err.stack += `\\n\\n${this.ctx.stack}`;\n            }\n            this.cancel(err);\n        }\n        else {\n            this.callback(null, msg);\n            if (this.opts.strategy === \"count\") {\n                this.max--;\n                if (this.max === 0) {\n                    this.cancel();\n                }\n            }\n            if (this.opts.strategy === \"stall\") {\n                clearTimeout(this.timer);\n                // @ts-ignore: node is not a number\n                this.timer = setTimeout(() => {\n                    this.cancel();\n                }, this.opts.stall || 300);\n            }\n            if (this.opts.strategy === \"sentinel\") {\n                if (msg && msg.data.length === 0) {\n                    this.cancel();\n                }\n            }\n        }\n    }\n}\nexports.RequestMany = RequestMany;\nclass RequestOne extends BaseRequest {\n    deferred;\n    timer;\n    constructor(mux, requestSubject, opts = { timeout: 1000 }, asyncTraces = true) {\n        super(mux, requestSubject, asyncTraces);\n        // extend(this, opts);\n        this.deferred = (0, util_1.deferred)();\n        this.timer = (0, util_1.timeout)(opts.timeout, asyncTraces);\n    }\n    resolver(err, msg) {\n        if (this.timer) {\n            this.timer.cancel();\n        }\n        if (err) {\n            // we have proper stack on timeout\n            if (!(err instanceof errors_1.TimeoutError)) {\n                if (this.ctx) {\n                    this.ctx.message = err.message;\n                    this.ctx.cause = err;\n                    err = this.ctx;\n                }\n                else {\n                    err = new errors_1.errors.RequestError(err.message, { cause: err });\n                }\n            }\n            this.deferred.reject(err);\n        }\n        else {\n            this.deferred.resolve(msg);\n        }\n        this.cancel();\n    }\n    cancel(err) {\n        if (this.timer) {\n            this.timer.cancel();\n        }\n        this.mux.cancel(this);\n        this.deferred.reject(err ? err : new errors_1.RequestError(\"cancelled\"));\n    }\n}\nexports.RequestOne = RequestOne;\n//# sourceMappingURL=request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLG1CQUFtQixHQUFHLG1CQUFtQjtBQUM5RCxlQUFlLG1CQUFPLENBQUMsNkRBQVE7QUFDL0IsZUFBZSxtQkFBTyxDQUFDLDZEQUFRO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLGlFQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxlQUFlO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGVBQWU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxlQUFlO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSxZQUFZO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvcmVxdWVzdC5qcz84MDc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXF1ZXN0T25lID0gZXhwb3J0cy5SZXF1ZXN0TWFueSA9IGV4cG9ydHMuQmFzZVJlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuY29uc3QgbnVpZF8xID0gcmVxdWlyZShcIi4vbnVpZFwiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY2xhc3MgQmFzZVJlcXVlc3Qge1xuICAgIHRva2VuO1xuICAgIHJlY2VpdmVkO1xuICAgIGN0eDtcbiAgICByZXF1ZXN0U3ViamVjdDtcbiAgICBtdXg7XG4gICAgY29uc3RydWN0b3IobXV4LCByZXF1ZXN0U3ViamVjdCwgYXN5bmNUcmFjZXMgPSB0cnVlKSB7XG4gICAgICAgIHRoaXMubXV4ID0gbXV4O1xuICAgICAgICB0aGlzLnJlcXVlc3RTdWJqZWN0ID0gcmVxdWVzdFN1YmplY3Q7XG4gICAgICAgIHRoaXMucmVjZWl2ZWQgPSAwO1xuICAgICAgICB0aGlzLnRva2VuID0gbnVpZF8xLm51aWQubmV4dCgpO1xuICAgICAgICBpZiAoYXN5bmNUcmFjZXMpIHtcbiAgICAgICAgICAgIHRoaXMuY3R4ID0gbmV3IGVycm9yc18xLlJlcXVlc3RFcnJvcigpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5CYXNlUmVxdWVzdCA9IEJhc2VSZXF1ZXN0O1xuLyoqXG4gKiBSZXF1ZXN0IGV4cGVjdHMgbXVsdGlwbGUgbWVzc2FnZSByZXNwb25zZVxuICogdGhlIHJlcXVlc3QgZW5kcyB3aGVuIHRoZSB0aW1lciBleHBpcmVzLFxuICogYW4gZXJyb3IgYXJyaXZlcyBvciBhbiBleHBlY3RlZCBjb3VudCBvZiBtZXNzYWdlc1xuICogYXJyaXZlcywgZW5kIGlzIHNpZ25hbGVkIGJ5IGEgbnVsbCBtZXNzYWdlXG4gKi9cbmNsYXNzIFJlcXVlc3RNYW55IGV4dGVuZHMgQmFzZVJlcXVlc3Qge1xuICAgIGNhbGxiYWNrO1xuICAgIGRvbmU7XG4gICAgdGltZXI7XG4gICAgbWF4O1xuICAgIG9wdHM7XG4gICAgY29uc3RydWN0b3IobXV4LCByZXF1ZXN0U3ViamVjdCwgb3B0cyA9IHsgbWF4V2FpdDogMTAwMCB9KSB7XG4gICAgICAgIHN1cGVyKG11eCwgcmVxdWVzdFN1YmplY3QpO1xuICAgICAgICB0aGlzLm9wdHMgPSBvcHRzO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMub3B0cy5jYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiY2FsbGJhY2sgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSB0aGlzLm9wdHMuY2FsbGJhY2s7XG4gICAgICAgIHRoaXMubWF4ID0gdHlwZW9mIG9wdHMubWF4TWVzc2FnZXMgPT09IFwibnVtYmVyXCIgJiYgb3B0cy5tYXhNZXNzYWdlcyA+IDBcbiAgICAgICAgICAgID8gb3B0cy5tYXhNZXNzYWdlc1xuICAgICAgICAgICAgOiAtMTtcbiAgICAgICAgdGhpcy5kb25lID0gKDAsIHV0aWxfMS5kZWZlcnJlZCkoKTtcbiAgICAgICAgdGhpcy5kb25lLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFjayhudWxsLCBudWxsKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmU6IG5vZGUgaXMgbm90IGEgbnVtYmVyXG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2FuY2VsKCk7XG4gICAgICAgIH0sIG9wdHMubWF4V2FpdCk7XG4gICAgfVxuICAgIGNhbmNlbChlcnIpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFjayhlcnIsIG51bGwpO1xuICAgICAgICB9XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcbiAgICAgICAgdGhpcy5tdXguY2FuY2VsKHRoaXMpO1xuICAgICAgICB0aGlzLmRvbmUucmVzb2x2ZSgpO1xuICAgIH1cbiAgICByZXNvbHZlcihlcnIsIG1zZykge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5jdHgpIHtcbiAgICAgICAgICAgICAgICBlcnIuc3RhY2sgKz0gYFxcblxcbiR7dGhpcy5jdHguc3RhY2t9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuY2FuY2VsKGVycik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrKG51bGwsIG1zZyk7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRzLnN0cmF0ZWd5ID09PSBcImNvdW50XCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1heC0tO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm1heCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbmNlbCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLm9wdHMuc3RyYXRlZ3kgPT09IFwic3RhbGxcIikge1xuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlOiBub2RlIGlzIG5vdCBhIG51bWJlclxuICAgICAgICAgICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW5jZWwoKTtcbiAgICAgICAgICAgICAgICB9LCB0aGlzLm9wdHMuc3RhbGwgfHwgMzAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLm9wdHMuc3RyYXRlZ3kgPT09IFwic2VudGluZWxcIikge1xuICAgICAgICAgICAgICAgIGlmIChtc2cgJiYgbXNnLmRhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5SZXF1ZXN0TWFueSA9IFJlcXVlc3RNYW55O1xuY2xhc3MgUmVxdWVzdE9uZSBleHRlbmRzIEJhc2VSZXF1ZXN0IHtcbiAgICBkZWZlcnJlZDtcbiAgICB0aW1lcjtcbiAgICBjb25zdHJ1Y3RvcihtdXgsIHJlcXVlc3RTdWJqZWN0LCBvcHRzID0geyB0aW1lb3V0OiAxMDAwIH0sIGFzeW5jVHJhY2VzID0gdHJ1ZSkge1xuICAgICAgICBzdXBlcihtdXgsIHJlcXVlc3RTdWJqZWN0LCBhc3luY1RyYWNlcyk7XG4gICAgICAgIC8vIGV4dGVuZCh0aGlzLCBvcHRzKTtcbiAgICAgICAgdGhpcy5kZWZlcnJlZCA9ICgwLCB1dGlsXzEuZGVmZXJyZWQpKCk7XG4gICAgICAgIHRoaXMudGltZXIgPSAoMCwgdXRpbF8xLnRpbWVvdXQpKG9wdHMudGltZW91dCwgYXN5bmNUcmFjZXMpO1xuICAgIH1cbiAgICByZXNvbHZlcihlcnIsIG1zZykge1xuICAgICAgICBpZiAodGhpcy50aW1lcikge1xuICAgICAgICAgICAgdGhpcy50aW1lci5jYW5jZWwoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAvLyB3ZSBoYXZlIHByb3BlciBzdGFjayBvbiB0aW1lb3V0XG4gICAgICAgICAgICBpZiAoIShlcnIgaW5zdGFuY2VvZiBlcnJvcnNfMS5UaW1lb3V0RXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY3R4KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3R4Lm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHguY2F1c2UgPSBlcnI7XG4gICAgICAgICAgICAgICAgICAgIGVyciA9IHRoaXMuY3R4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZXJyID0gbmV3IGVycm9yc18xLmVycm9ycy5SZXF1ZXN0RXJyb3IoZXJyLm1lc3NhZ2UsIHsgY2F1c2U6IGVyciB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5kZWZlcnJlZC5yZXNvbHZlKG1zZyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYW5jZWwoKTtcbiAgICB9XG4gICAgY2FuY2VsKGVycikge1xuICAgICAgICBpZiAodGhpcy50aW1lcikge1xuICAgICAgICAgICAgdGhpcy50aW1lci5jYW5jZWwoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm11eC5jYW5jZWwodGhpcyk7XG4gICAgICAgIHRoaXMuZGVmZXJyZWQucmVqZWN0KGVyciA/IGVyciA6IG5ldyBlcnJvcnNfMS5SZXF1ZXN0RXJyb3IoXCJjYW5jZWxsZWRcIikpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVxdWVzdE9uZSA9IFJlcXVlc3RPbmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/request.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/semver.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/semver.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2022-2023 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Features = exports.Feature = void 0;\nexports.parseSemVer = parseSemVer;\nexports.compare = compare;\nfunction parseSemVer(s = \"\") {\n    const m = s.match(/(\\d+).(\\d+).(\\d+)/);\n    if (m) {\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            micro: parseInt(m[3]),\n        };\n    }\n    throw new Error(`'${s}' is not a semver value`);\n}\nfunction compare(a, b) {\n    if (a.major < b.major)\n        return -1;\n    if (a.major > b.major)\n        return 1;\n    if (a.minor < b.minor)\n        return -1;\n    if (a.minor > b.minor)\n        return 1;\n    if (a.micro < b.micro)\n        return -1;\n    if (a.micro > b.micro)\n        return 1;\n    return 0;\n}\nvar Feature;\n(function (Feature) {\n    Feature[\"JS_KV\"] = \"js_kv\";\n    Feature[\"JS_OBJECTSTORE\"] = \"js_objectstore\";\n    Feature[\"JS_PULL_MAX_BYTES\"] = \"js_pull_max_bytes\";\n    Feature[\"JS_NEW_CONSUMER_CREATE_API\"] = \"js_new_consumer_create\";\n    Feature[\"JS_ALLOW_DIRECT\"] = \"js_allow_direct\";\n    Feature[\"JS_MULTIPLE_CONSUMER_FILTER\"] = \"js_multiple_consumer_filter\";\n    Feature[\"JS_SIMPLIFICATION\"] = \"js_simplification\";\n    Feature[\"JS_STREAM_CONSUMER_METADATA\"] = \"js_stream_consumer_metadata\";\n    Feature[\"JS_CONSUMER_FILTER_SUBJECTS\"] = \"js_consumer_filter_subjects\";\n    Feature[\"JS_STREAM_FIRST_SEQ\"] = \"js_stream_first_seq\";\n    Feature[\"JS_STREAM_SUBJECT_TRANSFORM\"] = \"js_stream_subject_transform\";\n    Feature[\"JS_STREAM_SOURCE_SUBJECT_TRANSFORM\"] = \"js_stream_source_subject_transform\";\n    Feature[\"JS_STREAM_COMPRESSION\"] = \"js_stream_compression\";\n    Feature[\"JS_DEFAULT_CONSUMER_LIMITS\"] = \"js_default_consumer_limits\";\n    Feature[\"JS_BATCH_DIRECT_GET\"] = \"js_batch_direct_get\";\n    Feature[\"JS_PRIORITY_GROUPS\"] = \"js_priority_groups\";\n})(Feature || (exports.Feature = Feature = {}));\nclass Features {\n    server;\n    features;\n    disabled;\n    constructor(v) {\n        this.features = new Map();\n        this.disabled = [];\n        this.update(v);\n    }\n    /**\n     * Removes all disabled entries\n     */\n    resetDisabled() {\n        this.disabled.length = 0;\n        this.update(this.server);\n    }\n    /**\n     * Disables a particular feature.\n     * @param f\n     */\n    disable(f) {\n        this.disabled.push(f);\n        this.update(this.server);\n    }\n    isDisabled(f) {\n        return this.disabled.indexOf(f) !== -1;\n    }\n    update(v) {\n        if (typeof v === \"string\") {\n            v = parseSemVer(v);\n        }\n        this.server = v;\n        this.set(Feature.JS_KV, \"2.6.2\");\n        this.set(Feature.JS_OBJECTSTORE, \"2.6.3\");\n        this.set(Feature.JS_PULL_MAX_BYTES, \"2.8.3\");\n        this.set(Feature.JS_NEW_CONSUMER_CREATE_API, \"2.9.0\");\n        this.set(Feature.JS_ALLOW_DIRECT, \"2.9.0\");\n        this.set(Feature.JS_MULTIPLE_CONSUMER_FILTER, \"2.10.0\");\n        this.set(Feature.JS_SIMPLIFICATION, \"2.9.4\");\n        this.set(Feature.JS_STREAM_CONSUMER_METADATA, \"2.10.0\");\n        this.set(Feature.JS_CONSUMER_FILTER_SUBJECTS, \"2.10.0\");\n        this.set(Feature.JS_STREAM_FIRST_SEQ, \"2.10.0\");\n        this.set(Feature.JS_STREAM_SUBJECT_TRANSFORM, \"2.10.0\");\n        this.set(Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM, \"2.10.0\");\n        this.set(Feature.JS_STREAM_COMPRESSION, \"2.10.0\");\n        this.set(Feature.JS_DEFAULT_CONSUMER_LIMITS, \"2.10.0\");\n        this.set(Feature.JS_BATCH_DIRECT_GET, \"2.11.0\");\n        this.set(Feature.JS_PRIORITY_GROUPS, \"2.11.0\");\n        this.disabled.forEach((f) => {\n            this.features.delete(f);\n        });\n    }\n    /**\n     * Register a feature that requires a particular server version.\n     * @param f\n     * @param requires\n     */\n    set(f, requires) {\n        this.features.set(f, {\n            min: requires,\n            ok: compare(this.server, parseSemVer(requires)) >= 0,\n        });\n    }\n    /**\n     * Returns whether the feature is available and the min server\n     * version that supports it.\n     * @param f\n     */\n    get(f) {\n        return this.features.get(f) || { min: \"unknown\", ok: false };\n    }\n    /**\n     * Returns true if the feature is supported\n     * @param f\n     */\n    supports(f) {\n        return this.get(f)?.ok || false;\n    }\n    /**\n     * Returns true if the server is at least the specified version\n     * @param v\n     */\n    require(v) {\n        if (typeof v === \"string\") {\n            v = parseSemVer(v);\n        }\n        return compare(this.server, v) >= 0;\n    }\n}\nexports.Features = Features;\n//# sourceMappingURL=semver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9zZW12ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGVBQWU7QUFDbEMsbUJBQW1CO0FBQ25CLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsRUFBRTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsY0FBYyxlQUFlLGVBQWU7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi9zZW12ZXIuanM/NzgyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgMjAyMi0yMDIzIFRoZSBOQVRTIEF1dGhvcnNcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZlYXR1cmVzID0gZXhwb3J0cy5GZWF0dXJlID0gdm9pZCAwO1xuZXhwb3J0cy5wYXJzZVNlbVZlciA9IHBhcnNlU2VtVmVyO1xuZXhwb3J0cy5jb21wYXJlID0gY29tcGFyZTtcbmZ1bmN0aW9uIHBhcnNlU2VtVmVyKHMgPSBcIlwiKSB7XG4gICAgY29uc3QgbSA9IHMubWF0Y2goLyhcXGQrKS4oXFxkKykuKFxcZCspLyk7XG4gICAgaWYgKG0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1ham9yOiBwYXJzZUludChtWzFdKSxcbiAgICAgICAgICAgIG1pbm9yOiBwYXJzZUludChtWzJdKSxcbiAgICAgICAgICAgIG1pY3JvOiBwYXJzZUludChtWzNdKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGAnJHtzfScgaXMgbm90IGEgc2VtdmVyIHZhbHVlYCk7XG59XG5mdW5jdGlvbiBjb21wYXJlKGEsIGIpIHtcbiAgICBpZiAoYS5tYWpvciA8IGIubWFqb3IpXG4gICAgICAgIHJldHVybiAtMTtcbiAgICBpZiAoYS5tYWpvciA+IGIubWFqb3IpXG4gICAgICAgIHJldHVybiAxO1xuICAgIGlmIChhLm1pbm9yIDwgYi5taW5vcilcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIGlmIChhLm1pbm9yID4gYi5taW5vcilcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgaWYgKGEubWljcm8gPCBiLm1pY3JvKVxuICAgICAgICByZXR1cm4gLTE7XG4gICAgaWYgKGEubWljcm8gPiBiLm1pY3JvKVxuICAgICAgICByZXR1cm4gMTtcbiAgICByZXR1cm4gMDtcbn1cbnZhciBGZWF0dXJlO1xuKGZ1bmN0aW9uIChGZWF0dXJlKSB7XG4gICAgRmVhdHVyZVtcIkpTX0tWXCJdID0gXCJqc19rdlwiO1xuICAgIEZlYXR1cmVbXCJKU19PQkpFQ1RTVE9SRVwiXSA9IFwianNfb2JqZWN0c3RvcmVcIjtcbiAgICBGZWF0dXJlW1wiSlNfUFVMTF9NQVhfQllURVNcIl0gPSBcImpzX3B1bGxfbWF4X2J5dGVzXCI7XG4gICAgRmVhdHVyZVtcIkpTX05FV19DT05TVU1FUl9DUkVBVEVfQVBJXCJdID0gXCJqc19uZXdfY29uc3VtZXJfY3JlYXRlXCI7XG4gICAgRmVhdHVyZVtcIkpTX0FMTE9XX0RJUkVDVFwiXSA9IFwianNfYWxsb3dfZGlyZWN0XCI7XG4gICAgRmVhdHVyZVtcIkpTX01VTFRJUExFX0NPTlNVTUVSX0ZJTFRFUlwiXSA9IFwianNfbXVsdGlwbGVfY29uc3VtZXJfZmlsdGVyXCI7XG4gICAgRmVhdHVyZVtcIkpTX1NJTVBMSUZJQ0FUSU9OXCJdID0gXCJqc19zaW1wbGlmaWNhdGlvblwiO1xuICAgIEZlYXR1cmVbXCJKU19TVFJFQU1fQ09OU1VNRVJfTUVUQURBVEFcIl0gPSBcImpzX3N0cmVhbV9jb25zdW1lcl9tZXRhZGF0YVwiO1xuICAgIEZlYXR1cmVbXCJKU19DT05TVU1FUl9GSUxURVJfU1VCSkVDVFNcIl0gPSBcImpzX2NvbnN1bWVyX2ZpbHRlcl9zdWJqZWN0c1wiO1xuICAgIEZlYXR1cmVbXCJKU19TVFJFQU1fRklSU1RfU0VRXCJdID0gXCJqc19zdHJlYW1fZmlyc3Rfc2VxXCI7XG4gICAgRmVhdHVyZVtcIkpTX1NUUkVBTV9TVUJKRUNUX1RSQU5TRk9STVwiXSA9IFwianNfc3RyZWFtX3N1YmplY3RfdHJhbnNmb3JtXCI7XG4gICAgRmVhdHVyZVtcIkpTX1NUUkVBTV9TT1VSQ0VfU1VCSkVDVF9UUkFOU0ZPUk1cIl0gPSBcImpzX3N0cmVhbV9zb3VyY2Vfc3ViamVjdF90cmFuc2Zvcm1cIjtcbiAgICBGZWF0dXJlW1wiSlNfU1RSRUFNX0NPTVBSRVNTSU9OXCJdID0gXCJqc19zdHJlYW1fY29tcHJlc3Npb25cIjtcbiAgICBGZWF0dXJlW1wiSlNfREVGQVVMVF9DT05TVU1FUl9MSU1JVFNcIl0gPSBcImpzX2RlZmF1bHRfY29uc3VtZXJfbGltaXRzXCI7XG4gICAgRmVhdHVyZVtcIkpTX0JBVENIX0RJUkVDVF9HRVRcIl0gPSBcImpzX2JhdGNoX2RpcmVjdF9nZXRcIjtcbiAgICBGZWF0dXJlW1wiSlNfUFJJT1JJVFlfR1JPVVBTXCJdID0gXCJqc19wcmlvcml0eV9ncm91cHNcIjtcbn0pKEZlYXR1cmUgfHwgKGV4cG9ydHMuRmVhdHVyZSA9IEZlYXR1cmUgPSB7fSkpO1xuY2xhc3MgRmVhdHVyZXMge1xuICAgIHNlcnZlcjtcbiAgICBmZWF0dXJlcztcbiAgICBkaXNhYmxlZDtcbiAgICBjb25zdHJ1Y3Rvcih2KSB7XG4gICAgICAgIHRoaXMuZmVhdHVyZXMgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuZGlzYWJsZWQgPSBbXTtcbiAgICAgICAgdGhpcy51cGRhdGUodik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGRpc2FibGVkIGVudHJpZXNcbiAgICAgKi9cbiAgICByZXNldERpc2FibGVkKCkge1xuICAgICAgICB0aGlzLmRpc2FibGVkLmxlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMudXBkYXRlKHRoaXMuc2VydmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGlzYWJsZXMgYSBwYXJ0aWN1bGFyIGZlYXR1cmUuXG4gICAgICogQHBhcmFtIGZcbiAgICAgKi9cbiAgICBkaXNhYmxlKGYpIHtcbiAgICAgICAgdGhpcy5kaXNhYmxlZC5wdXNoKGYpO1xuICAgICAgICB0aGlzLnVwZGF0ZSh0aGlzLnNlcnZlcik7XG4gICAgfVxuICAgIGlzRGlzYWJsZWQoZikge1xuICAgICAgICByZXR1cm4gdGhpcy5kaXNhYmxlZC5pbmRleE9mKGYpICE9PSAtMTtcbiAgICB9XG4gICAgdXBkYXRlKHYpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB2ID0gcGFyc2VTZW1WZXIodik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXJ2ZXIgPSB2O1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX0tWLCBcIjIuNi4yXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX09CSkVDVFNUT1JFLCBcIjIuNi4zXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX1BVTExfTUFYX0JZVEVTLCBcIjIuOC4zXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX05FV19DT05TVU1FUl9DUkVBVEVfQVBJLCBcIjIuOS4wXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX0FMTE9XX0RJUkVDVCwgXCIyLjkuMFwiKTtcbiAgICAgICAgdGhpcy5zZXQoRmVhdHVyZS5KU19NVUxUSVBMRV9DT05TVU1FUl9GSUxURVIsIFwiMi4xMC4wXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX1NJTVBMSUZJQ0FUSU9OLCBcIjIuOS40XCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX1NUUkVBTV9DT05TVU1FUl9NRVRBREFUQSwgXCIyLjEwLjBcIik7XG4gICAgICAgIHRoaXMuc2V0KEZlYXR1cmUuSlNfQ09OU1VNRVJfRklMVEVSX1NVQkpFQ1RTLCBcIjIuMTAuMFwiKTtcbiAgICAgICAgdGhpcy5zZXQoRmVhdHVyZS5KU19TVFJFQU1fRklSU1RfU0VRLCBcIjIuMTAuMFwiKTtcbiAgICAgICAgdGhpcy5zZXQoRmVhdHVyZS5KU19TVFJFQU1fU1VCSkVDVF9UUkFOU0ZPUk0sIFwiMi4xMC4wXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX1NUUkVBTV9TT1VSQ0VfU1VCSkVDVF9UUkFOU0ZPUk0sIFwiMi4xMC4wXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX1NUUkVBTV9DT01QUkVTU0lPTiwgXCIyLjEwLjBcIik7XG4gICAgICAgIHRoaXMuc2V0KEZlYXR1cmUuSlNfREVGQVVMVF9DT05TVU1FUl9MSU1JVFMsIFwiMi4xMC4wXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX0JBVENIX0RJUkVDVF9HRVQsIFwiMi4xMS4wXCIpO1xuICAgICAgICB0aGlzLnNldChGZWF0dXJlLkpTX1BSSU9SSVRZX0dST1VQUywgXCIyLjExLjBcIik7XG4gICAgICAgIHRoaXMuZGlzYWJsZWQuZm9yRWFjaCgoZikgPT4ge1xuICAgICAgICAgICAgdGhpcy5mZWF0dXJlcy5kZWxldGUoZik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWdpc3RlciBhIGZlYXR1cmUgdGhhdCByZXF1aXJlcyBhIHBhcnRpY3VsYXIgc2VydmVyIHZlcnNpb24uXG4gICAgICogQHBhcmFtIGZcbiAgICAgKiBAcGFyYW0gcmVxdWlyZXNcbiAgICAgKi9cbiAgICBzZXQoZiwgcmVxdWlyZXMpIHtcbiAgICAgICAgdGhpcy5mZWF0dXJlcy5zZXQoZiwge1xuICAgICAgICAgICAgbWluOiByZXF1aXJlcyxcbiAgICAgICAgICAgIG9rOiBjb21wYXJlKHRoaXMuc2VydmVyLCBwYXJzZVNlbVZlcihyZXF1aXJlcykpID49IDAsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGZlYXR1cmUgaXMgYXZhaWxhYmxlIGFuZCB0aGUgbWluIHNlcnZlclxuICAgICAqIHZlcnNpb24gdGhhdCBzdXBwb3J0cyBpdC5cbiAgICAgKiBAcGFyYW0gZlxuICAgICAqL1xuICAgIGdldChmKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZlYXR1cmVzLmdldChmKSB8fCB7IG1pbjogXCJ1bmtub3duXCIsIG9rOiBmYWxzZSB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIGZlYXR1cmUgaXMgc3VwcG9ydGVkXG4gICAgICogQHBhcmFtIGZcbiAgICAgKi9cbiAgICBzdXBwb3J0cyhmKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldChmKT8ub2sgfHwgZmFsc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgc2VydmVyIGlzIGF0IGxlYXN0IHRoZSBzcGVjaWZpZWQgdmVyc2lvblxuICAgICAqIEBwYXJhbSB2XG4gICAgICovXG4gICAgcmVxdWlyZSh2KSB7XG4gICAgICAgIGlmICh0eXBlb2YgdiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdiA9IHBhcnNlU2VtVmVyKHYpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb21wYXJlKHRoaXMuc2VydmVyLCB2KSA+PSAwO1xuICAgIH1cbn1cbmV4cG9ydHMuRmVhdHVyZXMgPSBGZWF0dXJlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbXZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/semver.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/servers.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/servers.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Servers = exports.ServerImpl = void 0;\nexports.isIPV4OrHostname = isIPV4OrHostname;\nexports.hostPort = hostPort;\n/*\n * Copyright 2018-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst transport_1 = __webpack_require__(/*! ./transport */ \"./node_modules/@nats-io/nats-core/lib/transport.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nconst ipparser_1 = __webpack_require__(/*! ./ipparser */ \"./node_modules/@nats-io/nats-core/lib/ipparser.js\");\nconst core_1 = __webpack_require__(/*! ./core */ \"./node_modules/@nats-io/nats-core/lib/core.js\");\nfunction isIPV4OrHostname(hp) {\n    // in the wild seeing IPv4s as IPv6s\n    // ::ffff:35.234.43.228 which incorrectly get mapped to IPv4 unless\n    // we add this test first\n    if (hp.indexOf(\"[\") !== -1 || hp.indexOf(\"::\") !== -1) {\n        return false;\n    }\n    if (hp.indexOf(\".\") !== -1) {\n        return true;\n    }\n    // if we have a plain hostname or host:port\n    if (hp.split(\":\").length <= 2) {\n        return true;\n    }\n    return false;\n}\nfunction isIPV6(hp) {\n    return !isIPV4OrHostname(hp);\n}\nfunction filterIpv6MappedToIpv4(hp) {\n    const prefix = \"::FFFF:\";\n    const idx = hp.toUpperCase().indexOf(prefix);\n    if (idx !== -1 && hp.indexOf(\".\") !== -1) {\n        // we have something like: ::FFFF:127.0.0.1 or [::FFFF:127.0.0.1]:4222\n        let ip = hp.substring(idx + prefix.length);\n        ip = ip.replace(\"[\", \"\");\n        return ip.replace(\"]\", \"\");\n    }\n    return hp;\n}\nfunction hostPort(u) {\n    u = u.trim();\n    // remove any protocol that may have been provided\n    if (u.match(/^(.*:\\/\\/)(.*)/m)) {\n        u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\n    }\n    // in web environments, URL may not be a living standard\n    // that means that protocols other than HTTP/S are not\n    // parsable correctly.\n    // the third complication is that we may have been given\n    // an IPv6 or worse IPv6 mapping an Ipv4\n    u = filterIpv6MappedToIpv4(u);\n    // we only wrap cases where they gave us a plain ipv6\n    // and we are not already bracketed\n    if (isIPV6(u) && u.indexOf(\"[\") === -1) {\n        u = `[${u}]`;\n    }\n    // if we have ipv6, we expect port after ']:' otherwise after ':'\n    const op = isIPV6(u) ? u.match(/(]:)(\\d+)/) : u.match(/(:)(\\d+)/);\n    const port = op && op.length === 3 && op[1] && op[2]\n        ? parseInt(op[2])\n        : core_1.DEFAULT_PORT;\n    // the next complication is that new URL() may\n    // eat ports which match the protocol - so for example\n    // port 80 may be eliminated - so we flip the protocol\n    // so that it always yields a value\n    const protocol = port === 80 ? \"https\" : \"http\";\n    const url = new URL(`${protocol}://${u}`);\n    url.port = `${port}`;\n    let hostname = url.hostname;\n    // if we are bracketed, we need to rip it out\n    if (hostname.charAt(0) === \"[\") {\n        hostname = hostname.substring(1, hostname.length - 1);\n    }\n    const listen = url.host;\n    return { listen, hostname, port };\n}\n/**\n * @hidden\n */\nclass ServerImpl {\n    src;\n    listen;\n    hostname;\n    port;\n    didConnect;\n    reconnects;\n    lastConnect;\n    gossiped;\n    tlsName;\n    resolves;\n    constructor(u, gossiped = false) {\n        this.src = u;\n        this.tlsName = \"\";\n        const v = hostPort(u);\n        this.listen = v.listen;\n        this.hostname = v.hostname;\n        this.port = v.port;\n        this.didConnect = false;\n        this.reconnects = 0;\n        this.lastConnect = 0;\n        this.gossiped = gossiped;\n    }\n    toString() {\n        return this.listen;\n    }\n    async resolve(opts) {\n        if (!opts.fn || opts.resolve === false) {\n            // we cannot resolve - transport doesn't support it\n            // or user opted out\n            // don't add - to resolves or we get a circ reference\n            return [this];\n        }\n        const buf = [];\n        if ((0, ipparser_1.isIP)(this.hostname)) {\n            // don't add - to resolves or we get a circ reference\n            return [this];\n        }\n        else {\n            // resolve the hostname to ips\n            const ips = await opts.fn(this.hostname);\n            if (opts.debug) {\n                console.log(`resolve ${this.hostname} = ${ips.join(\",\")}`);\n            }\n            for (const ip of ips) {\n                // letting URL handle the details of representing IPV6 ip with a port, etc\n                // careful to make sure the protocol doesn't line with standard ports or they\n                // get swallowed\n                const proto = this.port === 80 ? \"https\" : \"http\";\n                // ipv6 won't be bracketed here, because it came from resolve\n                const url = new URL(`${proto}://${isIPV6(ip) ? \"[\" + ip + \"]\" : ip}`);\n                url.port = `${this.port}`;\n                const ss = new ServerImpl(url.host, false);\n                ss.tlsName = this.hostname;\n                buf.push(ss);\n            }\n        }\n        if (opts.randomize) {\n            (0, util_1.shuffle)(buf);\n        }\n        this.resolves = buf;\n        return buf;\n    }\n}\nexports.ServerImpl = ServerImpl;\n/**\n * @hidden\n */\nclass Servers {\n    firstSelect;\n    servers;\n    currentServer;\n    tlsName;\n    randomize;\n    constructor(listens = [], opts = {}) {\n        this.firstSelect = true;\n        this.servers = [];\n        this.tlsName = \"\";\n        this.randomize = opts.randomize || false;\n        const urlParseFn = (0, transport_1.getUrlParseFn)();\n        if (listens) {\n            listens.forEach((hp) => {\n                hp = urlParseFn ? urlParseFn(hp) : hp;\n                this.servers.push(new ServerImpl(hp));\n            });\n            if (this.randomize) {\n                this.servers = (0, util_1.shuffle)(this.servers);\n            }\n        }\n        if (this.servers.length === 0) {\n            this.addServer(`${core_1.DEFAULT_HOST}:${(0, transport_1.defaultPort)()}`, false);\n        }\n        this.currentServer = this.servers[0];\n    }\n    clear() {\n        this.servers.length = 0;\n    }\n    updateTLSName() {\n        const cs = this.getCurrentServer();\n        if (!(0, ipparser_1.isIP)(cs.hostname)) {\n            this.tlsName = cs.hostname;\n            this.servers.forEach((s) => {\n                if (s.gossiped) {\n                    s.tlsName = this.tlsName;\n                }\n            });\n        }\n    }\n    getCurrentServer() {\n        return this.currentServer;\n    }\n    addServer(u, implicit = false) {\n        const urlParseFn = (0, transport_1.getUrlParseFn)();\n        u = urlParseFn ? urlParseFn(u) : u;\n        const s = new ServerImpl(u, implicit);\n        if ((0, ipparser_1.isIP)(s.hostname)) {\n            s.tlsName = this.tlsName;\n        }\n        this.servers.push(s);\n    }\n    selectServer() {\n        // allow using select without breaking the order of the servers\n        if (this.firstSelect) {\n            this.firstSelect = false;\n            return this.currentServer;\n        }\n        const t = this.servers.shift();\n        if (t) {\n            this.servers.push(t);\n            this.currentServer = t;\n        }\n        return t;\n    }\n    removeCurrentServer() {\n        this.removeServer(this.currentServer);\n    }\n    removeServer(server) {\n        if (server) {\n            const index = this.servers.indexOf(server);\n            this.servers.splice(index, 1);\n        }\n    }\n    length() {\n        return this.servers.length;\n    }\n    next() {\n        return this.servers.length ? this.servers[0] : undefined;\n    }\n    getServers() {\n        return this.servers;\n    }\n    update(info, encrypted) {\n        const added = [];\n        let deleted = [];\n        const urlParseFn = (0, transport_1.getUrlParseFn)();\n        const discovered = new Map();\n        if (info.connect_urls && info.connect_urls.length > 0) {\n            info.connect_urls.forEach((hp) => {\n                hp = urlParseFn ? urlParseFn(hp, encrypted) : hp;\n                const s = new ServerImpl(hp, true);\n                discovered.set(hp, s);\n            });\n        }\n        // remove gossiped servers that are no longer reported\n        const toDelete = [];\n        this.servers.forEach((s, index) => {\n            const u = s.listen;\n            if (s.gossiped && this.currentServer.listen !== u &&\n                discovered.get(u) === undefined) {\n                // server was removed\n                toDelete.push(index);\n            }\n            // remove this entry from reported\n            discovered.delete(u);\n        });\n        // perform the deletion\n        toDelete.reverse();\n        toDelete.forEach((index) => {\n            const removed = this.servers.splice(index, 1);\n            deleted = deleted.concat(removed[0].listen);\n        });\n        // remaining servers are new\n        discovered.forEach((v, k) => {\n            this.servers.push(v);\n            added.push(k);\n        });\n        return { added, deleted };\n    }\n}\nexports.Servers = Servers;\n//# sourceMappingURL=servers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/servers.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/sha256.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/sha256.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n// deno-fmt-ignore-file\n// deno-lint-ignore-file\n// This code was bundled using `deno bundle` and it's not recommended to edit it manually\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SHA256 = exports.BYTES = void 0;\nexports.sha256 = sha256;\n// deno bundle https://deno.land/x/sha256@v1.0.2/mod.ts\n// The MIT License (MIT)\n//\n// Original work (c) Marco Paland (marco@paland.com) 2015-2018, PALANDesign Hannover, Germany\n//\n// Deno port Copyright (c) 2019 Noah Anabiik Schwarz\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nfunction getLengths(b64) {\n    const len = b64.length;\n    let validLen = b64.indexOf(\"=\");\n    if (validLen === -1) {\n        validLen = len;\n    }\n    const placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\nfunction init(lookup, revLookup, urlsafe = false) {\n    function _byteLength(validLen, placeHoldersLen) {\n        return Math.floor((validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen);\n    }\n    function tripletToBase64(num) {\n        return lookup[num >> 18 & 0x3f] + lookup[num >> 12 & 0x3f] + lookup[num >> 6 & 0x3f] + lookup[num & 0x3f];\n    }\n    function encodeChunk(buf, start, end) {\n        const out = new Array((end - start) / 3);\n        for (let i = start, curTriplet = 0; i < end; i += 3) {\n            out[curTriplet++] = tripletToBase64((buf[i] << 16) + (buf[i + 1] << 8) + buf[i + 2]);\n        }\n        return out.join(\"\");\n    }\n    return {\n        byteLength(b64) {\n            return _byteLength.apply(null, getLengths(b64));\n        },\n        toUint8Array(b64) {\n            const [validLen, placeHoldersLen] = getLengths(b64);\n            const buf = new Uint8Array(_byteLength(validLen, placeHoldersLen));\n            const len = placeHoldersLen ? validLen - 4 : validLen;\n            let tmp;\n            let curByte = 0;\n            let i;\n            for (i = 0; i < len; i += 4) {\n                tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n                buf[curByte++] = tmp >> 16 & 0xff;\n                buf[curByte++] = tmp >> 8 & 0xff;\n                buf[curByte++] = tmp & 0xff;\n            }\n            if (placeHoldersLen === 2) {\n                tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n                buf[curByte++] = tmp & 0xff;\n            }\n            else if (placeHoldersLen === 1) {\n                tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n                buf[curByte++] = tmp >> 8 & 0xff;\n                buf[curByte++] = tmp & 0xff;\n            }\n            return buf;\n        },\n        fromUint8Array(buf) {\n            const maxChunkLength = 16383;\n            const len = buf.length;\n            const extraBytes = len % 3;\n            const len2 = len - extraBytes;\n            const parts = new Array(Math.ceil(len2 / 16383) + (extraBytes ? 1 : 0));\n            let curChunk = 0;\n            let chunkEnd;\n            for (let i = 0; i < len2; i += maxChunkLength) {\n                chunkEnd = i + maxChunkLength;\n                parts[curChunk++] = encodeChunk(buf, i, chunkEnd > len2 ? len2 : chunkEnd);\n            }\n            let tmp;\n            if (extraBytes === 1) {\n                tmp = buf[len2];\n                parts[curChunk] = lookup[tmp >> 2] + lookup[tmp << 4 & 0x3f];\n                if (!urlsafe)\n                    parts[curChunk] += \"==\";\n            }\n            else if (extraBytes === 2) {\n                tmp = buf[len2] << 8 | buf[len2 + 1] & 0xff;\n                parts[curChunk] = lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3f] + lookup[tmp << 2 & 0x3f];\n                if (!urlsafe)\n                    parts[curChunk] += \"=\";\n            }\n            return parts.join(\"\");\n        }\n    };\n}\nconst lookup = [];\nconst revLookup = [];\nconst code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\nfor (let i = 0, l = code.length; i < l; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n}\nconst { byteLength, toUint8Array, fromUint8Array } = init(lookup, revLookup, true);\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\nfunction toHexString(buf) {\n    return buf.reduce((hex, __byte) => `${hex}${__byte < 16 ? \"0\" : \"\"}${__byte.toString(16)}`, \"\");\n}\nfunction fromHexString(hex) {\n    const len = hex.length;\n    if (len % 2 || !/^[0-9a-fA-F]+$/.test(hex)) {\n        throw new TypeError(\"Invalid hex string.\");\n    }\n    hex = hex.toLowerCase();\n    const buf = new Uint8Array(Math.floor(len / 2));\n    const end = len / 2;\n    for (let i = 0; i < end; ++i) {\n        buf[i] = parseInt(hex.substr(i * 2, 2), 16);\n    }\n    return buf;\n}\nfunction decode(buf, encoding = \"utf8\") {\n    if (/^utf-?8$/i.test(encoding)) {\n        return decoder.decode(buf);\n    }\n    else if (/^base64$/i.test(encoding)) {\n        return fromUint8Array(buf);\n    }\n    else if (/^hex(?:adecimal)?$/i.test(encoding)) {\n        return toHexString(buf);\n    }\n    else {\n        throw new TypeError(\"Unsupported string encoding.\");\n    }\n}\nfunction encode(str, encoding = \"utf8\") {\n    if (/^utf-?8$/i.test(encoding)) {\n        return encoder.encode(str);\n    }\n    else if (/^base64$/i.test(encoding)) {\n        return toUint8Array(str);\n    }\n    else if (/^hex(?:adecimal)?$/i.test(encoding)) {\n        return fromHexString(str);\n    }\n    else {\n        throw new TypeError(\"Unsupported string encoding.\");\n    }\n}\nconst BYTES = 32;\nexports.BYTES = BYTES;\nclass SHA256 {\n    hashSize = 32;\n    _buf;\n    _bufIdx;\n    _count;\n    _K;\n    _H;\n    _finalized;\n    constructor() {\n        this._buf = new Uint8Array(64);\n        this._K = new Uint32Array([\n            0x428a2f98,\n            0x71374491,\n            0xb5c0fbcf,\n            0xe9b5dba5,\n            0x3956c25b,\n            0x59f111f1,\n            0x923f82a4,\n            0xab1c5ed5,\n            0xd807aa98,\n            0x12835b01,\n            0x243185be,\n            0x550c7dc3,\n            0x72be5d74,\n            0x80deb1fe,\n            0x9bdc06a7,\n            0xc19bf174,\n            0xe49b69c1,\n            0xefbe4786,\n            0x0fc19dc6,\n            0x240ca1cc,\n            0x2de92c6f,\n            0x4a7484aa,\n            0x5cb0a9dc,\n            0x76f988da,\n            0x983e5152,\n            0xa831c66d,\n            0xb00327c8,\n            0xbf597fc7,\n            0xc6e00bf3,\n            0xd5a79147,\n            0x06ca6351,\n            0x14292967,\n            0x27b70a85,\n            0x2e1b2138,\n            0x4d2c6dfc,\n            0x53380d13,\n            0x650a7354,\n            0x766a0abb,\n            0x81c2c92e,\n            0x92722c85,\n            0xa2bfe8a1,\n            0xa81a664b,\n            0xc24b8b70,\n            0xc76c51a3,\n            0xd192e819,\n            0xd6990624,\n            0xf40e3585,\n            0x106aa070,\n            0x19a4c116,\n            0x1e376c08,\n            0x2748774c,\n            0x34b0bcb5,\n            0x391c0cb3,\n            0x4ed8aa4a,\n            0x5b9cca4f,\n            0x682e6ff3,\n            0x748f82ee,\n            0x78a5636f,\n            0x84c87814,\n            0x8cc70208,\n            0x90befffa,\n            0xa4506ceb,\n            0xbef9a3f7,\n            0xc67178f2\n        ]);\n        this.init();\n    }\n    init() {\n        this._H = new Uint32Array([\n            0x6a09e667,\n            0xbb67ae85,\n            0x3c6ef372,\n            0xa54ff53a,\n            0x510e527f,\n            0x9b05688c,\n            0x1f83d9ab,\n            0x5be0cd19\n        ]);\n        this._bufIdx = 0;\n        this._count = new Uint32Array(2);\n        this._buf.fill(0);\n        this._finalized = false;\n        return this;\n    }\n    update(msg, inputEncoding) {\n        if (msg === null) {\n            throw new TypeError(\"msg must be a string or Uint8Array.\");\n        }\n        else if (typeof msg === \"string\") {\n            msg = encode(msg, inputEncoding);\n        }\n        for (let i = 0, len = msg.length; i < len; i++) {\n            this._buf[this._bufIdx++] = msg[i];\n            if (this._bufIdx === 64) {\n                this._transform();\n                this._bufIdx = 0;\n            }\n        }\n        const c = this._count;\n        if ((c[0] += msg.length << 3) < msg.length << 3) {\n            c[1]++;\n        }\n        c[1] += msg.length >>> 29;\n        return this;\n    }\n    digest(outputEncoding) {\n        if (this._finalized) {\n            throw new Error(\"digest has already been called.\");\n        }\n        this._finalized = true;\n        const b = this._buf;\n        let idx = this._bufIdx;\n        b[idx++] = 0x80;\n        while (idx !== 56) {\n            if (idx === 64) {\n                this._transform();\n                idx = 0;\n            }\n            b[idx++] = 0;\n        }\n        const c = this._count;\n        b[56] = c[1] >>> 24 & 0xff;\n        b[57] = c[1] >>> 16 & 0xff;\n        b[58] = c[1] >>> 8 & 0xff;\n        b[59] = c[1] >>> 0 & 0xff;\n        b[60] = c[0] >>> 24 & 0xff;\n        b[61] = c[0] >>> 16 & 0xff;\n        b[62] = c[0] >>> 8 & 0xff;\n        b[63] = c[0] >>> 0 & 0xff;\n        this._transform();\n        const hash = new Uint8Array(32);\n        for (let i = 0; i < 8; i++) {\n            hash[(i << 2) + 0] = this._H[i] >>> 24 & 0xff;\n            hash[(i << 2) + 1] = this._H[i] >>> 16 & 0xff;\n            hash[(i << 2) + 2] = this._H[i] >>> 8 & 0xff;\n            hash[(i << 2) + 3] = this._H[i] >>> 0 & 0xff;\n        }\n        this.init();\n        return outputEncoding ? decode(hash, outputEncoding) : hash;\n    }\n    _transform() {\n        const h = this._H;\n        let h0 = h[0];\n        let h1 = h[1];\n        let h2 = h[2];\n        let h3 = h[3];\n        let h4 = h[4];\n        let h5 = h[5];\n        let h6 = h[6];\n        let h7 = h[7];\n        const w = new Uint32Array(16);\n        let i;\n        for (i = 0; i < 16; i++) {\n            w[i] = this._buf[(i << 2) + 3] | this._buf[(i << 2) + 2] << 8 | this._buf[(i << 2) + 1] << 16 | this._buf[i << 2] << 24;\n        }\n        for (i = 0; i < 64; i++) {\n            let tmp;\n            if (i < 16) {\n                tmp = w[i];\n            }\n            else {\n                let a = w[i + 1 & 15];\n                let b = w[i + 14 & 15];\n                tmp = w[i & 15] = (a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[i + 9 & 15] | 0;\n            }\n            tmp = tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this._K[i] | 0;\n            h7 = h6;\n            h6 = h5;\n            h5 = h4;\n            h4 = h3 + tmp;\n            h3 = h2;\n            h2 = h1;\n            h1 = h0;\n            h0 = tmp + (h1 & h2 ^ h3 & (h1 ^ h2)) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10) | 0;\n        }\n        h[0] = h[0] + h0 | 0;\n        h[1] = h[1] + h1 | 0;\n        h[2] = h[2] + h2 | 0;\n        h[3] = h[3] + h3 | 0;\n        h[4] = h[4] + h4 | 0;\n        h[5] = h[5] + h5 | 0;\n        h[6] = h[6] + h6 | 0;\n        h[7] = h[7] + h7 | 0;\n    }\n}\nexports.SHA256 = SHA256;\nfunction sha256(msg, inputEncoding, outputEncoding) {\n    return new SHA256().update(msg, inputEncoding).digest(outputEncoding);\n}\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/sha256.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/transport.js":
/*!**********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/transport.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LF = exports.CR = exports.CRLF = exports.CR_LF_LEN = exports.CR_LF = void 0;\nexports.setTransportFactory = setTransportFactory;\nexports.defaultPort = defaultPort;\nexports.getUrlParseFn = getUrlParseFn;\nexports.newTransport = newTransport;\nexports.getResolveFn = getResolveFn;\nexports.protoLen = protoLen;\nexports.extractProtocolMessage = extractProtocolMessage;\n/*\n * Copyright 2020-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nconst core_1 = __webpack_require__(/*! ./core */ \"./node_modules/@nats-io/nats-core/lib/core.js\");\nconst databuffer_1 = __webpack_require__(/*! ./databuffer */ \"./node_modules/@nats-io/nats-core/lib/databuffer.js\");\nlet transportConfig;\nfunction setTransportFactory(config) {\n    transportConfig = config;\n}\nfunction defaultPort() {\n    return transportConfig !== undefined &&\n        transportConfig.defaultPort !== undefined\n        ? transportConfig.defaultPort\n        : core_1.DEFAULT_PORT;\n}\nfunction getUrlParseFn() {\n    return transportConfig !== undefined && transportConfig.urlParseFn\n        ? transportConfig.urlParseFn\n        : undefined;\n}\nfunction newTransport() {\n    if (!transportConfig || typeof transportConfig.factory !== \"function\") {\n        throw new Error(\"transport fn is not set\");\n    }\n    return transportConfig.factory();\n}\nfunction getResolveFn() {\n    return transportConfig !== undefined && transportConfig.dnsResolveFn\n        ? transportConfig.dnsResolveFn\n        : undefined;\n}\nexports.CR_LF = \"\\r\\n\";\nexports.CR_LF_LEN = exports.CR_LF.length;\nexports.CRLF = databuffer_1.DataBuffer.fromAscii(exports.CR_LF);\nexports.CR = new Uint8Array(exports.CRLF)[0]; // 13\nexports.LF = new Uint8Array(exports.CRLF)[1]; // 10\nfunction protoLen(ba) {\n    for (let i = 0; i < ba.length; i++) {\n        const n = i + 1;\n        if (ba.byteLength > n && ba[i] === exports.CR && ba[n] === exports.LF) {\n            return n + 1;\n        }\n    }\n    return 0;\n}\nfunction extractProtocolMessage(a) {\n    // protocol messages are ascii, so Uint8Array\n    const len = protoLen(a);\n    if (len > 0) {\n        const ba = new Uint8Array(a);\n        const out = ba.slice(0, len);\n        return encoders_1.TD.decode(out);\n    }\n    return \"\";\n}\n//# sourceMappingURL=transport.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi90cmFuc3BvcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsVUFBVSxHQUFHLFVBQVUsR0FBRyxZQUFZLEdBQUcsaUJBQWlCLEdBQUcsYUFBYTtBQUMxRSwyQkFBMkI7QUFDM0IsbUJBQW1CO0FBQ25CLHFCQUFxQjtBQUNyQixvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLGdCQUFnQjtBQUNoQiw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLHFFQUFZO0FBQ3ZDLGVBQWUsbUJBQU8sQ0FBQyw2REFBUTtBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQyx5RUFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGlCQUFpQjtBQUNqQixZQUFZO0FBQ1osVUFBVSxvQ0FBb0M7QUFDOUMsVUFBVSxvQ0FBb0M7QUFDOUM7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25hdHMtY29yZS9saWIvdHJhbnNwb3J0LmpzPzlhNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxGID0gZXhwb3J0cy5DUiA9IGV4cG9ydHMuQ1JMRiA9IGV4cG9ydHMuQ1JfTEZfTEVOID0gZXhwb3J0cy5DUl9MRiA9IHZvaWQgMDtcbmV4cG9ydHMuc2V0VHJhbnNwb3J0RmFjdG9yeSA9IHNldFRyYW5zcG9ydEZhY3Rvcnk7XG5leHBvcnRzLmRlZmF1bHRQb3J0ID0gZGVmYXVsdFBvcnQ7XG5leHBvcnRzLmdldFVybFBhcnNlRm4gPSBnZXRVcmxQYXJzZUZuO1xuZXhwb3J0cy5uZXdUcmFuc3BvcnQgPSBuZXdUcmFuc3BvcnQ7XG5leHBvcnRzLmdldFJlc29sdmVGbiA9IGdldFJlc29sdmVGbjtcbmV4cG9ydHMucHJvdG9MZW4gPSBwcm90b0xlbjtcbmV4cG9ydHMuZXh0cmFjdFByb3RvY29sTWVzc2FnZSA9IGV4dHJhY3RQcm90b2NvbE1lc3NhZ2U7XG4vKlxuICogQ29weXJpZ2h0IDIwMjAtMjAyNCBUaGUgTkFUUyBBdXRob3JzXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuY29uc3QgZW5jb2RlcnNfMSA9IHJlcXVpcmUoXCIuL2VuY29kZXJzXCIpO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIi4vY29yZVwiKTtcbmNvbnN0IGRhdGFidWZmZXJfMSA9IHJlcXVpcmUoXCIuL2RhdGFidWZmZXJcIik7XG5sZXQgdHJhbnNwb3J0Q29uZmlnO1xuZnVuY3Rpb24gc2V0VHJhbnNwb3J0RmFjdG9yeShjb25maWcpIHtcbiAgICB0cmFuc3BvcnRDb25maWcgPSBjb25maWc7XG59XG5mdW5jdGlvbiBkZWZhdWx0UG9ydCgpIHtcbiAgICByZXR1cm4gdHJhbnNwb3J0Q29uZmlnICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgdHJhbnNwb3J0Q29uZmlnLmRlZmF1bHRQb3J0ICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyB0cmFuc3BvcnRDb25maWcuZGVmYXVsdFBvcnRcbiAgICAgICAgOiBjb3JlXzEuREVGQVVMVF9QT1JUO1xufVxuZnVuY3Rpb24gZ2V0VXJsUGFyc2VGbigpIHtcbiAgICByZXR1cm4gdHJhbnNwb3J0Q29uZmlnICE9PSB1bmRlZmluZWQgJiYgdHJhbnNwb3J0Q29uZmlnLnVybFBhcnNlRm5cbiAgICAgICAgPyB0cmFuc3BvcnRDb25maWcudXJsUGFyc2VGblxuICAgICAgICA6IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIG5ld1RyYW5zcG9ydCgpIHtcbiAgICBpZiAoIXRyYW5zcG9ydENvbmZpZyB8fCB0eXBlb2YgdHJhbnNwb3J0Q29uZmlnLmZhY3RvcnkgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cmFuc3BvcnQgZm4gaXMgbm90IHNldFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zcG9ydENvbmZpZy5mYWN0b3J5KCk7XG59XG5mdW5jdGlvbiBnZXRSZXNvbHZlRm4oKSB7XG4gICAgcmV0dXJuIHRyYW5zcG9ydENvbmZpZyAhPT0gdW5kZWZpbmVkICYmIHRyYW5zcG9ydENvbmZpZy5kbnNSZXNvbHZlRm5cbiAgICAgICAgPyB0cmFuc3BvcnRDb25maWcuZG5zUmVzb2x2ZUZuXG4gICAgICAgIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0cy5DUl9MRiA9IFwiXFxyXFxuXCI7XG5leHBvcnRzLkNSX0xGX0xFTiA9IGV4cG9ydHMuQ1JfTEYubGVuZ3RoO1xuZXhwb3J0cy5DUkxGID0gZGF0YWJ1ZmZlcl8xLkRhdGFCdWZmZXIuZnJvbUFzY2lpKGV4cG9ydHMuQ1JfTEYpO1xuZXhwb3J0cy5DUiA9IG5ldyBVaW50OEFycmF5KGV4cG9ydHMuQ1JMRilbMF07IC8vIDEzXG5leHBvcnRzLkxGID0gbmV3IFVpbnQ4QXJyYXkoZXhwb3J0cy5DUkxGKVsxXTsgLy8gMTBcbmZ1bmN0aW9uIHByb3RvTGVuKGJhKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiYS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBuID0gaSArIDE7XG4gICAgICAgIGlmIChiYS5ieXRlTGVuZ3RoID4gbiAmJiBiYVtpXSA9PT0gZXhwb3J0cy5DUiAmJiBiYVtuXSA9PT0gZXhwb3J0cy5MRikge1xuICAgICAgICAgICAgcmV0dXJuIG4gKyAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuZnVuY3Rpb24gZXh0cmFjdFByb3RvY29sTWVzc2FnZShhKSB7XG4gICAgLy8gcHJvdG9jb2wgbWVzc2FnZXMgYXJlIGFzY2lpLCBzbyBVaW50OEFycmF5XG4gICAgY29uc3QgbGVuID0gcHJvdG9MZW4oYSk7XG4gICAgaWYgKGxlbiA+IDApIHtcbiAgICAgICAgY29uc3QgYmEgPSBuZXcgVWludDhBcnJheShhKTtcbiAgICAgICAgY29uc3Qgb3V0ID0gYmEuc2xpY2UoMCwgbGVuKTtcbiAgICAgICAgcmV0dXJuIGVuY29kZXJzXzEuVEQuZGVjb2RlKG91dCk7XG4gICAgfVxuICAgIHJldHVybiBcIlwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNwb3J0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/transport.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/types.js":
/*!******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/types.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Empty = void 0;\nvar encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nObject.defineProperty(exports, \"Empty\", ({ enumerable: true, get: function () { return encoders_1.Empty; } }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2IsaUJBQWlCLG1CQUFPLENBQUMscUVBQVk7QUFDckMseUNBQXdDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDO0FBQzVHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmF0cy1pby9uYXRzLWNvcmUvbGliL3R5cGVzLmpzPzVlNzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVtcHR5ID0gdm9pZCAwO1xudmFyIGVuY29kZXJzXzEgPSByZXF1aXJlKFwiLi9lbmNvZGVyc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkVtcHR5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbmNvZGVyc18xLkVtcHR5OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/types.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/util.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/util.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SimpleMutex = exports.Perf = void 0;\nexports.extend = extend;\nexports.render = render;\nexports.timeout = timeout;\nexports.delay = delay;\nexports.deadline = deadline;\nexports.deferred = deferred;\nexports.debugDeferred = debugDeferred;\nexports.shuffle = shuffle;\nexports.collect = collect;\nexports.jitter = jitter;\nexports.backoff = backoff;\nexports.nanos = nanos;\nexports.millis = millis;\n/*\n * Copyright 2018-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// deno-lint-ignore-file no-explicit-any\nconst encoders_1 = __webpack_require__(/*! ./encoders */ \"./node_modules/@nats-io/nats-core/lib/encoders.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nfunction extend(a, ...b) {\n    for (let i = 0; i < b.length; i++) {\n        const o = b[i];\n        Object.keys(o).forEach(function (k) {\n            a[k] = o[k];\n        });\n    }\n    return a;\n}\nfunction render(frame) {\n    const cr = \"␍\";\n    const lf = \"␊\";\n    return encoders_1.TD.decode(frame)\n        .replace(/\\n/g, lf)\n        .replace(/\\r/g, cr);\n}\nfunction timeout(ms, asyncTraces = true) {\n    // by generating the stack here to help identify what timed out\n    const err = asyncTraces ? new errors_1.TimeoutError() : null;\n    let methods;\n    let timer;\n    const p = new Promise((_resolve, reject) => {\n        const cancel = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n        methods = { cancel };\n        // @ts-ignore: node is not a number\n        timer = setTimeout(() => {\n            if (err === null) {\n                reject(new errors_1.TimeoutError());\n            }\n            else {\n                reject(err);\n            }\n        }, ms);\n    });\n    // noinspection JSUnusedAssignment\n    return Object.assign(p, methods);\n}\nfunction delay(ms = 0) {\n    let methods;\n    const p = new Promise((resolve) => {\n        const timer = setTimeout(() => {\n            resolve();\n        }, ms);\n        const cancel = () => {\n            if (timer) {\n                clearTimeout(timer);\n                resolve();\n            }\n        };\n        methods = { cancel };\n    });\n    return Object.assign(p, methods);\n}\nasync function deadline(p, millis = 1000) {\n    const d = deferred();\n    const timer = setTimeout(() => {\n        d.reject(new errors_1.TimeoutError());\n    }, millis);\n    try {\n        return await Promise.race([p, d]);\n    }\n    finally {\n        clearTimeout(timer);\n    }\n}\n/**\n * Returns a Promise that has a resolve/reject methods that can\n * be used to resolve and defer the Deferred.\n */\nfunction deferred() {\n    let methods = {};\n    const p = new Promise((resolve, reject) => {\n        methods = { resolve, reject };\n    });\n    return Object.assign(p, methods);\n}\nfunction debugDeferred() {\n    let methods = {};\n    const p = new Promise((resolve, reject) => {\n        methods = {\n            resolve: (v) => {\n                console.trace(\"resolve\", v);\n                resolve(v);\n            },\n            reject: (err) => {\n                console.trace(\"reject\");\n                reject(err);\n            },\n        };\n    });\n    return Object.assign(p, methods);\n}\nfunction shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\nasync function collect(iter) {\n    const buf = [];\n    for await (const v of iter) {\n        buf.push(v);\n    }\n    return buf;\n}\nclass Perf {\n    timers;\n    measures;\n    constructor() {\n        this.timers = new Map();\n        this.measures = new Map();\n    }\n    mark(key) {\n        this.timers.set(key, performance.now());\n    }\n    measure(key, startKey, endKey) {\n        const s = this.timers.get(startKey);\n        if (s === undefined) {\n            throw new Error(`${startKey} is not defined`);\n        }\n        const e = this.timers.get(endKey);\n        if (e === undefined) {\n            throw new Error(`${endKey} is not defined`);\n        }\n        this.measures.set(key, e - s);\n    }\n    getEntries() {\n        const values = [];\n        this.measures.forEach((v, k) => {\n            values.push({ name: k, duration: v });\n        });\n        return values;\n    }\n}\nexports.Perf = Perf;\nclass SimpleMutex {\n    max;\n    current;\n    waiting;\n    /**\n     * @param max number of concurrent operations\n     */\n    constructor(max = 1) {\n        this.max = max;\n        this.current = 0;\n        this.waiting = [];\n    }\n    /**\n     * Returns a promise that resolves when the mutex is acquired\n     */\n    lock() {\n        // increment the count\n        this.current++;\n        // if we have runners, resolve it\n        if (this.current <= this.max) {\n            return Promise.resolve();\n        }\n        // otherwise defer it\n        const d = deferred();\n        this.waiting.push(d);\n        return d;\n    }\n    /**\n     * Release an acquired mutex - must be called\n     */\n    unlock() {\n        // decrement the count\n        this.current--;\n        // if we have deferred, resolve one\n        const d = this.waiting.pop();\n        d?.resolve();\n    }\n}\nexports.SimpleMutex = SimpleMutex;\n/**\n * Returns a new number between  .5*n and 1.5*n.\n * If the n is 0, returns 0.\n * @param n\n */\nfunction jitter(n) {\n    if (n === 0) {\n        return 0;\n    }\n    return Math.floor(n / 2 + Math.random() * n);\n}\n/**\n * Returns a Backoff with the specified interval policy set.\n * @param policy\n */\nfunction backoff(policy = [0, 250, 250, 500, 500, 3000, 5000]) {\n    if (!Array.isArray(policy)) {\n        policy = [0, 250, 250, 500, 500, 3000, 5000];\n    }\n    const max = policy.length - 1;\n    return {\n        backoff(attempt) {\n            return jitter(attempt > max ? policy[max] : policy[attempt]);\n        },\n    };\n}\n/**\n * Converts the specified millis into Nanos\n * @param millis\n */\nfunction nanos(millis) {\n    return millis * 1000000;\n}\n/**\n * Convert the specified Nanos into millis\n * @param ns\n */\nfunction millis(ns) {\n    return Math.floor(ns / 1000000);\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/util.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/version.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/version.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.version = void 0;\n// This file is generated - do not edit\nexports.version = \"3.0.0-45\";\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZjtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmF0cy1jb3JlL2xpYi92ZXJzaW9uLmpzPzVjNjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZlcnNpb24gPSB2b2lkIDA7XG4vLyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIC0gZG8gbm90IGVkaXRcbmV4cG9ydHMudmVyc2lvbiA9IFwiMy4wLjAtNDVcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/ws_transport.js":
/*!*************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/ws_transport.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2020-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WsTransport = void 0;\nexports.wsUrlParseFn = wsUrlParseFn;\nexports.wsconnect = wsconnect;\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nats-core/lib/util.js\");\nconst transport_1 = __webpack_require__(/*! ./transport */ \"./node_modules/@nats-io/nats-core/lib/transport.js\");\nconst options_1 = __webpack_require__(/*! ./options */ \"./node_modules/@nats-io/nats-core/lib/options.js\");\nconst databuffer_1 = __webpack_require__(/*! ./databuffer */ \"./node_modules/@nats-io/nats-core/lib/databuffer.js\");\nconst protocol_1 = __webpack_require__(/*! ./protocol */ \"./node_modules/@nats-io/nats-core/lib/protocol.js\");\nconst nats_1 = __webpack_require__(/*! ./nats */ \"./node_modules/@nats-io/nats-core/lib/nats.js\");\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@nats-io/nats-core/lib/version.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@nats-io/nats-core/lib/errors.js\");\nconst VERSION = version_1.version;\nconst LANG = \"nats.ws\";\nclass WsTransport {\n    version;\n    lang;\n    closeError;\n    connected;\n    done;\n    // @ts-ignore: expecting global WebSocket\n    socket;\n    options;\n    socketClosed;\n    encrypted;\n    peeked;\n    yields;\n    signal;\n    closedNotification;\n    constructor() {\n        this.version = VERSION;\n        this.lang = LANG;\n        this.connected = false;\n        this.done = false;\n        this.socketClosed = false;\n        this.encrypted = false;\n        this.peeked = false;\n        this.yields = [];\n        this.signal = (0, util_1.deferred)();\n        this.closedNotification = (0, util_1.deferred)();\n    }\n    async connect(server, options) {\n        const connected = false;\n        const ok = (0, util_1.deferred)();\n        this.options = options;\n        const u = server.src;\n        if (options.wsFactory) {\n            const { socket, encrypted } = await options.wsFactory(server.src, options);\n            this.socket = socket;\n            this.encrypted = encrypted;\n        }\n        else {\n            this.encrypted = u.indexOf(\"wss://\") === 0;\n            this.socket = new WebSocket(u);\n        }\n        this.socket.binaryType = \"arraybuffer\";\n        this.socket.onopen = () => {\n            if (this.done) {\n                this._closed(new Error(\"aborted\"));\n            }\n            // we don't do anything here...\n        };\n        this.socket.onmessage = (me) => {\n            if (this.done) {\n                return;\n            }\n            this.yields.push(new Uint8Array(me.data));\n            if (this.peeked) {\n                this.signal.resolve();\n                return;\n            }\n            const t = databuffer_1.DataBuffer.concat(...this.yields);\n            const pm = (0, transport_1.extractProtocolMessage)(t);\n            if (pm !== \"\") {\n                const m = protocol_1.INFO.exec(pm);\n                if (!m) {\n                    if (options.debug) {\n                        console.error(\"!!!\", (0, util_1.render)(t));\n                    }\n                    ok.reject(new Error(\"unexpected response from server\"));\n                    return;\n                }\n                try {\n                    const info = JSON.parse(m[1]);\n                    (0, options_1.checkOptions)(info, this.options);\n                    this.peeked = true;\n                    this.connected = true;\n                    this.signal.resolve();\n                    ok.resolve();\n                }\n                catch (err) {\n                    ok.reject(err);\n                    return;\n                }\n            }\n        };\n        // @ts-ignore: CloseEvent is provided in browsers\n        this.socket.onclose = (evt) => {\n            this.socketClosed = true;\n            let reason;\n            if (!evt.wasClean && evt.reason !== \"\") {\n                reason = new Error(evt.reason);\n            }\n            this._closed(reason);\n            this.socket.onopen = null;\n            this.socket.onmessage = null;\n            this.socket.onerror = null;\n            this.socket.onclose = null;\n            this.closedNotification.resolve(this.closeError);\n        };\n        // @ts-ignore: signature can be any\n        this.socket.onerror = (e) => {\n            if (this.done) {\n                return;\n            }\n            const evt = e;\n            const err = new errors_1.errors.ConnectionError(evt.message);\n            if (!connected) {\n                ok.reject(err);\n            }\n            else {\n                this._closed(err);\n            }\n        };\n        return ok;\n    }\n    disconnect() {\n        this._closed(undefined, true);\n    }\n    async _closed(err, _internal = true) {\n        if (this.done) {\n            try {\n                this.socket.close();\n            }\n            catch (_) {\n                // nothing\n            }\n            return;\n        }\n        this.closeError = err;\n        if (!err) {\n            while (!this.socketClosed && this.socket.bufferedAmount > 0) {\n                await (0, util_1.delay)(100);\n            }\n        }\n        this.done = true;\n        try {\n            this.socket.close();\n        }\n        catch (_) {\n            // ignore this\n        }\n        return this.closedNotification;\n    }\n    get isClosed() {\n        return this.done;\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n    async *iterate() {\n        while (true) {\n            if (this.done) {\n                return;\n            }\n            if (this.yields.length === 0) {\n                await this.signal;\n            }\n            const yields = this.yields;\n            this.yields = [];\n            for (let i = 0; i < yields.length; i++) {\n                if (this.options.debug) {\n                    console.info(`> ${(0, util_1.render)(yields[i])}`);\n                }\n                yield yields[i];\n            }\n            // yielding could have paused and microtask\n            // could have added messages. Prevent allocations\n            // if possible\n            if (this.done) {\n                break;\n            }\n            else if (this.yields.length === 0) {\n                yields.length = 0;\n                this.yields = yields;\n                this.signal = (0, util_1.deferred)();\n            }\n        }\n    }\n    isEncrypted() {\n        return this.connected && this.encrypted;\n    }\n    send(frame) {\n        if (this.done) {\n            return;\n        }\n        try {\n            this.socket.send(frame.buffer);\n            if (this.options.debug) {\n                console.info(`< ${(0, util_1.render)(frame)}`);\n            }\n            return;\n        }\n        catch (err) {\n            // we ignore write errors because client will\n            // fail on a read or when the heartbeat timer\n            // detects a stale connection\n            if (this.options.debug) {\n                console.error(`!!! ${(0, util_1.render)(frame)}: ${err}`);\n            }\n        }\n    }\n    close(err) {\n        return this._closed(err, false);\n    }\n    closed() {\n        return this.closedNotification;\n    }\n    // this is to allow a force discard on a connection\n    // if the connection fails during the handshake protocol.\n    // Firefox for example, will keep connections going,\n    // so eventually if it succeeds, the client will have\n    // an additional transport running. With this\n    discard() {\n        this.socket?.close();\n    }\n}\nexports.WsTransport = WsTransport;\nfunction wsUrlParseFn(u, encrypted) {\n    const ut = /^(.*:\\/\\/)(.*)/;\n    if (!ut.test(u)) {\n        // if we have no hint to encrypted and no protocol, assume encrypted\n        // else we fix the url from the update to match\n        if (typeof encrypted === \"boolean\") {\n            u = `${encrypted === true ? \"https\" : \"http\"}://${u}`;\n        }\n        else {\n            u = `https://${u}`;\n        }\n    }\n    let url = new URL(u);\n    const srcProto = url.protocol.toLowerCase();\n    if (srcProto === \"ws:\") {\n        encrypted = false;\n    }\n    if (srcProto === \"wss:\") {\n        encrypted = true;\n    }\n    if (srcProto !== \"https:\" && srcProto !== \"http\") {\n        u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\n        url = new URL(`http://${u}`);\n    }\n    let protocol;\n    let port;\n    const host = url.hostname;\n    const path = url.pathname;\n    const search = url.search || \"\";\n    switch (srcProto) {\n        case \"http:\":\n        case \"ws:\":\n        case \"nats:\":\n            port = url.port || \"80\";\n            protocol = \"ws:\";\n            break;\n        case \"https:\":\n        case \"wss:\":\n        case \"tls:\":\n            port = url.port || \"443\";\n            protocol = \"wss:\";\n            break;\n        default:\n            port = url.port || encrypted === true ? \"443\" : \"80\";\n            protocol = encrypted === true ? \"wss:\" : \"ws:\";\n            break;\n    }\n    return `${protocol}//${host}:${port}${path}${search}`;\n}\nfunction wsconnect(opts = {}) {\n    (0, transport_1.setTransportFactory)({\n        defaultPort: 443,\n        urlParseFn: wsUrlParseFn,\n        factory: () => {\n            if (opts.tls) {\n                throw errors_1.InvalidArgumentError.format(\"tls\", \"is not configurable on w3c websocket connections\");\n            }\n            return new WsTransport();\n        },\n    });\n    return nats_1.NatsConnectionImpl.connect(opts);\n}\n//# sourceMappingURL=ws_transport.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nats-core/lib/ws_transport.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/base32.js":
/*!***************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/base32.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2018-2021 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.base32 = void 0;\n// Fork of https://github.com/LinusU/base32-encode\n// and https://github.com/LinusU/base32-decode to support returning\n// buffers without padding.\n/**\n * @ignore\n */\nconst b32Alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n/**\n * @ignore\n */\nclass base32 {\n    static encode(src) {\n        let bits = 0;\n        let value = 0;\n        const a = new Uint8Array(src);\n        const buf = new Uint8Array(src.byteLength * 2);\n        let j = 0;\n        for (let i = 0; i < a.byteLength; i++) {\n            value = (value << 8) | a[i];\n            bits += 8;\n            while (bits >= 5) {\n                const index = (value >>> (bits - 5)) & 31;\n                buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\n                bits -= 5;\n            }\n        }\n        if (bits > 0) {\n            const index = (value << (5 - bits)) & 31;\n            buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\n        }\n        return buf.slice(0, j);\n    }\n    static decode(src) {\n        let bits = 0;\n        let byte = 0;\n        let j = 0;\n        const a = new Uint8Array(src);\n        const out = new Uint8Array(a.byteLength * 5 / 8 | 0);\n        for (let i = 0; i < a.byteLength; i++) {\n            const v = String.fromCharCode(a[i]);\n            const vv = b32Alphabet.indexOf(v);\n            if (vv === -1) {\n                throw new Error(\"Illegal Base32 character: \" + a[i]);\n            }\n            byte = (byte << 5) | vv;\n            bits += 5;\n            if (bits >= 8) {\n                out[j++] = (byte >>> (bits - 8)) & 255;\n                bits -= 8;\n            }\n        }\n        return out.slice(0, j);\n    }\n}\nexports.base32 = base32;\n//# sourceMappingURL=base32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL2Jhc2UzMi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL2Jhc2UzMi5qcz83OGQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDE4LTIwMjEgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYmFzZTMyID0gdm9pZCAwO1xuLy8gRm9yayBvZiBodHRwczovL2dpdGh1Yi5jb20vTGludXNVL2Jhc2UzMi1lbmNvZGVcbi8vIGFuZCBodHRwczovL2dpdGh1Yi5jb20vTGludXNVL2Jhc2UzMi1kZWNvZGUgdG8gc3VwcG9ydCByZXR1cm5pbmdcbi8vIGJ1ZmZlcnMgd2l0aG91dCBwYWRkaW5nLlxuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNvbnN0IGIzMkFscGhhYmV0ID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2N1wiO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNsYXNzIGJhc2UzMiB7XG4gICAgc3RhdGljIGVuY29kZShzcmMpIHtcbiAgICAgICAgbGV0IGJpdHMgPSAwO1xuICAgICAgICBsZXQgdmFsdWUgPSAwO1xuICAgICAgICBjb25zdCBhID0gbmV3IFVpbnQ4QXJyYXkoc3JjKTtcbiAgICAgICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoc3JjLmJ5dGVMZW5ndGggKiAyKTtcbiAgICAgICAgbGV0IGogPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEuYnl0ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YWx1ZSA9ICh2YWx1ZSA8PCA4KSB8IGFbaV07XG4gICAgICAgICAgICBiaXRzICs9IDg7XG4gICAgICAgICAgICB3aGlsZSAoYml0cyA+PSA1KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSAodmFsdWUgPj4+IChiaXRzIC0gNSkpICYgMzE7XG4gICAgICAgICAgICAgICAgYnVmW2orK10gPSBiMzJBbHBoYWJldC5jaGFyQXQoaW5kZXgpLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgICAgICAgICAgYml0cyAtPSA1O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChiaXRzID4gMCkge1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSAodmFsdWUgPDwgKDUgLSBiaXRzKSkgJiAzMTtcbiAgICAgICAgICAgIGJ1ZltqKytdID0gYjMyQWxwaGFiZXQuY2hhckF0KGluZGV4KS5jaGFyQ29kZUF0KDApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBidWYuc2xpY2UoMCwgaik7XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGUoc3JjKSB7XG4gICAgICAgIGxldCBiaXRzID0gMDtcbiAgICAgICAgbGV0IGJ5dGUgPSAwO1xuICAgICAgICBsZXQgaiA9IDA7XG4gICAgICAgIGNvbnN0IGEgPSBuZXcgVWludDhBcnJheShzcmMpO1xuICAgICAgICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShhLmJ5dGVMZW5ndGggKiA1IC8gOCB8IDApO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEuYnl0ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCB2ID0gU3RyaW5nLmZyb21DaGFyQ29kZShhW2ldKTtcbiAgICAgICAgICAgIGNvbnN0IHZ2ID0gYjMyQWxwaGFiZXQuaW5kZXhPZih2KTtcbiAgICAgICAgICAgIGlmICh2diA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbGxlZ2FsIEJhc2UzMiBjaGFyYWN0ZXI6IFwiICsgYVtpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBieXRlID0gKGJ5dGUgPDwgNSkgfCB2djtcbiAgICAgICAgICAgIGJpdHMgKz0gNTtcbiAgICAgICAgICAgIGlmIChiaXRzID49IDgpIHtcbiAgICAgICAgICAgICAgICBvdXRbaisrXSA9IChieXRlID4+PiAoYml0cyAtIDgpKSAmIDI1NTtcbiAgICAgICAgICAgICAgICBiaXRzIC09IDg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dC5zbGljZSgwLCBqKTtcbiAgICB9XG59XG5leHBvcnRzLmJhc2UzMiA9IGJhc2UzMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/base32.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/codec.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/codec.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2018-2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Codec = void 0;\nconst crc16_1 = __webpack_require__(/*! ./crc16 */ \"./node_modules/@nats-io/nkeys/lib/crc16.js\");\nconst nkeys_1 = __webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nkeys/lib/nkeys.js\");\nconst base32_1 = __webpack_require__(/*! ./base32 */ \"./node_modules/@nats-io/nkeys/lib/base32.js\");\n/**\n * @ignore\n */\nclass Codec {\n    static encode(prefix, src) {\n        if (!src || !(src instanceof Uint8Array)) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.SerializationError);\n        }\n        if (!nkeys_1.Prefixes.isValidPrefix(prefix)) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);\n        }\n        return Codec._encode(false, prefix, src);\n    }\n    static encodeSeed(role, src) {\n        if (!src) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ApiError);\n        }\n        if (!nkeys_1.Prefixes.isValidPublicPrefix(role)) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);\n        }\n        if (src.byteLength !== 32) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidSeedLen);\n        }\n        return Codec._encode(true, role, src);\n    }\n    static decode(expected, src) {\n        if (!nkeys_1.Prefixes.isValidPrefix(expected)) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);\n        }\n        const raw = Codec._decode(src);\n        if (raw[0] !== expected) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);\n        }\n        return raw.slice(1);\n    }\n    static decodeSeed(src) {\n        const raw = Codec._decode(src);\n        const prefix = Codec._decodePrefix(raw);\n        if (prefix[0] != nkeys_1.Prefix.Seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidSeed);\n        }\n        if (!nkeys_1.Prefixes.isValidPublicPrefix(prefix[1])) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);\n        }\n        return ({ buf: raw.slice(2), prefix: prefix[1] });\n    }\n    // unsafe encode no prefix/role validation\n    static _encode(seed, role, payload) {\n        // offsets for this token\n        const payloadOffset = seed ? 2 : 1;\n        const payloadLen = payload.byteLength;\n        const checkLen = 2;\n        const cap = payloadOffset + payloadLen + checkLen;\n        const checkOffset = payloadOffset + payloadLen;\n        const raw = new Uint8Array(cap);\n        // make the prefixes human readable when encoded\n        if (seed) {\n            const encodedPrefix = Codec._encodePrefix(nkeys_1.Prefix.Seed, role);\n            raw.set(encodedPrefix);\n        }\n        else {\n            raw[0] = role;\n        }\n        raw.set(payload, payloadOffset);\n        //calculate the checksum write it LE\n        const checksum = crc16_1.crc16.checksum(raw.slice(0, checkOffset));\n        const dv = new DataView(raw.buffer);\n        dv.setUint16(checkOffset, checksum, true);\n        return base32_1.base32.encode(raw);\n    }\n    // unsafe decode - no prefix/role validation\n    static _decode(src) {\n        if (src.byteLength < 4) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncoding);\n        }\n        let raw;\n        try {\n            raw = base32_1.base32.decode(src);\n        }\n        catch (ex) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncoding, { cause: ex });\n        }\n        const checkOffset = raw.byteLength - 2;\n        const dv = new DataView(raw.buffer);\n        const checksum = dv.getUint16(checkOffset, true);\n        const payload = raw.slice(0, checkOffset);\n        if (!crc16_1.crc16.validate(payload, checksum)) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidChecksum);\n        }\n        return payload;\n    }\n    static _encodePrefix(kind, role) {\n        // In order to make this human printable for both bytes, we need to do a little\n        // bit manipulation to setup for base32 encoding which takes 5 bits at a time.\n        const b1 = kind | (role >> 5);\n        const b2 = (role & 31) << 3; // 31 = 00011111\n        return new Uint8Array([b1, b2]);\n    }\n    static _decodePrefix(raw) {\n        // Need to do the reverse from the printable representation to\n        // get back to internal representation.\n        const b1 = raw[0] & 248; // 248 = 11111000\n        const b2 = (raw[0] & 7) << 5 | ((raw[1] & 248) >> 3); // 7 = 00000111\n        return new Uint8Array([b1, b2]);\n    }\n}\nexports.Codec = Codec;\n//# sourceMappingURL=codec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/codec.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/crc16.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/crc16.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2018-2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.crc16 = void 0;\n// An implementation of crc16 according to CCITT standards for XMODEM.\n/**\n * @ignore\n */\nconst crc16tab = new Uint16Array([\n    0x0000,\n    0x1021,\n    0x2042,\n    0x3063,\n    0x4084,\n    0x50a5,\n    0x60c6,\n    0x70e7,\n    0x8108,\n    0x9129,\n    0xa14a,\n    0xb16b,\n    0xc18c,\n    0xd1ad,\n    0xe1ce,\n    0xf1ef,\n    0x1231,\n    0x0210,\n    0x3273,\n    0x2252,\n    0x52b5,\n    0x4294,\n    0x72f7,\n    0x62d6,\n    0x9339,\n    0x8318,\n    0xb37b,\n    0xa35a,\n    0xd3bd,\n    0xc39c,\n    0xf3ff,\n    0xe3de,\n    0x2462,\n    0x3443,\n    0x0420,\n    0x1401,\n    0x64e6,\n    0x74c7,\n    0x44a4,\n    0x5485,\n    0xa56a,\n    0xb54b,\n    0x8528,\n    0x9509,\n    0xe5ee,\n    0xf5cf,\n    0xc5ac,\n    0xd58d,\n    0x3653,\n    0x2672,\n    0x1611,\n    0x0630,\n    0x76d7,\n    0x66f6,\n    0x5695,\n    0x46b4,\n    0xb75b,\n    0xa77a,\n    0x9719,\n    0x8738,\n    0xf7df,\n    0xe7fe,\n    0xd79d,\n    0xc7bc,\n    0x48c4,\n    0x58e5,\n    0x6886,\n    0x78a7,\n    0x0840,\n    0x1861,\n    0x2802,\n    0x3823,\n    0xc9cc,\n    0xd9ed,\n    0xe98e,\n    0xf9af,\n    0x8948,\n    0x9969,\n    0xa90a,\n    0xb92b,\n    0x5af5,\n    0x4ad4,\n    0x7ab7,\n    0x6a96,\n    0x1a71,\n    0x0a50,\n    0x3a33,\n    0x2a12,\n    0xdbfd,\n    0xcbdc,\n    0xfbbf,\n    0xeb9e,\n    0x9b79,\n    0x8b58,\n    0xbb3b,\n    0xab1a,\n    0x6ca6,\n    0x7c87,\n    0x4ce4,\n    0x5cc5,\n    0x2c22,\n    0x3c03,\n    0x0c60,\n    0x1c41,\n    0xedae,\n    0xfd8f,\n    0xcdec,\n    0xddcd,\n    0xad2a,\n    0xbd0b,\n    0x8d68,\n    0x9d49,\n    0x7e97,\n    0x6eb6,\n    0x5ed5,\n    0x4ef4,\n    0x3e13,\n    0x2e32,\n    0x1e51,\n    0x0e70,\n    0xff9f,\n    0xefbe,\n    0xdfdd,\n    0xcffc,\n    0xbf1b,\n    0xaf3a,\n    0x9f59,\n    0x8f78,\n    0x9188,\n    0x81a9,\n    0xb1ca,\n    0xa1eb,\n    0xd10c,\n    0xc12d,\n    0xf14e,\n    0xe16f,\n    0x1080,\n    0x00a1,\n    0x30c2,\n    0x20e3,\n    0x5004,\n    0x4025,\n    0x7046,\n    0x6067,\n    0x83b9,\n    0x9398,\n    0xa3fb,\n    0xb3da,\n    0xc33d,\n    0xd31c,\n    0xe37f,\n    0xf35e,\n    0x02b1,\n    0x1290,\n    0x22f3,\n    0x32d2,\n    0x4235,\n    0x5214,\n    0x6277,\n    0x7256,\n    0xb5ea,\n    0xa5cb,\n    0x95a8,\n    0x8589,\n    0xf56e,\n    0xe54f,\n    0xd52c,\n    0xc50d,\n    0x34e2,\n    0x24c3,\n    0x14a0,\n    0x0481,\n    0x7466,\n    0x6447,\n    0x5424,\n    0x4405,\n    0xa7db,\n    0xb7fa,\n    0x8799,\n    0x97b8,\n    0xe75f,\n    0xf77e,\n    0xc71d,\n    0xd73c,\n    0x26d3,\n    0x36f2,\n    0x0691,\n    0x16b0,\n    0x6657,\n    0x7676,\n    0x4615,\n    0x5634,\n    0xd94c,\n    0xc96d,\n    0xf90e,\n    0xe92f,\n    0x99c8,\n    0x89e9,\n    0xb98a,\n    0xa9ab,\n    0x5844,\n    0x4865,\n    0x7806,\n    0x6827,\n    0x18c0,\n    0x08e1,\n    0x3882,\n    0x28a3,\n    0xcb7d,\n    0xdb5c,\n    0xeb3f,\n    0xfb1e,\n    0x8bf9,\n    0x9bd8,\n    0xabbb,\n    0xbb9a,\n    0x4a75,\n    0x5a54,\n    0x6a37,\n    0x7a16,\n    0x0af1,\n    0x1ad0,\n    0x2ab3,\n    0x3a92,\n    0xfd2e,\n    0xed0f,\n    0xdd6c,\n    0xcd4d,\n    0xbdaa,\n    0xad8b,\n    0x9de8,\n    0x8dc9,\n    0x7c26,\n    0x6c07,\n    0x5c64,\n    0x4c45,\n    0x3ca2,\n    0x2c83,\n    0x1ce0,\n    0x0cc1,\n    0xef1f,\n    0xff3e,\n    0xcf5d,\n    0xdf7c,\n    0xaf9b,\n    0xbfba,\n    0x8fd9,\n    0x9ff8,\n    0x6e17,\n    0x7e36,\n    0x4e55,\n    0x5e74,\n    0x2e93,\n    0x3eb2,\n    0x0ed1,\n    0x1ef0,\n]);\n/**\n * @ignore\n */\nclass crc16 {\n    // crc16 returns the crc for the data provided.\n    static checksum(data) {\n        let crc = 0;\n        for (let i = 0; i < data.byteLength; i++) {\n            const b = data[i];\n            crc = ((crc << 8) & 0xffff) ^ crc16tab[((crc >> 8) ^ b) & 0x00FF];\n        }\n        return crc;\n    }\n    // validate will check the calculated crc16 checksum for data against the expected.\n    static validate(data, expected) {\n        const ba = crc16.checksum(data);\n        return ba == expected;\n    }\n}\nexports.crc16 = crc16;\n//# sourceMappingURL=crc16.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/crc16.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/curve.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/curve.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CurveKP = exports.curveNonceLen = exports.curveKeyLen = void 0;\nconst nkeys_1 = __webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nkeys/lib/nkeys.js\");\nconst nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ \"./node_modules/@nats-io/nkeys/lib/nacl.js\"));\nconst codec_1 = __webpack_require__(/*! ./codec */ \"./node_modules/@nats-io/nkeys/lib/codec.js\");\nconst nkeys_2 = __webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nkeys/lib/nkeys.js\");\nconst base32_1 = __webpack_require__(/*! ./base32 */ \"./node_modules/@nats-io/nkeys/lib/base32.js\");\nconst crc16_1 = __webpack_require__(/*! ./crc16 */ \"./node_modules/@nats-io/nkeys/lib/crc16.js\");\nexports.curveKeyLen = 32;\nconst curveDecodeLen = 35;\nexports.curveNonceLen = 24;\n// \"xkv1\" in bytes\nconst XKeyVersionV1 = [120, 107, 118, 49];\nclass CurveKP {\n    seed;\n    constructor(seed) {\n        this.seed = seed;\n    }\n    clear() {\n        if (!this.seed) {\n            return;\n        }\n        this.seed.fill(0);\n        this.seed = undefined;\n    }\n    getPrivateKey() {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        return codec_1.Codec.encode(nkeys_2.Prefix.Private, this.seed);\n    }\n    getPublicKey() {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        const pub = nacl_1.default.scalarMult.base(this.seed);\n        const buf = codec_1.Codec.encode(nkeys_2.Prefix.Curve, pub);\n        return new TextDecoder().decode(buf);\n    }\n    getSeed() {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        return codec_1.Codec.encodeSeed(nkeys_2.Prefix.Curve, this.seed);\n    }\n    sign() {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidCurveOperation);\n    }\n    verify() {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidCurveOperation);\n    }\n    decodePubCurveKey(src) {\n        try {\n            const raw = base32_1.base32.decode(new TextEncoder().encode(src));\n            if (raw.byteLength !== curveDecodeLen) {\n                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidCurveKey);\n            }\n            if (raw[0] !== nkeys_2.Prefix.Curve) {\n                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPublicKey);\n            }\n            const checkOffset = raw.byteLength - 2;\n            const dv = new DataView(raw.buffer);\n            const checksum = dv.getUint16(checkOffset, true);\n            const payload = raw.slice(0, checkOffset);\n            if (!crc16_1.crc16.validate(payload, checksum)) {\n                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidChecksum);\n            }\n            // remove the prefix byte\n            return payload.slice(1);\n        }\n        catch (ex) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidRecipient, { cause: ex });\n        }\n    }\n    seal(message, recipient, nonce) {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        if (!nonce) {\n            nonce = nacl_1.default.randomBytes(exports.curveNonceLen);\n        }\n        const pub = this.decodePubCurveKey(recipient);\n        // prefix a header to the nonce\n        const out = new Uint8Array(XKeyVersionV1.length + exports.curveNonceLen);\n        out.set(XKeyVersionV1, 0);\n        out.set(nonce, XKeyVersionV1.length);\n        // this is only the encoded payload\n        const encrypted = nacl_1.default.box(message, nonce, pub, this.seed);\n        // the full message is the header+nonce+encrypted\n        const fullMessage = new Uint8Array(out.length + encrypted.length);\n        fullMessage.set(out);\n        fullMessage.set(encrypted, out.length);\n        return fullMessage;\n    }\n    open(message, sender) {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        if (message.length <= exports.curveNonceLen + XKeyVersionV1.length) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncrypted);\n        }\n        for (let i = 0; i < XKeyVersionV1.length; i++) {\n            if (message[i] !== XKeyVersionV1[i]) {\n                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncrypted);\n            }\n        }\n        const pub = this.decodePubCurveKey(sender);\n        // strip off the header\n        message = message.slice(XKeyVersionV1.length);\n        // extract the nonce\n        const nonce = message.slice(0, exports.curveNonceLen);\n        // stripe the nonce\n        message = message.slice(exports.curveNonceLen);\n        return nacl_1.default.box.open(message, nonce, pub, this.seed);\n    }\n}\nexports.CurveKP = CurveKP;\n//# sourceMappingURL=curve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/curve.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/kp.js":
/*!***********************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/kp.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2018-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KP = void 0;\nconst codec_1 = __webpack_require__(/*! ./codec */ \"./node_modules/@nats-io/nkeys/lib/codec.js\");\nconst nkeys_1 = __webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nkeys/lib/nkeys.js\");\nconst nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ \"./node_modules/@nats-io/nkeys/lib/nacl.js\"));\n/**\n * @ignore\n */\nclass KP {\n    seed;\n    constructor(seed) {\n        this.seed = seed;\n    }\n    getRawSeed() {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        const sd = codec_1.Codec.decodeSeed(this.seed);\n        return sd.buf;\n    }\n    getSeed() {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        return this.seed;\n    }\n    getPublicKey() {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        const sd = codec_1.Codec.decodeSeed(this.seed);\n        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());\n        const buf = codec_1.Codec.encode(sd.prefix, kp.publicKey);\n        return new TextDecoder().decode(buf);\n    }\n    getPrivateKey() {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());\n        return codec_1.Codec.encode(nkeys_1.Prefix.Private, kp.secretKey);\n    }\n    sign(input) {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());\n        return nacl_1.default.sign.detached(input, kp.secretKey);\n    }\n    verify(input, sig) {\n        if (!this.seed) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());\n        return nacl_1.default.sign.detached.verify(input, sig, kp.publicKey);\n    }\n    clear() {\n        if (!this.seed) {\n            return;\n        }\n        this.seed.fill(0);\n        this.seed = undefined;\n    }\n    seal(_, _recipient, _nonce) {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);\n    }\n    open(_, _sender) {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);\n    }\n}\nexports.KP = KP;\n//# sourceMappingURL=kp.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL2twLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFVBQVU7QUFDVixnQkFBZ0IsbUJBQU8sQ0FBQywyREFBUztBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQywyREFBUztBQUNqQywrQkFBK0IsbUJBQU8sQ0FBQyx5REFBUTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmF0cy1pby9ua2V5cy9saWIva3AuanM/ZGNhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgMjAxOC0yMDI0IFRoZSBOQVRTIEF1dGhvcnNcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktQID0gdm9pZCAwO1xuY29uc3QgY29kZWNfMSA9IHJlcXVpcmUoXCIuL2NvZGVjXCIpO1xuY29uc3QgbmtleXNfMSA9IHJlcXVpcmUoXCIuL25rZXlzXCIpO1xuY29uc3QgbmFjbF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL25hY2xcIikpO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNsYXNzIEtQIHtcbiAgICBzZWVkO1xuICAgIGNvbnN0cnVjdG9yKHNlZWQpIHtcbiAgICAgICAgdGhpcy5zZWVkID0gc2VlZDtcbiAgICB9XG4gICAgZ2V0UmF3U2VlZCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNlZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBua2V5c18xLk5LZXlzRXJyb3IobmtleXNfMS5OS2V5c0Vycm9yQ29kZS5DbGVhcmVkUGFpcik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2QgPSBjb2RlY18xLkNvZGVjLmRlY29kZVNlZWQodGhpcy5zZWVkKTtcbiAgICAgICAgcmV0dXJuIHNkLmJ1ZjtcbiAgICB9XG4gICAgZ2V0U2VlZCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNlZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBua2V5c18xLk5LZXlzRXJyb3IobmtleXNfMS5OS2V5c0Vycm9yQ29kZS5DbGVhcmVkUGFpcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2VlZDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICBpZiAoIXRoaXMuc2VlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IG5rZXlzXzEuTktleXNFcnJvcihua2V5c18xLk5LZXlzRXJyb3JDb2RlLkNsZWFyZWRQYWlyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZCA9IGNvZGVjXzEuQ29kZWMuZGVjb2RlU2VlZCh0aGlzLnNlZWQpO1xuICAgICAgICBjb25zdCBrcCA9IG5hY2xfMS5kZWZhdWx0LnNpZ24ua2V5UGFpci5mcm9tU2VlZCh0aGlzLmdldFJhd1NlZWQoKSk7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IGNvZGVjXzEuQ29kZWMuZW5jb2RlKHNkLnByZWZpeCwga3AucHVibGljS2V5KTtcbiAgICAgICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShidWYpO1xuICAgIH1cbiAgICBnZXRQcml2YXRlS2V5KCkge1xuICAgICAgICBpZiAoIXRoaXMuc2VlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IG5rZXlzXzEuTktleXNFcnJvcihua2V5c18xLk5LZXlzRXJyb3JDb2RlLkNsZWFyZWRQYWlyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrcCA9IG5hY2xfMS5kZWZhdWx0LnNpZ24ua2V5UGFpci5mcm9tU2VlZCh0aGlzLmdldFJhd1NlZWQoKSk7XG4gICAgICAgIHJldHVybiBjb2RlY18xLkNvZGVjLmVuY29kZShua2V5c18xLlByZWZpeC5Qcml2YXRlLCBrcC5zZWNyZXRLZXkpO1xuICAgIH1cbiAgICBzaWduKGlucHV0KSB7XG4gICAgICAgIGlmICghdGhpcy5zZWVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgbmtleXNfMS5OS2V5c0Vycm9yKG5rZXlzXzEuTktleXNFcnJvckNvZGUuQ2xlYXJlZFBhaXIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGtwID0gbmFjbF8xLmRlZmF1bHQuc2lnbi5rZXlQYWlyLmZyb21TZWVkKHRoaXMuZ2V0UmF3U2VlZCgpKTtcbiAgICAgICAgcmV0dXJuIG5hY2xfMS5kZWZhdWx0LnNpZ24uZGV0YWNoZWQoaW5wdXQsIGtwLnNlY3JldEtleSk7XG4gICAgfVxuICAgIHZlcmlmeShpbnB1dCwgc2lnKSB7XG4gICAgICAgIGlmICghdGhpcy5zZWVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgbmtleXNfMS5OS2V5c0Vycm9yKG5rZXlzXzEuTktleXNFcnJvckNvZGUuQ2xlYXJlZFBhaXIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGtwID0gbmFjbF8xLmRlZmF1bHQuc2lnbi5rZXlQYWlyLmZyb21TZWVkKHRoaXMuZ2V0UmF3U2VlZCgpKTtcbiAgICAgICAgcmV0dXJuIG5hY2xfMS5kZWZhdWx0LnNpZ24uZGV0YWNoZWQudmVyaWZ5KGlucHV0LCBzaWcsIGtwLnB1YmxpY0tleSk7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICBpZiAoIXRoaXMuc2VlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2VlZC5maWxsKDApO1xuICAgICAgICB0aGlzLnNlZWQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHNlYWwoXywgX3JlY2lwaWVudCwgX25vbmNlKSB7XG4gICAgICAgIHRocm93IG5ldyBua2V5c18xLk5LZXlzRXJyb3IobmtleXNfMS5OS2V5c0Vycm9yQ29kZS5JbnZhbGlkTktleU9wZXJhdGlvbik7XG4gICAgfVxuICAgIG9wZW4oXywgX3NlbmRlcikge1xuICAgICAgICB0aHJvdyBuZXcgbmtleXNfMS5OS2V5c0Vycm9yKG5rZXlzXzEuTktleXNFcnJvckNvZGUuSW52YWxpZE5LZXlPcGVyYXRpb24pO1xuICAgIH1cbn1cbmV4cG9ydHMuS1AgPSBLUDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/kp.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/mod.js":
/*!************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/mod.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.version = exports.encode = exports.decode = exports.Prefix = exports.NKeysErrorCode = exports.NKeysError = exports.fromSeed = exports.fromPublic = exports.fromCurveSeed = exports.createUser = exports.createServer = exports.createPair = exports.createOperator = exports.createCurve = exports.createCluster = exports.createAccount = void 0;\nvar nkeys_1 = __webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nkeys/lib/nkeys.js\");\nObject.defineProperty(exports, \"createAccount\", ({ enumerable: true, get: function () { return nkeys_1.createAccount; } }));\nObject.defineProperty(exports, \"createCluster\", ({ enumerable: true, get: function () { return nkeys_1.createCluster; } }));\nObject.defineProperty(exports, \"createCurve\", ({ enumerable: true, get: function () { return nkeys_1.createCurve; } }));\nObject.defineProperty(exports, \"createOperator\", ({ enumerable: true, get: function () { return nkeys_1.createOperator; } }));\nObject.defineProperty(exports, \"createPair\", ({ enumerable: true, get: function () { return nkeys_1.createPair; } }));\nObject.defineProperty(exports, \"createServer\", ({ enumerable: true, get: function () { return nkeys_1.createServer; } }));\nObject.defineProperty(exports, \"createUser\", ({ enumerable: true, get: function () { return nkeys_1.createUser; } }));\nObject.defineProperty(exports, \"fromCurveSeed\", ({ enumerable: true, get: function () { return nkeys_1.fromCurveSeed; } }));\nObject.defineProperty(exports, \"fromPublic\", ({ enumerable: true, get: function () { return nkeys_1.fromPublic; } }));\nObject.defineProperty(exports, \"fromSeed\", ({ enumerable: true, get: function () { return nkeys_1.fromSeed; } }));\nObject.defineProperty(exports, \"NKeysError\", ({ enumerable: true, get: function () { return nkeys_1.NKeysError; } }));\nObject.defineProperty(exports, \"NKeysErrorCode\", ({ enumerable: true, get: function () { return nkeys_1.NKeysErrorCode; } }));\nObject.defineProperty(exports, \"Prefix\", ({ enumerable: true, get: function () { return nkeys_1.Prefix; } }));\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@nats-io/nkeys/lib/util.js\");\nObject.defineProperty(exports, \"decode\", ({ enumerable: true, get: function () { return util_1.decode; } }));\nObject.defineProperty(exports, \"encode\", ({ enumerable: true, get: function () { return util_1.encode; } }));\nvar version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@nats-io/nkeys/lib/version.js\");\nObject.defineProperty(exports, \"version\", ({ enumerable: true, get: function () { return version_1.version; } }));\n//# sourceMappingURL=mod.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL21vZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsY0FBYyxHQUFHLGNBQWMsR0FBRyxjQUFjLEdBQUcsc0JBQXNCLEdBQUcsa0JBQWtCLEdBQUcsZ0JBQWdCLEdBQUcsa0JBQWtCLEdBQUcscUJBQXFCLEdBQUcsa0JBQWtCLEdBQUcsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcsc0JBQXNCLEdBQUcsbUJBQW1CLEdBQUcscUJBQXFCLEdBQUcscUJBQXFCO0FBQ2hWLGNBQWMsbUJBQU8sQ0FBQywyREFBUztBQUMvQixpREFBZ0QsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDekgsaURBQWdELEVBQUUscUNBQXFDLGlDQUFpQyxFQUFDO0FBQ3pILCtDQUE4QyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNySCxrREFBaUQsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDM0gsOENBQTZDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ25ILGdEQUErQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUN2SCw4Q0FBNkMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDbkgsaURBQWdELEVBQUUscUNBQXFDLGlDQUFpQyxFQUFDO0FBQ3pILDhDQUE2QyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNuSCw0Q0FBMkMsRUFBRSxxQ0FBcUMsNEJBQTRCLEVBQUM7QUFDL0csOENBQTZDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ25ILGtEQUFpRCxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUMzSCwwQ0FBeUMsRUFBRSxxQ0FBcUMsMEJBQTBCLEVBQUM7QUFDM0csYUFBYSxtQkFBTyxDQUFDLHlEQUFRO0FBQzdCLDBDQUF5QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUMxRywwQ0FBeUMsRUFBRSxxQ0FBcUMseUJBQXlCLEVBQUM7QUFDMUcsZ0JBQWdCLG1CQUFPLENBQUMsK0RBQVc7QUFDbkMsMkNBQTBDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQy9HIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmF0cy1pby9ua2V5cy9saWIvbW9kLmpzPzQ3MTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZlcnNpb24gPSBleHBvcnRzLmVuY29kZSA9IGV4cG9ydHMuZGVjb2RlID0gZXhwb3J0cy5QcmVmaXggPSBleHBvcnRzLk5LZXlzRXJyb3JDb2RlID0gZXhwb3J0cy5OS2V5c0Vycm9yID0gZXhwb3J0cy5mcm9tU2VlZCA9IGV4cG9ydHMuZnJvbVB1YmxpYyA9IGV4cG9ydHMuZnJvbUN1cnZlU2VlZCA9IGV4cG9ydHMuY3JlYXRlVXNlciA9IGV4cG9ydHMuY3JlYXRlU2VydmVyID0gZXhwb3J0cy5jcmVhdGVQYWlyID0gZXhwb3J0cy5jcmVhdGVPcGVyYXRvciA9IGV4cG9ydHMuY3JlYXRlQ3VydmUgPSBleHBvcnRzLmNyZWF0ZUNsdXN0ZXIgPSBleHBvcnRzLmNyZWF0ZUFjY291bnQgPSB2b2lkIDA7XG52YXIgbmtleXNfMSA9IHJlcXVpcmUoXCIuL25rZXlzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQWNjb3VudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmtleXNfMS5jcmVhdGVBY2NvdW50OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQ2x1c3RlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmtleXNfMS5jcmVhdGVDbHVzdGVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQ3VydmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5rZXlzXzEuY3JlYXRlQ3VydmU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVPcGVyYXRvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmtleXNfMS5jcmVhdGVPcGVyYXRvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZVBhaXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5rZXlzXzEuY3JlYXRlUGFpcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZVNlcnZlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmtleXNfMS5jcmVhdGVTZXJ2ZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVVc2VyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBua2V5c18xLmNyZWF0ZVVzZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tQ3VydmVTZWVkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBua2V5c18xLmZyb21DdXJ2ZVNlZWQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tUHVibGljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBua2V5c18xLmZyb21QdWJsaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tU2VlZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmtleXNfMS5mcm9tU2VlZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5LZXlzRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5rZXlzXzEuTktleXNFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5LZXlzRXJyb3JDb2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBua2V5c18xLk5LZXlzRXJyb3JDb2RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJlZml4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBua2V5c18xLlByZWZpeDsgfSB9KTtcbnZhciB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVjb2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsXzEuZGVjb2RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZW5jb2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsXzEuZW5jb2RlOyB9IH0pO1xudmFyIHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2ZXJzaW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB2ZXJzaW9uXzEudmVyc2lvbjsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/mod.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/nacl.js":
/*!*************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/nacl.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst nacl_1 = __importDefault(__webpack_require__(/*! tweetnacl/nacl */ \"./node_modules/tweetnacl/nacl.js\"));\nexports[\"default\"] = nacl_1.default;\n//# sourceMappingURL=nacl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL25hY2wuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsbUJBQU8sQ0FBQyx3REFBZ0I7QUFDdkQsa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL25hY2wuanM/Y2ZiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IG5hY2xfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwidHdlZXRuYWNsL25hY2xcIikpO1xuZXhwb3J0cy5kZWZhdWx0ID0gbmFjbF8xLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uYWNsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/nacl.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/nkeys.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/nkeys.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NKeysError = exports.NKeysErrorCode = exports.Prefixes = exports.Prefix = void 0;\nexports.createPair = createPair;\nexports.createOperator = createOperator;\nexports.createAccount = createAccount;\nexports.createUser = createUser;\nexports.createCluster = createCluster;\nexports.createServer = createServer;\nexports.createCurve = createCurve;\nexports.fromPublic = fromPublic;\nexports.fromCurveSeed = fromCurveSeed;\nexports.fromSeed = fromSeed;\n/*\n * Copyright 2018-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst kp_1 = __webpack_require__(/*! ./kp */ \"./node_modules/@nats-io/nkeys/lib/kp.js\");\nconst public_1 = __webpack_require__(/*! ./public */ \"./node_modules/@nats-io/nkeys/lib/public.js\");\nconst codec_1 = __webpack_require__(/*! ./codec */ \"./node_modules/@nats-io/nkeys/lib/codec.js\");\nconst curve_1 = __webpack_require__(/*! ./curve */ \"./node_modules/@nats-io/nkeys/lib/curve.js\");\nconst nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ \"./node_modules/@nats-io/nkeys/lib/nacl.js\"));\n/**\n * @ignore\n */\nfunction createPair(prefix) {\n    const len = prefix === Prefix.Curve ? curve_1.curveKeyLen : 32;\n    const rawSeed = nacl_1.default.randomBytes(len);\n    const str = codec_1.Codec.encodeSeed(prefix, new Uint8Array(rawSeed));\n    return prefix === Prefix.Curve\n        ? new curve_1.CurveKP(new Uint8Array(rawSeed))\n        : new kp_1.KP(str);\n}\n/**\n * Creates a KeyPair with an operator prefix\n * @returns {KeyPair} Returns the created KeyPair.\n */\nfunction createOperator() {\n    return createPair(Prefix.Operator);\n}\n/**\n * Creates a KeyPair with an account prefix\n * @returns {KeyPair} Returns the created KeyPair.\n */\nfunction createAccount() {\n    return createPair(Prefix.Account);\n}\n/**\n * Creates a KeyPair with a user prefix\n * @returns {KeyPair} Returns the created KeyPair.\n */\nfunction createUser() {\n    return createPair(Prefix.User);\n}\n/**\n * @ignore\n */\nfunction createCluster() {\n    return createPair(Prefix.Cluster);\n}\n/**\n * @ignore\n */\nfunction createServer() {\n    return createPair(Prefix.Server);\n}\n/**\n * @ignore\n */\nfunction createCurve() {\n    return createPair(Prefix.Curve);\n}\n/**\n * Creates a KeyPair from a specified public key\n * @param {string} src of the public key in string format.\n * @returns {KeyPair} Returns the created KeyPair.\n * @see KeyPair#getPublicKey\n */\nfunction fromPublic(src) {\n    const ba = new TextEncoder().encode(src);\n    const raw = codec_1.Codec._decode(ba);\n    const prefix = Prefixes.parsePrefix(raw[0]);\n    if (Prefixes.isValidPublicPrefix(prefix)) {\n        return new public_1.PublicKey(ba);\n    }\n    throw new NKeysError(NKeysErrorCode.InvalidPublicKey);\n}\nfunction fromCurveSeed(src) {\n    const sd = codec_1.Codec.decodeSeed(src);\n    if (sd.prefix !== Prefix.Curve) {\n        throw new NKeysError(NKeysErrorCode.InvalidCurveSeed);\n    }\n    if (sd.buf.byteLength !== curve_1.curveKeyLen) {\n        throw new NKeysError(NKeysErrorCode.InvalidSeedLen);\n    }\n    return new curve_1.CurveKP(sd.buf);\n}\n/**\n * Creates a KeyPair from a specified seed.\n * @param {Uint8Array} src of the seed key as Uint8Array\n * @returns {KeyPair} Returns the created KeyPair.\n * @see KeyPair#getSeed\n */\nfunction fromSeed(src) {\n    const sd = codec_1.Codec.decodeSeed(src);\n    // if we are here it decoded properly\n    if (sd.prefix === Prefix.Curve) {\n        return fromCurveSeed(src);\n    }\n    return new kp_1.KP(src);\n}\n/**\n * @ignore\n */\nvar Prefix;\n(function (Prefix) {\n    Prefix[Prefix[\"Unknown\"] = -1] = \"Unknown\";\n    //Seed is the version byte used for encoded NATS Seeds\n    Prefix[Prefix[\"Seed\"] = 144] = \"Seed\";\n    //PrefixBytePrivate is the version byte used for encoded NATS Private keys\n    Prefix[Prefix[\"Private\"] = 120] = \"Private\";\n    //PrefixByteOperator is the version byte used for encoded NATS Operators\n    Prefix[Prefix[\"Operator\"] = 112] = \"Operator\";\n    //PrefixByteServer is the version byte used for encoded NATS Servers\n    Prefix[Prefix[\"Server\"] = 104] = \"Server\";\n    //PrefixByteCluster is the version byte used for encoded NATS Clusters\n    Prefix[Prefix[\"Cluster\"] = 16] = \"Cluster\";\n    //PrefixByteAccount is the version byte used for encoded NATS Accounts\n    Prefix[Prefix[\"Account\"] = 0] = \"Account\";\n    //PrefixByteUser is the version byte used for encoded NATS Users\n    Prefix[Prefix[\"User\"] = 160] = \"User\";\n    Prefix[Prefix[\"Curve\"] = 184] = \"Curve\";\n})(Prefix || (exports.Prefix = Prefix = {}));\n/**\n * @private\n */\nclass Prefixes {\n    static isValidPublicPrefix(prefix) {\n        return prefix == Prefix.Server ||\n            prefix == Prefix.Operator ||\n            prefix == Prefix.Cluster ||\n            prefix == Prefix.Account ||\n            prefix == Prefix.User ||\n            prefix == Prefix.Curve;\n    }\n    static startsWithValidPrefix(s) {\n        const c = s[0];\n        return c == \"S\" || c == \"P\" || c == \"O\" || c == \"N\" || c == \"C\" ||\n            c == \"A\" || c == \"U\" || c == \"X\";\n    }\n    static isValidPrefix(prefix) {\n        const v = this.parsePrefix(prefix);\n        return v !== Prefix.Unknown;\n    }\n    static parsePrefix(v) {\n        switch (v) {\n            case Prefix.Seed:\n                return Prefix.Seed;\n            case Prefix.Private:\n                return Prefix.Private;\n            case Prefix.Operator:\n                return Prefix.Operator;\n            case Prefix.Server:\n                return Prefix.Server;\n            case Prefix.Cluster:\n                return Prefix.Cluster;\n            case Prefix.Account:\n                return Prefix.Account;\n            case Prefix.User:\n                return Prefix.User;\n            case Prefix.Curve:\n                return Prefix.Curve;\n            default:\n                return Prefix.Unknown;\n        }\n    }\n}\nexports.Prefixes = Prefixes;\n/**\n * Possible error codes on exceptions thrown by the library.\n */\nvar NKeysErrorCode;\n(function (NKeysErrorCode) {\n    NKeysErrorCode[\"InvalidPrefixByte\"] = \"nkeys: invalid prefix byte\";\n    NKeysErrorCode[\"InvalidKey\"] = \"nkeys: invalid key\";\n    NKeysErrorCode[\"InvalidPublicKey\"] = \"nkeys: invalid public key\";\n    NKeysErrorCode[\"InvalidSeedLen\"] = \"nkeys: invalid seed length\";\n    NKeysErrorCode[\"InvalidSeed\"] = \"nkeys: invalid seed\";\n    NKeysErrorCode[\"InvalidCurveSeed\"] = \"nkeys: invalid curve seed\";\n    NKeysErrorCode[\"InvalidCurveKey\"] = \"nkeys: not a valid curve key\";\n    NKeysErrorCode[\"InvalidCurveOperation\"] = \"nkeys: curve key is not valid for sign/verify\";\n    NKeysErrorCode[\"InvalidNKeyOperation\"] = \"keys: only curve key can seal/open\";\n    NKeysErrorCode[\"InvalidEncoding\"] = \"nkeys: invalid encoded key\";\n    NKeysErrorCode[\"InvalidRecipient\"] = \"nkeys: not a valid recipient public curve key\";\n    NKeysErrorCode[\"InvalidEncrypted\"] = \"nkeys: encrypted input is not valid\";\n    NKeysErrorCode[\"CannotSign\"] = \"nkeys: cannot sign, no private key available\";\n    NKeysErrorCode[\"PublicKeyOnly\"] = \"nkeys: no seed or private key available\";\n    NKeysErrorCode[\"InvalidChecksum\"] = \"nkeys: invalid checksum\";\n    NKeysErrorCode[\"SerializationError\"] = \"nkeys: serialization error\";\n    NKeysErrorCode[\"ApiError\"] = \"nkeys: api error\";\n    NKeysErrorCode[\"ClearedPair\"] = \"nkeys: pair is cleared\";\n})(NKeysErrorCode || (exports.NKeysErrorCode = NKeysErrorCode = {}));\nclass NKeysError extends Error {\n    code;\n    constructor(code, options) {\n        super(code, options);\n        this.code = code;\n    }\n}\nexports.NKeysError = NKeysError;\n//# sourceMappingURL=nkeys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL25rZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCLEdBQUcsY0FBYztBQUMvRSxrQkFBa0I7QUFDbEIsc0JBQXNCO0FBQ3RCLHFCQUFxQjtBQUNyQixrQkFBa0I7QUFDbEIscUJBQXFCO0FBQ3JCLG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIsa0JBQWtCO0FBQ2xCLHFCQUFxQjtBQUNyQixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxxREFBTTtBQUMzQixpQkFBaUIsbUJBQU8sQ0FBQyw2REFBVTtBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQywyREFBUztBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQywyREFBUztBQUNqQywrQkFBK0IsbUJBQU8sQ0FBQyx5REFBUTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGFBQWEsY0FBYyxjQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCLHNCQUFzQixzQkFBc0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuYXRzLWlvL25rZXlzL2xpYi9ua2V5cy5qcz84YzI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OS2V5c0Vycm9yID0gZXhwb3J0cy5OS2V5c0Vycm9yQ29kZSA9IGV4cG9ydHMuUHJlZml4ZXMgPSBleHBvcnRzLlByZWZpeCA9IHZvaWQgMDtcbmV4cG9ydHMuY3JlYXRlUGFpciA9IGNyZWF0ZVBhaXI7XG5leHBvcnRzLmNyZWF0ZU9wZXJhdG9yID0gY3JlYXRlT3BlcmF0b3I7XG5leHBvcnRzLmNyZWF0ZUFjY291bnQgPSBjcmVhdGVBY2NvdW50O1xuZXhwb3J0cy5jcmVhdGVVc2VyID0gY3JlYXRlVXNlcjtcbmV4cG9ydHMuY3JlYXRlQ2x1c3RlciA9IGNyZWF0ZUNsdXN0ZXI7XG5leHBvcnRzLmNyZWF0ZVNlcnZlciA9IGNyZWF0ZVNlcnZlcjtcbmV4cG9ydHMuY3JlYXRlQ3VydmUgPSBjcmVhdGVDdXJ2ZTtcbmV4cG9ydHMuZnJvbVB1YmxpYyA9IGZyb21QdWJsaWM7XG5leHBvcnRzLmZyb21DdXJ2ZVNlZWQgPSBmcm9tQ3VydmVTZWVkO1xuZXhwb3J0cy5mcm9tU2VlZCA9IGZyb21TZWVkO1xuLypcbiAqIENvcHlyaWdodCAyMDE4LTIwMjQgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmNvbnN0IGtwXzEgPSByZXF1aXJlKFwiLi9rcFwiKTtcbmNvbnN0IHB1YmxpY18xID0gcmVxdWlyZShcIi4vcHVibGljXCIpO1xuY29uc3QgY29kZWNfMSA9IHJlcXVpcmUoXCIuL2NvZGVjXCIpO1xuY29uc3QgY3VydmVfMSA9IHJlcXVpcmUoXCIuL2N1cnZlXCIpO1xuY29uc3QgbmFjbF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL25hY2xcIikpO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBhaXIocHJlZml4KSB7XG4gICAgY29uc3QgbGVuID0gcHJlZml4ID09PSBQcmVmaXguQ3VydmUgPyBjdXJ2ZV8xLmN1cnZlS2V5TGVuIDogMzI7XG4gICAgY29uc3QgcmF3U2VlZCA9IG5hY2xfMS5kZWZhdWx0LnJhbmRvbUJ5dGVzKGxlbik7XG4gICAgY29uc3Qgc3RyID0gY29kZWNfMS5Db2RlYy5lbmNvZGVTZWVkKHByZWZpeCwgbmV3IFVpbnQ4QXJyYXkocmF3U2VlZCkpO1xuICAgIHJldHVybiBwcmVmaXggPT09IFByZWZpeC5DdXJ2ZVxuICAgICAgICA/IG5ldyBjdXJ2ZV8xLkN1cnZlS1AobmV3IFVpbnQ4QXJyYXkocmF3U2VlZCkpXG4gICAgICAgIDogbmV3IGtwXzEuS1Aoc3RyKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIEtleVBhaXIgd2l0aCBhbiBvcGVyYXRvciBwcmVmaXhcbiAqIEByZXR1cm5zIHtLZXlQYWlyfSBSZXR1cm5zIHRoZSBjcmVhdGVkIEtleVBhaXIuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZU9wZXJhdG9yKCkge1xuICAgIHJldHVybiBjcmVhdGVQYWlyKFByZWZpeC5PcGVyYXRvcik7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBLZXlQYWlyIHdpdGggYW4gYWNjb3VudCBwcmVmaXhcbiAqIEByZXR1cm5zIHtLZXlQYWlyfSBSZXR1cm5zIHRoZSBjcmVhdGVkIEtleVBhaXIuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUFjY291bnQoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVBhaXIoUHJlZml4LkFjY291bnQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgS2V5UGFpciB3aXRoIGEgdXNlciBwcmVmaXhcbiAqIEByZXR1cm5zIHtLZXlQYWlyfSBSZXR1cm5zIHRoZSBjcmVhdGVkIEtleVBhaXIuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVVzZXIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVBhaXIoUHJlZml4LlVzZXIpO1xufVxuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNsdXN0ZXIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVBhaXIoUHJlZml4LkNsdXN0ZXIpO1xufVxuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVNlcnZlcigpIHtcbiAgICByZXR1cm4gY3JlYXRlUGFpcihQcmVmaXguU2VydmVyKTtcbn1cbi8qKlxuICogQGlnbm9yZVxuICovXG5mdW5jdGlvbiBjcmVhdGVDdXJ2ZSgpIHtcbiAgICByZXR1cm4gY3JlYXRlUGFpcihQcmVmaXguQ3VydmUpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgS2V5UGFpciBmcm9tIGEgc3BlY2lmaWVkIHB1YmxpYyBrZXlcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcmMgb2YgdGhlIHB1YmxpYyBrZXkgaW4gc3RyaW5nIGZvcm1hdC5cbiAqIEByZXR1cm5zIHtLZXlQYWlyfSBSZXR1cm5zIHRoZSBjcmVhdGVkIEtleVBhaXIuXG4gKiBAc2VlIEtleVBhaXIjZ2V0UHVibGljS2V5XG4gKi9cbmZ1bmN0aW9uIGZyb21QdWJsaWMoc3JjKSB7XG4gICAgY29uc3QgYmEgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3JjKTtcbiAgICBjb25zdCByYXcgPSBjb2RlY18xLkNvZGVjLl9kZWNvZGUoYmEpO1xuICAgIGNvbnN0IHByZWZpeCA9IFByZWZpeGVzLnBhcnNlUHJlZml4KHJhd1swXSk7XG4gICAgaWYgKFByZWZpeGVzLmlzVmFsaWRQdWJsaWNQcmVmaXgocHJlZml4KSkge1xuICAgICAgICByZXR1cm4gbmV3IHB1YmxpY18xLlB1YmxpY0tleShiYSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBOS2V5c0Vycm9yKE5LZXlzRXJyb3JDb2RlLkludmFsaWRQdWJsaWNLZXkpO1xufVxuZnVuY3Rpb24gZnJvbUN1cnZlU2VlZChzcmMpIHtcbiAgICBjb25zdCBzZCA9IGNvZGVjXzEuQ29kZWMuZGVjb2RlU2VlZChzcmMpO1xuICAgIGlmIChzZC5wcmVmaXggIT09IFByZWZpeC5DdXJ2ZSkge1xuICAgICAgICB0aHJvdyBuZXcgTktleXNFcnJvcihOS2V5c0Vycm9yQ29kZS5JbnZhbGlkQ3VydmVTZWVkKTtcbiAgICB9XG4gICAgaWYgKHNkLmJ1Zi5ieXRlTGVuZ3RoICE9PSBjdXJ2ZV8xLmN1cnZlS2V5TGVuKSB7XG4gICAgICAgIHRocm93IG5ldyBOS2V5c0Vycm9yKE5LZXlzRXJyb3JDb2RlLkludmFsaWRTZWVkTGVuKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBjdXJ2ZV8xLkN1cnZlS1Aoc2QuYnVmKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIEtleVBhaXIgZnJvbSBhIHNwZWNpZmllZCBzZWVkLlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBzcmMgb2YgdGhlIHNlZWQga2V5IGFzIFVpbnQ4QXJyYXlcbiAqIEByZXR1cm5zIHtLZXlQYWlyfSBSZXR1cm5zIHRoZSBjcmVhdGVkIEtleVBhaXIuXG4gKiBAc2VlIEtleVBhaXIjZ2V0U2VlZFxuICovXG5mdW5jdGlvbiBmcm9tU2VlZChzcmMpIHtcbiAgICBjb25zdCBzZCA9IGNvZGVjXzEuQ29kZWMuZGVjb2RlU2VlZChzcmMpO1xuICAgIC8vIGlmIHdlIGFyZSBoZXJlIGl0IGRlY29kZWQgcHJvcGVybHlcbiAgICBpZiAoc2QucHJlZml4ID09PSBQcmVmaXguQ3VydmUpIHtcbiAgICAgICAgcmV0dXJuIGZyb21DdXJ2ZVNlZWQoc3JjKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBrcF8xLktQKHNyYyk7XG59XG4vKipcbiAqIEBpZ25vcmVcbiAqL1xudmFyIFByZWZpeDtcbihmdW5jdGlvbiAoUHJlZml4KSB7XG4gICAgUHJlZml4W1ByZWZpeFtcIlVua25vd25cIl0gPSAtMV0gPSBcIlVua25vd25cIjtcbiAgICAvL1NlZWQgaXMgdGhlIHZlcnNpb24gYnl0ZSB1c2VkIGZvciBlbmNvZGVkIE5BVFMgU2VlZHNcbiAgICBQcmVmaXhbUHJlZml4W1wiU2VlZFwiXSA9IDE0NF0gPSBcIlNlZWRcIjtcbiAgICAvL1ByZWZpeEJ5dGVQcml2YXRlIGlzIHRoZSB2ZXJzaW9uIGJ5dGUgdXNlZCBmb3IgZW5jb2RlZCBOQVRTIFByaXZhdGUga2V5c1xuICAgIFByZWZpeFtQcmVmaXhbXCJQcml2YXRlXCJdID0gMTIwXSA9IFwiUHJpdmF0ZVwiO1xuICAgIC8vUHJlZml4Qnl0ZU9wZXJhdG9yIGlzIHRoZSB2ZXJzaW9uIGJ5dGUgdXNlZCBmb3IgZW5jb2RlZCBOQVRTIE9wZXJhdG9yc1xuICAgIFByZWZpeFtQcmVmaXhbXCJPcGVyYXRvclwiXSA9IDExMl0gPSBcIk9wZXJhdG9yXCI7XG4gICAgLy9QcmVmaXhCeXRlU2VydmVyIGlzIHRoZSB2ZXJzaW9uIGJ5dGUgdXNlZCBmb3IgZW5jb2RlZCBOQVRTIFNlcnZlcnNcbiAgICBQcmVmaXhbUHJlZml4W1wiU2VydmVyXCJdID0gMTA0XSA9IFwiU2VydmVyXCI7XG4gICAgLy9QcmVmaXhCeXRlQ2x1c3RlciBpcyB0aGUgdmVyc2lvbiBieXRlIHVzZWQgZm9yIGVuY29kZWQgTkFUUyBDbHVzdGVyc1xuICAgIFByZWZpeFtQcmVmaXhbXCJDbHVzdGVyXCJdID0gMTZdID0gXCJDbHVzdGVyXCI7XG4gICAgLy9QcmVmaXhCeXRlQWNjb3VudCBpcyB0aGUgdmVyc2lvbiBieXRlIHVzZWQgZm9yIGVuY29kZWQgTkFUUyBBY2NvdW50c1xuICAgIFByZWZpeFtQcmVmaXhbXCJBY2NvdW50XCJdID0gMF0gPSBcIkFjY291bnRcIjtcbiAgICAvL1ByZWZpeEJ5dGVVc2VyIGlzIHRoZSB2ZXJzaW9uIGJ5dGUgdXNlZCBmb3IgZW5jb2RlZCBOQVRTIFVzZXJzXG4gICAgUHJlZml4W1ByZWZpeFtcIlVzZXJcIl0gPSAxNjBdID0gXCJVc2VyXCI7XG4gICAgUHJlZml4W1ByZWZpeFtcIkN1cnZlXCJdID0gMTg0XSA9IFwiQ3VydmVcIjtcbn0pKFByZWZpeCB8fCAoZXhwb3J0cy5QcmVmaXggPSBQcmVmaXggPSB7fSkpO1xuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5jbGFzcyBQcmVmaXhlcyB7XG4gICAgc3RhdGljIGlzVmFsaWRQdWJsaWNQcmVmaXgocHJlZml4KSB7XG4gICAgICAgIHJldHVybiBwcmVmaXggPT0gUHJlZml4LlNlcnZlciB8fFxuICAgICAgICAgICAgcHJlZml4ID09IFByZWZpeC5PcGVyYXRvciB8fFxuICAgICAgICAgICAgcHJlZml4ID09IFByZWZpeC5DbHVzdGVyIHx8XG4gICAgICAgICAgICBwcmVmaXggPT0gUHJlZml4LkFjY291bnQgfHxcbiAgICAgICAgICAgIHByZWZpeCA9PSBQcmVmaXguVXNlciB8fFxuICAgICAgICAgICAgcHJlZml4ID09IFByZWZpeC5DdXJ2ZTtcbiAgICB9XG4gICAgc3RhdGljIHN0YXJ0c1dpdGhWYWxpZFByZWZpeChzKSB7XG4gICAgICAgIGNvbnN0IGMgPSBzWzBdO1xuICAgICAgICByZXR1cm4gYyA9PSBcIlNcIiB8fCBjID09IFwiUFwiIHx8IGMgPT0gXCJPXCIgfHwgYyA9PSBcIk5cIiB8fCBjID09IFwiQ1wiIHx8XG4gICAgICAgICAgICBjID09IFwiQVwiIHx8IGMgPT0gXCJVXCIgfHwgYyA9PSBcIlhcIjtcbiAgICB9XG4gICAgc3RhdGljIGlzVmFsaWRQcmVmaXgocHJlZml4KSB7XG4gICAgICAgIGNvbnN0IHYgPSB0aGlzLnBhcnNlUHJlZml4KHByZWZpeCk7XG4gICAgICAgIHJldHVybiB2ICE9PSBQcmVmaXguVW5rbm93bjtcbiAgICB9XG4gICAgc3RhdGljIHBhcnNlUHJlZml4KHYpIHtcbiAgICAgICAgc3dpdGNoICh2KSB7XG4gICAgICAgICAgICBjYXNlIFByZWZpeC5TZWVkOlxuICAgICAgICAgICAgICAgIHJldHVybiBQcmVmaXguU2VlZDtcbiAgICAgICAgICAgIGNhc2UgUHJlZml4LlByaXZhdGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByZWZpeC5Qcml2YXRlO1xuICAgICAgICAgICAgY2FzZSBQcmVmaXguT3BlcmF0b3I6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByZWZpeC5PcGVyYXRvcjtcbiAgICAgICAgICAgIGNhc2UgUHJlZml4LlNlcnZlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJlZml4LlNlcnZlcjtcbiAgICAgICAgICAgIGNhc2UgUHJlZml4LkNsdXN0ZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByZWZpeC5DbHVzdGVyO1xuICAgICAgICAgICAgY2FzZSBQcmVmaXguQWNjb3VudDpcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJlZml4LkFjY291bnQ7XG4gICAgICAgICAgICBjYXNlIFByZWZpeC5Vc2VyOlxuICAgICAgICAgICAgICAgIHJldHVybiBQcmVmaXguVXNlcjtcbiAgICAgICAgICAgIGNhc2UgUHJlZml4LkN1cnZlOlxuICAgICAgICAgICAgICAgIHJldHVybiBQcmVmaXguQ3VydmU7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBQcmVmaXguVW5rbm93bjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUHJlZml4ZXMgPSBQcmVmaXhlcztcbi8qKlxuICogUG9zc2libGUgZXJyb3IgY29kZXMgb24gZXhjZXB0aW9ucyB0aHJvd24gYnkgdGhlIGxpYnJhcnkuXG4gKi9cbnZhciBOS2V5c0Vycm9yQ29kZTtcbihmdW5jdGlvbiAoTktleXNFcnJvckNvZGUpIHtcbiAgICBOS2V5c0Vycm9yQ29kZVtcIkludmFsaWRQcmVmaXhCeXRlXCJdID0gXCJua2V5czogaW52YWxpZCBwcmVmaXggYnl0ZVwiO1xuICAgIE5LZXlzRXJyb3JDb2RlW1wiSW52YWxpZEtleVwiXSA9IFwibmtleXM6IGludmFsaWQga2V5XCI7XG4gICAgTktleXNFcnJvckNvZGVbXCJJbnZhbGlkUHVibGljS2V5XCJdID0gXCJua2V5czogaW52YWxpZCBwdWJsaWMga2V5XCI7XG4gICAgTktleXNFcnJvckNvZGVbXCJJbnZhbGlkU2VlZExlblwiXSA9IFwibmtleXM6IGludmFsaWQgc2VlZCBsZW5ndGhcIjtcbiAgICBOS2V5c0Vycm9yQ29kZVtcIkludmFsaWRTZWVkXCJdID0gXCJua2V5czogaW52YWxpZCBzZWVkXCI7XG4gICAgTktleXNFcnJvckNvZGVbXCJJbnZhbGlkQ3VydmVTZWVkXCJdID0gXCJua2V5czogaW52YWxpZCBjdXJ2ZSBzZWVkXCI7XG4gICAgTktleXNFcnJvckNvZGVbXCJJbnZhbGlkQ3VydmVLZXlcIl0gPSBcIm5rZXlzOiBub3QgYSB2YWxpZCBjdXJ2ZSBrZXlcIjtcbiAgICBOS2V5c0Vycm9yQ29kZVtcIkludmFsaWRDdXJ2ZU9wZXJhdGlvblwiXSA9IFwibmtleXM6IGN1cnZlIGtleSBpcyBub3QgdmFsaWQgZm9yIHNpZ24vdmVyaWZ5XCI7XG4gICAgTktleXNFcnJvckNvZGVbXCJJbnZhbGlkTktleU9wZXJhdGlvblwiXSA9IFwia2V5czogb25seSBjdXJ2ZSBrZXkgY2FuIHNlYWwvb3BlblwiO1xuICAgIE5LZXlzRXJyb3JDb2RlW1wiSW52YWxpZEVuY29kaW5nXCJdID0gXCJua2V5czogaW52YWxpZCBlbmNvZGVkIGtleVwiO1xuICAgIE5LZXlzRXJyb3JDb2RlW1wiSW52YWxpZFJlY2lwaWVudFwiXSA9IFwibmtleXM6IG5vdCBhIHZhbGlkIHJlY2lwaWVudCBwdWJsaWMgY3VydmUga2V5XCI7XG4gICAgTktleXNFcnJvckNvZGVbXCJJbnZhbGlkRW5jcnlwdGVkXCJdID0gXCJua2V5czogZW5jcnlwdGVkIGlucHV0IGlzIG5vdCB2YWxpZFwiO1xuICAgIE5LZXlzRXJyb3JDb2RlW1wiQ2Fubm90U2lnblwiXSA9IFwibmtleXM6IGNhbm5vdCBzaWduLCBubyBwcml2YXRlIGtleSBhdmFpbGFibGVcIjtcbiAgICBOS2V5c0Vycm9yQ29kZVtcIlB1YmxpY0tleU9ubHlcIl0gPSBcIm5rZXlzOiBubyBzZWVkIG9yIHByaXZhdGUga2V5IGF2YWlsYWJsZVwiO1xuICAgIE5LZXlzRXJyb3JDb2RlW1wiSW52YWxpZENoZWNrc3VtXCJdID0gXCJua2V5czogaW52YWxpZCBjaGVja3N1bVwiO1xuICAgIE5LZXlzRXJyb3JDb2RlW1wiU2VyaWFsaXphdGlvbkVycm9yXCJdID0gXCJua2V5czogc2VyaWFsaXphdGlvbiBlcnJvclwiO1xuICAgIE5LZXlzRXJyb3JDb2RlW1wiQXBpRXJyb3JcIl0gPSBcIm5rZXlzOiBhcGkgZXJyb3JcIjtcbiAgICBOS2V5c0Vycm9yQ29kZVtcIkNsZWFyZWRQYWlyXCJdID0gXCJua2V5czogcGFpciBpcyBjbGVhcmVkXCI7XG59KShOS2V5c0Vycm9yQ29kZSB8fCAoZXhwb3J0cy5OS2V5c0Vycm9yQ29kZSA9IE5LZXlzRXJyb3JDb2RlID0ge30pKTtcbmNsYXNzIE5LZXlzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29kZTtcbiAgICBjb25zdHJ1Y3Rvcihjb2RlLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGNvZGUsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIH1cbn1cbmV4cG9ydHMuTktleXNFcnJvciA9IE5LZXlzRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ua2V5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/nkeys.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/public.js":
/*!***************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/public.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\n * Copyright 2018-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst codec_1 = __webpack_require__(/*! ./codec */ \"./node_modules/@nats-io/nkeys/lib/codec.js\");\nconst nkeys_1 = __webpack_require__(/*! ./nkeys */ \"./node_modules/@nats-io/nkeys/lib/nkeys.js\");\nconst nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ \"./node_modules/@nats-io/nkeys/lib/nacl.js\"));\n/**\n * @ignore\n */\nclass PublicKey {\n    publicKey;\n    constructor(publicKey) {\n        this.publicKey = publicKey;\n    }\n    getPublicKey() {\n        if (!this.publicKey) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        return new TextDecoder().decode(this.publicKey);\n    }\n    getPrivateKey() {\n        if (!this.publicKey) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);\n    }\n    getSeed() {\n        if (!this.publicKey) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);\n    }\n    sign(_) {\n        if (!this.publicKey) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.CannotSign);\n    }\n    verify(input, sig) {\n        if (!this.publicKey) {\n            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);\n        }\n        const buf = codec_1.Codec._decode(this.publicKey);\n        return nacl_1.default.sign.detached.verify(input, sig, buf.slice(1));\n    }\n    clear() {\n        if (!this.publicKey) {\n            return;\n        }\n        this.publicKey.fill(0);\n        this.publicKey = undefined;\n    }\n    seal(_, _recipient, _nonce) {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);\n    }\n    open(_, _sender) {\n        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceMappingURL=public.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL3B1YmxpYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakIsZ0JBQWdCLG1CQUFPLENBQUMsMkRBQVM7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsMkRBQVM7QUFDakMsK0JBQStCLG1CQUFPLENBQUMseURBQVE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL3B1YmxpYy5qcz85MjgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDE4LTIwMjQgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVibGljS2V5ID0gdm9pZCAwO1xuY29uc3QgY29kZWNfMSA9IHJlcXVpcmUoXCIuL2NvZGVjXCIpO1xuY29uc3QgbmtleXNfMSA9IHJlcXVpcmUoXCIuL25rZXlzXCIpO1xuY29uc3QgbmFjbF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL25hY2xcIikpO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNsYXNzIFB1YmxpY0tleSB7XG4gICAgcHVibGljS2V5O1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpY0tleSkge1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IHB1YmxpY0tleTtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICBpZiAoIXRoaXMucHVibGljS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgbmtleXNfMS5OS2V5c0Vycm9yKG5rZXlzXzEuTktleXNFcnJvckNvZGUuQ2xlYXJlZFBhaXIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUodGhpcy5wdWJsaWNLZXkpO1xuICAgIH1cbiAgICBnZXRQcml2YXRlS2V5KCkge1xuICAgICAgICBpZiAoIXRoaXMucHVibGljS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgbmtleXNfMS5OS2V5c0Vycm9yKG5rZXlzXzEuTktleXNFcnJvckNvZGUuQ2xlYXJlZFBhaXIpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBua2V5c18xLk5LZXlzRXJyb3IobmtleXNfMS5OS2V5c0Vycm9yQ29kZS5QdWJsaWNLZXlPbmx5KTtcbiAgICB9XG4gICAgZ2V0U2VlZCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnB1YmxpY0tleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IG5rZXlzXzEuTktleXNFcnJvcihua2V5c18xLk5LZXlzRXJyb3JDb2RlLkNsZWFyZWRQYWlyKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgbmtleXNfMS5OS2V5c0Vycm9yKG5rZXlzXzEuTktleXNFcnJvckNvZGUuUHVibGljS2V5T25seSk7XG4gICAgfVxuICAgIHNpZ24oXykge1xuICAgICAgICBpZiAoIXRoaXMucHVibGljS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgbmtleXNfMS5OS2V5c0Vycm9yKG5rZXlzXzEuTktleXNFcnJvckNvZGUuQ2xlYXJlZFBhaXIpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBua2V5c18xLk5LZXlzRXJyb3IobmtleXNfMS5OS2V5c0Vycm9yQ29kZS5DYW5ub3RTaWduKTtcbiAgICB9XG4gICAgdmVyaWZ5KGlucHV0LCBzaWcpIHtcbiAgICAgICAgaWYgKCF0aGlzLnB1YmxpY0tleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IG5rZXlzXzEuTktleXNFcnJvcihua2V5c18xLk5LZXlzRXJyb3JDb2RlLkNsZWFyZWRQYWlyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBidWYgPSBjb2RlY18xLkNvZGVjLl9kZWNvZGUodGhpcy5wdWJsaWNLZXkpO1xuICAgICAgICByZXR1cm4gbmFjbF8xLmRlZmF1bHQuc2lnbi5kZXRhY2hlZC52ZXJpZnkoaW5wdXQsIHNpZywgYnVmLnNsaWNlKDEpKTtcbiAgICB9XG4gICAgY2xlYXIoKSB7XG4gICAgICAgIGlmICghdGhpcy5wdWJsaWNLZXkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnB1YmxpY0tleS5maWxsKDApO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc2VhbChfLCBfcmVjaXBpZW50LCBfbm9uY2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IG5rZXlzXzEuTktleXNFcnJvcihua2V5c18xLk5LZXlzRXJyb3JDb2RlLkludmFsaWROS2V5T3BlcmF0aW9uKTtcbiAgICB9XG4gICAgb3BlbihfLCBfc2VuZGVyKSB7XG4gICAgICAgIHRocm93IG5ldyBua2V5c18xLk5LZXlzRXJyb3IobmtleXNfMS5OS2V5c0Vycm9yQ29kZS5JbnZhbGlkTktleU9wZXJhdGlvbik7XG4gICAgfVxufVxuZXhwb3J0cy5QdWJsaWNLZXkgPSBQdWJsaWNLZXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdWJsaWMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/public.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/util.js":
/*!*************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/util.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encode = encode;\nexports.decode = decode;\nexports.dump = dump;\n/*\n * Copyright 2018-2020 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Encode binary data to a base64 string\n * @param {Uint8Array} bytes to encode to base64\n */\nfunction encode(bytes) {\n    return btoa(String.fromCharCode(...bytes));\n}\n/**\n * Decode a base64 encoded string to a binary Uint8Array\n * @param {string} b64str encoded string\n */\nfunction decode(b64str) {\n    const bin = atob(b64str);\n    const bytes = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; i++) {\n        bytes[i] = bin.charCodeAt(i);\n    }\n    return bytes;\n}\n/**\n * @ignore\n */\nfunction dump(buf, msg) {\n    if (msg) {\n        console.log(msg);\n    }\n    const a = [];\n    for (let i = 0; i < buf.byteLength; i++) {\n        if (i % 8 === 0) {\n            a.push(\"\\n\");\n        }\n        let v = buf[i].toString(16);\n        if (v.length === 1) {\n            v = \"0\" + v;\n        }\n        a.push(v);\n    }\n    console.log(a.join(\"  \"));\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL3V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGNBQWM7QUFDZCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL3V0aWwuanM/Nzg2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG5leHBvcnRzLmR1bXAgPSBkdW1wO1xuLypcbiAqIENvcHlyaWdodCAyMDE4LTIwMjAgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogRW5jb2RlIGJpbmFyeSBkYXRhIHRvIGEgYmFzZTY0IHN0cmluZ1xuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlcyB0byBlbmNvZGUgdG8gYmFzZTY0XG4gKi9cbmZ1bmN0aW9uIGVuY29kZShieXRlcykge1xuICAgIHJldHVybiBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUoLi4uYnl0ZXMpKTtcbn1cbi8qKlxuICogRGVjb2RlIGEgYmFzZTY0IGVuY29kZWQgc3RyaW5nIHRvIGEgYmluYXJ5IFVpbnQ4QXJyYXlcbiAqIEBwYXJhbSB7c3RyaW5nfSBiNjRzdHIgZW5jb2RlZCBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gZGVjb2RlKGI2NHN0cikge1xuICAgIGNvbnN0IGJpbiA9IGF0b2IoYjY0c3RyKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJpbi5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmluLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJ5dGVzW2ldID0gYmluLmNoYXJDb2RlQXQoaSk7XG4gICAgfVxuICAgIHJldHVybiBieXRlcztcbn1cbi8qKlxuICogQGlnbm9yZVxuICovXG5mdW5jdGlvbiBkdW1wKGJ1ZiwgbXNnKSB7XG4gICAgaWYgKG1zZykge1xuICAgICAgICBjb25zb2xlLmxvZyhtc2cpO1xuICAgIH1cbiAgICBjb25zdCBhID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidWYuYnl0ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChpICUgOCA9PT0gMCkge1xuICAgICAgICAgICAgYS5wdXNoKFwiXFxuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGxldCB2ID0gYnVmW2ldLnRvU3RyaW5nKDE2KTtcbiAgICAgICAgaWYgKHYubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICB2ID0gXCIwXCIgKyB2O1xuICAgICAgICB9XG4gICAgICAgIGEucHVzaCh2KTtcbiAgICB9XG4gICAgY29uc29sZS5sb2coYS5qb2luKFwiICBcIikpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/util.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/version.js":
/*!****************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/version.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.version = void 0;\n// this file is autogenerated - do not edit\nexports.version = \"2.0.0-2\";\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbmtleXMvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmF0cy1pby9ua2V5cy9saWIvdmVyc2lvbi5qcz80OTM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52ZXJzaW9uID0gdm9pZCAwO1xuLy8gdGhpcyBmaWxlIGlzIGF1dG9nZW5lcmF0ZWQgLSBkbyBub3QgZWRpdFxuZXhwb3J0cy52ZXJzaW9uID0gXCIyLjAuMC0yXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nkeys/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@nats-io/nuid/lib/nuid.js":
/*!************************************************!*\
  !*** ./node_modules/@nats-io/nuid/lib/nuid.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/*\n * Copyright 2016-2024 The NATS Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.nuid = exports.Nuid = void 0;\nconst digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nconst base = 36;\nconst preLen = 12;\nconst seqLen = 10;\nconst maxSeq = 3656158440062976; // base^seqLen == 36^10\nconst minInc = 33;\nconst maxInc = 333;\nconst totalLen = preLen + seqLen;\nfunction _getRandomValues(a) {\n    for (let i = 0; i < a.length; i++) {\n        a[i] = Math.floor(Math.random() * 255);\n    }\n}\nfunction fillRandom(a) {\n    if (globalThis?.crypto?.getRandomValues) {\n        globalThis.crypto.getRandomValues(a);\n    }\n    else {\n        _getRandomValues(a);\n    }\n}\n/**\n * Nuid is a class that generates unique identifiers.\n */\nclass Nuid {\n    /**\n     *   @hidden\n     */\n    buf;\n    /**\n     *   @hidden\n     */\n    seq;\n    /**\n     * @hidden\n     */\n    inc;\n    /**\n     * @hidden\n     */\n    inited;\n    constructor() {\n        this.buf = new Uint8Array(totalLen);\n        this.inited = false;\n    }\n    /**\n     * Initializes a nuid with a crypto random prefix,\n     * and pseudo-random sequence and increment. This function\n     * is only called if any api on a nuid is called.\n     *\n     * @api private\n     */\n    init() {\n        this.inited = true;\n        this.setPre();\n        this.initSeqAndInc();\n        this.fillSeq();\n    }\n    /**\n     * Initializes the pseudo random sequence number and the increment range.\n     *\n     * @api private\n     */\n    initSeqAndInc() {\n        this.seq = Math.floor(Math.random() * maxSeq);\n        this.inc = Math.floor(Math.random() * (maxInc - minInc) + minInc);\n    }\n    /**\n     * Sets the prefix from crypto random bytes. Converts them to base36.\n     *\n     * @api private\n     */\n    setPre() {\n        const cbuf = new Uint8Array(preLen);\n        fillRandom(cbuf);\n        for (let i = 0; i < preLen; i++) {\n            const di = cbuf[i] % base;\n            this.buf[i] = digits.charCodeAt(di);\n        }\n    }\n    /**\n     * Fills the sequence part of the nuid as base36 from this.seq.\n     *\n     * @api private\n     */\n    fillSeq() {\n        let n = this.seq;\n        for (let i = totalLen - 1; i >= preLen; i--) {\n            this.buf[i] = digits.charCodeAt(n % base);\n            n = Math.floor(n / base);\n        }\n    }\n    /**\n     * Returns the next nuid.\n     */\n    next() {\n        if (!this.inited) {\n            this.init();\n        }\n        this.seq += this.inc;\n        if (this.seq > maxSeq) {\n            this.setPre();\n            this.initSeqAndInc();\n        }\n        this.fillSeq();\n        // @ts-ignore - Uint8Arrays can be an argument\n        return String.fromCharCode.apply(String, this.buf);\n    }\n    /**\n     * Resets the prefix and counter for the nuid. This is typically\n     * called automatically from within next() if the current sequence\n     * exceeds the resolution of the nuid.\n     */\n    reset() {\n        this.init();\n    }\n}\nexports.Nuid = Nuid;\n/**\n * A nuid instance you can use by simply calling `next()` on it.\n */\nexports.nuid = new Nuid();\n//# sourceMappingURL=nuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5hdHMtaW8vbnVpZC9saWIvbnVpZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWSxHQUFHLFlBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxhQUFhO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmF0cy1pby9udWlkL2xpYi9udWlkLmpzP2E3NTYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE2LTIwMjQgVGhlIE5BVFMgQXV0aG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5udWlkID0gZXhwb3J0cy5OdWlkID0gdm9pZCAwO1xuY29uc3QgZGlnaXRzID0gXCIwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIjtcbmNvbnN0IGJhc2UgPSAzNjtcbmNvbnN0IHByZUxlbiA9IDEyO1xuY29uc3Qgc2VxTGVuID0gMTA7XG5jb25zdCBtYXhTZXEgPSAzNjU2MTU4NDQwMDYyOTc2OyAvLyBiYXNlXnNlcUxlbiA9PSAzNl4xMFxuY29uc3QgbWluSW5jID0gMzM7XG5jb25zdCBtYXhJbmMgPSAzMzM7XG5jb25zdCB0b3RhbExlbiA9IHByZUxlbiArIHNlcUxlbjtcbmZ1bmN0aW9uIF9nZXRSYW5kb21WYWx1ZXMoYSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICBhW2ldID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU1KTtcbiAgICB9XG59XG5mdW5jdGlvbiBmaWxsUmFuZG9tKGEpIHtcbiAgICBpZiAoZ2xvYmFsVGhpcz8uY3J5cHRvPy5nZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAgICAgZ2xvYmFsVGhpcy5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgX2dldFJhbmRvbVZhbHVlcyhhKTtcbiAgICB9XG59XG4vKipcbiAqIE51aWQgaXMgYSBjbGFzcyB0aGF0IGdlbmVyYXRlcyB1bmlxdWUgaWRlbnRpZmllcnMuXG4gKi9cbmNsYXNzIE51aWQge1xuICAgIC8qKlxuICAgICAqICAgQGhpZGRlblxuICAgICAqL1xuICAgIGJ1ZjtcbiAgICAvKipcbiAgICAgKiAgIEBoaWRkZW5cbiAgICAgKi9cbiAgICBzZXE7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGluYztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgaW5pdGVkO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmJ1ZiA9IG5ldyBVaW50OEFycmF5KHRvdGFsTGVuKTtcbiAgICAgICAgdGhpcy5pbml0ZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgYSBudWlkIHdpdGggYSBjcnlwdG8gcmFuZG9tIHByZWZpeCxcbiAgICAgKiBhbmQgcHNldWRvLXJhbmRvbSBzZXF1ZW5jZSBhbmQgaW5jcmVtZW50LiBUaGlzIGZ1bmN0aW9uXG4gICAgICogaXMgb25seSBjYWxsZWQgaWYgYW55IGFwaSBvbiBhIG51aWQgaXMgY2FsbGVkLlxuICAgICAqXG4gICAgICogQGFwaSBwcml2YXRlXG4gICAgICovXG4gICAgaW5pdCgpIHtcbiAgICAgICAgdGhpcy5pbml0ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLnNldFByZSgpO1xuICAgICAgICB0aGlzLmluaXRTZXFBbmRJbmMoKTtcbiAgICAgICAgdGhpcy5maWxsU2VxKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSBwc2V1ZG8gcmFuZG9tIHNlcXVlbmNlIG51bWJlciBhbmQgdGhlIGluY3JlbWVudCByYW5nZS5cbiAgICAgKlxuICAgICAqIEBhcGkgcHJpdmF0ZVxuICAgICAqL1xuICAgIGluaXRTZXFBbmRJbmMoKSB7XG4gICAgICAgIHRoaXMuc2VxID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbWF4U2VxKTtcbiAgICAgICAgdGhpcy5pbmMgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4SW5jIC0gbWluSW5jKSArIG1pbkluYyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHByZWZpeCBmcm9tIGNyeXB0byByYW5kb20gYnl0ZXMuIENvbnZlcnRzIHRoZW0gdG8gYmFzZTM2LlxuICAgICAqXG4gICAgICogQGFwaSBwcml2YXRlXG4gICAgICovXG4gICAgc2V0UHJlKCkge1xuICAgICAgICBjb25zdCBjYnVmID0gbmV3IFVpbnQ4QXJyYXkocHJlTGVuKTtcbiAgICAgICAgZmlsbFJhbmRvbShjYnVmKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcmVMZW47IGkrKykge1xuICAgICAgICAgICAgY29uc3QgZGkgPSBjYnVmW2ldICUgYmFzZTtcbiAgICAgICAgICAgIHRoaXMuYnVmW2ldID0gZGlnaXRzLmNoYXJDb2RlQXQoZGkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZpbGxzIHRoZSBzZXF1ZW5jZSBwYXJ0IG9mIHRoZSBudWlkIGFzIGJhc2UzNiBmcm9tIHRoaXMuc2VxLlxuICAgICAqXG4gICAgICogQGFwaSBwcml2YXRlXG4gICAgICovXG4gICAgZmlsbFNlcSgpIHtcbiAgICAgICAgbGV0IG4gPSB0aGlzLnNlcTtcbiAgICAgICAgZm9yIChsZXQgaSA9IHRvdGFsTGVuIC0gMTsgaSA+PSBwcmVMZW47IGktLSkge1xuICAgICAgICAgICAgdGhpcy5idWZbaV0gPSBkaWdpdHMuY2hhckNvZGVBdChuICUgYmFzZSk7XG4gICAgICAgICAgICBuID0gTWF0aC5mbG9vcihuIC8gYmFzZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgbmV4dCBudWlkLlxuICAgICAqL1xuICAgIG5leHQoKSB7XG4gICAgICAgIGlmICghdGhpcy5pbml0ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2VxICs9IHRoaXMuaW5jO1xuICAgICAgICBpZiAodGhpcy5zZXEgPiBtYXhTZXEpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0UHJlKCk7XG4gICAgICAgICAgICB0aGlzLmluaXRTZXFBbmRJbmMoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZpbGxTZXEoKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZSAtIFVpbnQ4QXJyYXlzIGNhbiBiZSBhbiBhcmd1bWVudFxuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIHRoaXMuYnVmKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVzZXRzIHRoZSBwcmVmaXggYW5kIGNvdW50ZXIgZm9yIHRoZSBudWlkLiBUaGlzIGlzIHR5cGljYWxseVxuICAgICAqIGNhbGxlZCBhdXRvbWF0aWNhbGx5IGZyb20gd2l0aGluIG5leHQoKSBpZiB0aGUgY3VycmVudCBzZXF1ZW5jZVxuICAgICAqIGV4Y2VlZHMgdGhlIHJlc29sdXRpb24gb2YgdGhlIG51aWQuXG4gICAgICovXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuTnVpZCA9IE51aWQ7XG4vKipcbiAqIEEgbnVpZCBpbnN0YW5jZSB5b3UgY2FuIHVzZSBieSBzaW1wbHkgY2FsbGluZyBgbmV4dCgpYCBvbiBpdC5cbiAqL1xuZXhwb3J0cy5udWlkID0gbmV3IE51aWQoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW51aWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@nats-io/nuid/lib/nuid.js\n"));

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsNEZBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcz81M2U5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar Cancel = __webpack_require__(/*! ../cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/xhr.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\naxios.VERSION = (__webpack_require__(/*! ./env/data */ \"./node_modules/axios/lib/env/data.js\").version);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports[\"default\"] = axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxrREFBUztBQUM3QixXQUFXLG1CQUFPLENBQUMsZ0VBQWdCO0FBQ25DLFlBQVksbUJBQU8sQ0FBQyw0REFBYztBQUNsQyxrQkFBa0IsbUJBQU8sQ0FBQyx3RUFBb0I7QUFDOUMsZUFBZSxtQkFBTyxDQUFDLHdEQUFZOztBQUVuQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxrRUFBaUI7QUFDeEMsb0JBQW9CLG1CQUFPLENBQUMsNEVBQXNCO0FBQ2xELGlCQUFpQixtQkFBTyxDQUFDLHNFQUFtQjtBQUM1QyxnQkFBZ0IsdUZBQTZCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvRUFBa0I7O0FBRXpDO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsZ0ZBQXdCOztBQUVyRDs7QUFFQTtBQUNBLHlCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzP2ZhZDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIC8vIEZhY3RvcnkgZm9yIGNyZWF0aW5nIG5ldyBpbnN0YW5jZXNcbiAgaW5zdGFuY2UuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGRlZmF1bHRDb25maWcsIGluc3RhbmNlQ29uZmlnKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbnZhciBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBFeHBvc2UgQ2FuY2VsICYgQ2FuY2VsVG9rZW5cbmF4aW9zLkNhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbCcpO1xuYXhpb3MuQ2FuY2VsVG9rZW4gPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWxUb2tlbicpO1xuYXhpb3MuaXNDYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9pc0NhbmNlbCcpO1xuYXhpb3MuVkVSU0lPTiA9IHJlcXVpcmUoJy4vZW52L2RhdGEnKS52ZXJzaW9uO1xuXG4vLyBFeHBvc2UgYWxsL3NwcmVhZFxuYXhpb3MuYWxsID0gZnVuY3Rpb24gYWxsKHByb21pc2VzKSB7XG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG59O1xuYXhpb3Muc3ByZWFkID0gcmVxdWlyZSgnLi9oZWxwZXJzL3NwcmVhZCcpO1xuXG4vLyBFeHBvc2UgaXNBeGlvc0Vycm9yXG5heGlvcy5pc0F4aW9zRXJyb3IgPSByZXF1aXJlKCcuL2hlbHBlcnMvaXNBeGlvc0Vycm9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/axios.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qcz9kMmEyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/Cancel.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixhQUFhLG1CQUFPLENBQUMsMkRBQVU7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanM/NzJjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG5cbiAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICByZXNvbHZlUHJvbWlzZSA9IHJlc29sdmU7XG4gIH0pO1xuXG4gIHZhciB0b2tlbiA9IHRoaXM7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgdGhpcy5wcm9taXNlLnRoZW4oZnVuY3Rpb24oY2FuY2VsKSB7XG4gICAgaWYgKCF0b2tlbi5fbGlzdGVuZXJzKSByZXR1cm47XG5cbiAgICB2YXIgaTtcbiAgICB2YXIgbCA9IHRva2VuLl9saXN0ZW5lcnMubGVuZ3RoO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgdG9rZW4uX2xpc3RlbmVyc1tpXShjYW5jZWwpO1xuICAgIH1cbiAgICB0b2tlbi5fbGlzdGVuZXJzID0gbnVsbDtcbiAgfSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgdGhpcy5wcm9taXNlLnRoZW4gPSBmdW5jdGlvbihvbmZ1bGZpbGxlZCkge1xuICAgIHZhciBfcmVzb2x2ZTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuICAgICAgdG9rZW4uc3Vic2NyaWJlKHJlc29sdmUpO1xuICAgICAgX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgIH0pLnRoZW4ob25mdWxmaWxsZWQpO1xuXG4gICAgcHJvbWlzZS5jYW5jZWwgPSBmdW5jdGlvbiByZWplY3QoKSB7XG4gICAgICB0b2tlbi51bnN1YnNjcmliZShfcmVzb2x2ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xuXG4gIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlKSB7XG4gICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbChtZXNzYWdlKTtcbiAgICByZXNvbHZlUHJvbWlzZSh0b2tlbi5yZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudGhyb3dJZlJlcXVlc3RlZCA9IGZ1bmN0aW9uIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIHRocm93IHRoaXMucmVhc29uO1xuICB9XG59O1xuXG4vKipcbiAqIFN1YnNjcmliZSB0byB0aGUgY2FuY2VsIHNpZ25hbFxuICovXG5cbkNhbmNlbFRva2VuLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgbGlzdGVuZXIodGhpcy5yZWFzb24pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICB0aGlzLl9saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzID0gW2xpc3RlbmVyXTtcbiAgfVxufTtcblxuLyoqXG4gKiBVbnN1YnNjcmliZSBmcm9tIHRoZSBjYW5jZWwgc2lnbmFsXG4gKi9cblxuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdW5zdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgaWYgKCF0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGluZGV4ID0gdGhpcy5fbGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG5ldyBgQ2FuY2VsVG9rZW5gIGFuZCBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLFxuICogY2FuY2VscyB0aGUgYENhbmNlbFRva2VuYC5cbiAqL1xuQ2FuY2VsVG9rZW4uc291cmNlID0gZnVuY3Rpb24gc291cmNlKCkge1xuICB2YXIgY2FuY2VsO1xuICB2YXIgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgIGNhbmNlbCA9IGM7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHRva2VuOiB0b2tlbixcbiAgICBjYW5jZWw6IGNhbmNlbFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWxUb2tlbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CancelToken.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanM/YzE3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/isCancel.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./node_modules/axios/lib/helpers/validator.js\");\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZO0FBQ2hDLGVBQWUsbUJBQU8sQ0FBQyx5RUFBcUI7QUFDNUMseUJBQXlCLG1CQUFPLENBQUMsaUZBQXNCO0FBQ3ZELHNCQUFzQixtQkFBTyxDQUFDLDJFQUFtQjtBQUNqRCxrQkFBa0IsbUJBQU8sQ0FBQyxtRUFBZTtBQUN6QyxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBc0I7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzPzI5ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xudmFyIHZhbGlkYXRvciA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvdmFsaWRhdG9yJyk7XG5cbnZhciB2YWxpZGF0b3JzID0gdmFsaWRhdG9yLnZhbGlkYXRvcnM7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBhcmd1bWVudHNbMF07XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcblxuICAvLyBTZXQgY29uZmlnLm1ldGhvZFxuICBpZiAoY29uZmlnLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodGhpcy5kZWZhdWx0cy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gdGhpcy5kZWZhdWx0cy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcubWV0aG9kID0gJ2dldCc7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbmFsID0gY29uZmlnLnRyYW5zaXRpb25hbDtcblxuICBpZiAodHJhbnNpdGlvbmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YWxpZGF0b3IuYXNzZXJ0T3B0aW9ucyh0cmFuc2l0aW9uYWwsIHtcbiAgICAgIHNpbGVudEpTT05QYXJzaW5nOiB2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4pLFxuICAgICAgZm9yY2VkSlNPTlBhcnNpbmc6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbiksXG4gICAgICBjbGFyaWZ5VGltZW91dEVycm9yOiB2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4pXG4gICAgfSwgZmFsc2UpO1xuICB9XG5cbiAgLy8gZmlsdGVyIG91dCBza2lwcGVkIGludGVyY2VwdG9yc1xuICB2YXIgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4gPSBbXTtcbiAgdmFyIHN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycyA9IHRydWU7XG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbiB1bnNoaWZ0UmVxdWVzdEludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGlmICh0eXBlb2YgaW50ZXJjZXB0b3IucnVuV2hlbiA9PT0gJ2Z1bmN0aW9uJyAmJiBpbnRlcmNlcHRvci5ydW5XaGVuKGNvbmZpZykgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzID0gc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzICYmIGludGVyY2VwdG9yLnN5bmNocm9ub3VzO1xuXG4gICAgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdmFyIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbiA9IFtdO1xuICB0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uIHB1c2hSZXNwb25zZUludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB2YXIgcHJvbWlzZTtcblxuICBpZiAoIXN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycykge1xuICAgIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG5cbiAgICBBcnJheS5wcm90b3R5cGUudW5zaGlmdC5hcHBseShjaGFpbiwgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4pO1xuICAgIGNoYWluID0gY2hhaW4uY29uY2F0KHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbik7XG5cbiAgICBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG4gICAgd2hpbGUgKGNoYWluLmxlbmd0aCkge1xuICAgICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfVxuXG5cbiAgdmFyIG5ld0NvbmZpZyA9IGNvbmZpZztcbiAgd2hpbGUgKHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLmxlbmd0aCkge1xuICAgIHZhciBvbkZ1bGZpbGxlZCA9IHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCk7XG4gICAgdmFyIG9uUmVqZWN0ZWQgPSByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpO1xuICAgIHRyeSB7XG4gICAgICBuZXdDb25maWcgPSBvbkZ1bGZpbGxlZChuZXdDb25maWcpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBvblJlamVjdGVkKGVycm9yKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHRyeSB7XG4gICAgcHJvbWlzZSA9IGRpc3BhdGNoUmVxdWVzdChuZXdDb25maWcpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gIH1cblxuICB3aGlsZSAocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLmxlbmd0aCkge1xuICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4ocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCksIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogKGNvbmZpZyB8fCB7fSkuZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/Axios.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckI7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcz9jNzkyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQsIG9wdGlvbnMpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWQsXG4gICAgc3luY2hyb25vdXM6IG9wdGlvbnMgPyBvcHRpb25zLnN5bmNocm9ub3VzIDogZmFsc2UsXG4gICAgcnVuV2hlbjogb3B0aW9ucyA/IG9wdGlvbnMucnVuV2hlbiA6IG51bGxcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/InterceptorManager.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixvQkFBb0IsbUJBQU8sQ0FBQyxtRkFBMEI7QUFDdEQsa0JBQWtCLG1CQUFPLENBQUMsK0VBQXdCOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanM/ZjAyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0Fic29sdXRlVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9pc0Fic29sdXRlVVJMJyk7XG52YXIgY29tYmluZVVSTHMgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2NvbWJpbmVVUkxzJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBiYXNlVVJMIHdpdGggdGhlIHJlcXVlc3RlZFVSTCxcbiAqIG9ubHkgd2hlbiB0aGUgcmVxdWVzdGVkVVJMIGlzIG5vdCBhbHJlYWR5IGFuIGFic29sdXRlIFVSTC5cbiAqIElmIHRoZSByZXF1ZXN0VVJMIGlzIGFic29sdXRlLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHJlcXVlc3RlZFVSTCB1bnRvdWNoZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVxdWVzdGVkVVJMIEFic29sdXRlIG9yIHJlbGF0aXZlIFVSTCB0byBjb21iaW5lXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgZnVsbCBwYXRoXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRGdWxsUGF0aChiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpIHtcbiAgaWYgKGJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwocmVxdWVzdGVkVVJMKSkge1xuICAgIHJldHVybiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpO1xuICB9XG4gIHJldHVybiByZXF1ZXN0ZWRVUkw7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/buildFullPath.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsbUJBQW1CLG1CQUFPLENBQUMscUVBQWdCOztBQUUzQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9jcmVhdGVFcnJvci5qcz83NzBjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vZW5oYW5jZUVycm9yJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2UsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgdmFyIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICByZXR1cm4gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/createError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar Cancel = __webpack_require__(/*! ../cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTtBQUNoQyxvQkFBb0IsbUJBQU8sQ0FBQyx1RUFBaUI7QUFDN0MsZUFBZSxtQkFBTyxDQUFDLHVFQUFvQjtBQUMzQyxlQUFlLG1CQUFPLENBQUMseURBQWE7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLG1FQUFrQjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLHVDQUF1QztBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcz80ZGM5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHRyYW5zZm9ybURhdGEgPSByZXF1aXJlKCcuL3RyYW5zZm9ybURhdGEnKTtcbnZhciBpc0NhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9pc0NhbmNlbCcpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMnKTtcbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvQ2FuY2VsJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cblxuICBpZiAoY29uZmlnLnNpZ25hbCAmJiBjb25maWcuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICB0aHJvdyBuZXcgQ2FuY2VsKCdjYW5jZWxlZCcpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRpc3BhdGNoUmVxdWVzdChjb25maWcpIHtcbiAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gIC8vIEVuc3VyZSBoZWFkZXJzIGV4aXN0XG4gIGNvbmZpZy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnMgfHwge307XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICBjb25maWcsXG4gICAgY29uZmlnLmRhdGEsXG4gICAgY29uZmlnLmhlYWRlcnMsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICAvLyBGbGF0dGVuIGhlYWRlcnNcbiAgY29uZmlnLmhlYWRlcnMgPSB1dGlscy5tZXJnZShcbiAgICBjb25maWcuaGVhZGVycy5jb21tb24gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNbY29uZmlnLm1ldGhvZF0gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNcbiAgKTtcblxuICB1dGlscy5mb3JFYWNoKFxuICAgIFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJywgJ2NvbW1vbiddLFxuICAgIGZ1bmN0aW9uIGNsZWFuSGVhZGVyQ29uZmlnKG1ldGhvZCkge1xuICAgICAgZGVsZXRlIGNvbmZpZy5oZWFkZXJzW21ldGhvZF07XG4gICAgfVxuICApO1xuXG4gIHZhciBhZGFwdGVyID0gY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcjtcblxuICByZXR1cm4gYWRhcHRlcihjb25maWcpLnRoZW4oZnVuY3Rpb24gb25BZGFwdGVyUmVzb2x1dGlvbihyZXNwb25zZSkge1xuICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgcmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgIGNvbmZpZyxcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhLmNhbGwoXG4gICAgICAgICAgY29uZmlnLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/dispatchRequest.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanM/MGRmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXBkYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBjb25maWcsIGVycm9yIGNvZGUsIGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBUaGUgZXJyb3IgdG8gdXBkYXRlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgZXJyb3IuY29uZmlnID0gY29uZmlnO1xuICBpZiAoY29kZSkge1xuICAgIGVycm9yLmNvZGUgPSBjb2RlO1xuICB9XG5cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIGVycm9yLmlzQXhpb3NFcnJvciA9IHRydWU7XG5cbiAgZXJyb3IudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgc3RhdHVzOiB0aGlzLnJlc3BvbnNlICYmIHRoaXMucmVzcG9uc2Uuc3RhdHVzID8gdGhpcy5yZXNwb25zZS5zdGF0dXMgOiBudWxsXG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIGVycm9yO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/enhanceError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLG1EQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLDJCQUEyQjtBQUMzQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcz9iZDEzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICBmdW5jdGlvbiBnZXRNZXJnZWRWYWx1ZSh0YXJnZXQsIHNvdXJjZSkge1xuICAgIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHRhcmdldCkgJiYgdXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2UodGFyZ2V0LCBzb3VyY2UpO1xuICAgIH0gZWxzZSBpZiAodXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2Uoe30sIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiBzb3VyY2Uuc2xpY2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBtZXJnZURlZXBQcm9wZXJ0aWVzKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiB2YWx1ZUZyb21Db25maWcyKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgZnVuY3Rpb24gZGVmYXVsdFRvQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBtZXJnZURpcmVjdEtleXMocHJvcCkge1xuICAgIGlmIChwcm9wIGluIGNvbmZpZzIpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKHByb3AgaW4gY29uZmlnMSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIG1lcmdlTWFwID0ge1xuICAgICd1cmwnOiB2YWx1ZUZyb21Db25maWcyLFxuICAgICdtZXRob2QnOiB2YWx1ZUZyb21Db25maWcyLFxuICAgICdkYXRhJzogdmFsdWVGcm9tQ29uZmlnMixcbiAgICAnYmFzZVVSTCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RyYW5zZm9ybVJlcXVlc3QnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0cmFuc2Zvcm1SZXNwb25zZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3BhcmFtc1NlcmlhbGl6ZXInOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0aW1lb3V0JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndGltZW91dE1lc3NhZ2UnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd3aXRoQ3JlZGVudGlhbHMnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdhZGFwdGVyJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncmVzcG9uc2VUeXBlJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAneHNyZkNvb2tpZU5hbWUnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd4c3JmSGVhZGVyTmFtZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ29uVXBsb2FkUHJvZ3Jlc3MnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdvbkRvd25sb2FkUHJvZ3Jlc3MnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdkZWNvbXByZXNzJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnbWF4Q29udGVudExlbmd0aCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ21heEJvZHlMZW5ndGgnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0cmFuc3BvcnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdodHRwQWdlbnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdodHRwc0FnZW50JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnY2FuY2VsVG9rZW4nOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdzb2NrZXRQYXRoJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncmVzcG9uc2VFbmNvZGluZyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3ZhbGlkYXRlU3RhdHVzJzogbWVyZ2VEaXJlY3RLZXlzXG4gIH07XG5cbiAgdXRpbHMuZm9yRWFjaChPYmplY3Qua2V5cyhjb25maWcxKS5jb25jYXQoT2JqZWN0LmtleXMoY29uZmlnMikpLCBmdW5jdGlvbiBjb21wdXRlQ29uZmlnVmFsdWUocHJvcCkge1xuICAgIHZhciBtZXJnZSA9IG1lcmdlTWFwW3Byb3BdIHx8IG1lcmdlRGVlcFByb3BlcnRpZXM7XG4gICAgdmFyIGNvbmZpZ1ZhbHVlID0gbWVyZ2UocHJvcCk7XG4gICAgKHV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZ1ZhbHVlKSAmJiBtZXJnZSAhPT0gbWVyZ2VEaXJlY3RLZXlzKSB8fCAoY29uZmlnW3Byb3BdID0gY29uZmlnVmFsdWUpO1xuICB9KTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/mergeConfig.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtCQUFrQixtQkFBTyxDQUFDLG1FQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzPzg3NjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCcuL2NyZWF0ZUVycm9yJyk7XG5cbi8qKlxuICogUmVzb2x2ZSBvciByZWplY3QgYSBQcm9taXNlIGJhc2VkIG9uIHJlc3BvbnNlIHN0YXR1cy5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZXNvbHZlIEEgZnVuY3Rpb24gdGhhdCByZXNvbHZlcyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdCBBIGZ1bmN0aW9uIHRoYXQgcmVqZWN0cyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7b2JqZWN0fSByZXNwb25zZSBUaGUgcmVzcG9uc2UuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpIHtcbiAgdmFyIHZhbGlkYXRlU3RhdHVzID0gcmVzcG9uc2UuY29uZmlnLnZhbGlkYXRlU3RhdHVzO1xuICBpZiAoIXJlc3BvbnNlLnN0YXR1cyB8fCAhdmFsaWRhdGVTdGF0dXMgfHwgdmFsaWRhdGVTdGF0dXMocmVzcG9uc2Uuc3RhdHVzKSkge1xuICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICB9IGVsc2Uge1xuICAgIHJlamVjdChjcmVhdGVFcnJvcihcbiAgICAgICdSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlICcgKyByZXNwb25zZS5zdGF0dXMsXG4gICAgICByZXNwb25zZS5jb25maWcsXG4gICAgICBudWxsLFxuICAgICAgcmVzcG9uc2UucmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlXG4gICAgKSk7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/settle.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLDJEQUFlOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanM/NzY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vLi4vZGVmYXVsdHMnKTtcblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGhlIGRhdGEgZm9yIGEgcmVxdWVzdCBvciBhIHJlc3BvbnNlXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBkYXRhIFRoZSBkYXRhIHRvIGJlIHRyYW5zZm9ybWVkXG4gKiBAcGFyYW0ge0FycmF5fSBoZWFkZXJzIFRoZSBoZWFkZXJzIGZvciB0aGUgcmVxdWVzdCBvciByZXNwb25zZVxuICogQHBhcmFtIHtBcnJheXxGdW5jdGlvbn0gZm5zIEEgc2luZ2xlIGZ1bmN0aW9uIG9yIEFycmF5IG9mIGZ1bmN0aW9uc1xuICogQHJldHVybnMgeyp9IFRoZSByZXN1bHRpbmcgdHJhbnNmb3JtZWQgZGF0YVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZGF0YSwgaGVhZGVycywgZm5zKSB7XG4gIHZhciBjb250ZXh0ID0gdGhpcyB8fCBkZWZhdWx0cztcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIHV0aWxzLmZvckVhY2goZm5zLCBmdW5jdGlvbiB0cmFuc2Zvcm0oZm4pIHtcbiAgICBkYXRhID0gZm4uY2FsbChjb250ZXh0LCBkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/transformData.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsa0RBQVM7QUFDN0IsMEJBQTBCLG1CQUFPLENBQUMsOEZBQStCO0FBQ2pFLG1CQUFtQixtQkFBTyxDQUFDLDBFQUFxQjs7QUFFaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0VBQWdCO0FBQ3RDLElBQUksZ0JBQWdCLE9BQU8sbURBQW1ELE9BQU87QUFDckY7QUFDQSxjQUFjLG1CQUFPLENBQUMsaUVBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy5qcz9lMjIxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIG5vcm1hbGl6ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vY29yZS9lbmhhbmNlRXJyb3InKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnlTYWZlbHkocmF3VmFsdWUsIHBhcnNlciwgZW5jb2Rlcikge1xuICBpZiAodXRpbHMuaXNTdHJpbmcocmF3VmFsdWUpKSB7XG4gICAgdHJ5IHtcbiAgICAgIChwYXJzZXIgfHwgSlNPTi5wYXJzZSkocmF3VmFsdWUpO1xuICAgICAgcmV0dXJuIHV0aWxzLnRyaW0ocmF3VmFsdWUpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmIChlLm5hbWUgIT09ICdTeW50YXhFcnJvcicpIHtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gKGVuY29kZXIgfHwgSlNPTi5zdHJpbmdpZnkpKHJhd1ZhbHVlKTtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuXG4gIHRyYW5zaXRpb25hbDoge1xuICAgIHNpbGVudEpTT05QYXJzaW5nOiB0cnVlLFxuICAgIGZvcmNlZEpTT05QYXJzaW5nOiB0cnVlLFxuICAgIGNsYXJpZnlUaW1lb3V0RXJyb3I6IGZhbHNlXG4gIH0sXG5cbiAgYWRhcHRlcjogZ2V0RGVmYXVsdEFkYXB0ZXIoKSxcblxuICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVxdWVzdChkYXRhLCBoZWFkZXJzKSB7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQWNjZXB0Jyk7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQ29udGVudC1UeXBlJyk7XG5cbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSB8fCAoaGVhZGVycyAmJiBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9PT0gJ2FwcGxpY2F0aW9uL2pzb24nKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICByZXR1cm4gc3RyaW5naWZ5U2FmZWx5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgdmFyIHRyYW5zaXRpb25hbCA9IHRoaXMudHJhbnNpdGlvbmFsIHx8IGRlZmF1bHRzLnRyYW5zaXRpb25hbDtcbiAgICB2YXIgc2lsZW50SlNPTlBhcnNpbmcgPSB0cmFuc2l0aW9uYWwgJiYgdHJhbnNpdGlvbmFsLnNpbGVudEpTT05QYXJzaW5nO1xuICAgIHZhciBmb3JjZWRKU09OUGFyc2luZyA9IHRyYW5zaXRpb25hbCAmJiB0cmFuc2l0aW9uYWwuZm9yY2VkSlNPTlBhcnNpbmc7XG4gICAgdmFyIHN0cmljdEpTT05QYXJzaW5nID0gIXNpbGVudEpTT05QYXJzaW5nICYmIHRoaXMucmVzcG9uc2VUeXBlID09PSAnanNvbic7XG5cbiAgICBpZiAoc3RyaWN0SlNPTlBhcnNpbmcgfHwgKGZvcmNlZEpTT05QYXJzaW5nICYmIHV0aWxzLmlzU3RyaW5nKGRhdGEpICYmIGRhdGEubGVuZ3RoKSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChzdHJpY3RKU09OUGFyc2luZykge1xuICAgICAgICAgIGlmIChlLm5hbWUgPT09ICdTeW50YXhFcnJvcicpIHtcbiAgICAgICAgICAgIHRocm93IGVuaGFuY2VFcnJvcihlLCB0aGlzLCAnRV9KU09OX1BBUlNFJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH0sXG5cbiAgaGVhZGVyczoge1xuICAgIGNvbW1vbjoge1xuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gICAgfVxuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = {\n  \"version\": \"0.24.0\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzPzExMGYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwidmVyc2lvblwiOiBcIjAuMjQuMFwiXG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/env/data.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanM/NGJlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/bind.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzP2MxNzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/buildURL.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcz82YmM2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8rJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/combineURLs.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7O0FBRWhDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBMkM7QUFDM0MsU0FBUzs7QUFFVDtBQUNBLDREQUE0RCx3QkFBd0I7QUFDcEY7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEMsZ0NBQWdDLGNBQWM7QUFDOUM7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcz8xZDNmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/cookies.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzP2EyMjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGRcXCtcXC1cXC5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAbsoluteURL.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzP2JkOWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3NcbiAqXG4gKiBAcGFyYW0geyp9IHBheWxvYWQgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBeGlvc0Vycm9yKHBheWxvYWQpIHtcbiAgcmV0dXJuICh0eXBlb2YgcGF5bG9hZCA9PT0gJ29iamVjdCcpICYmIChwYXlsb2FkLmlzQXhpb3NFcnJvciA9PT0gdHJ1ZSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAxiosError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcz84Nzk1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4gIC8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICB2YXIgdXJsUGFyc2luZ05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICB2YXIgb3JpZ2luVVJMO1xuXG4gICAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICAgIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7XG4gICAgICAgIHZhciBocmVmID0gdXJsO1xuXG4gICAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcbiAgICAgICAgICBocmVmID0gdXJsUGFyc2luZ05vZGUuaHJlZjtcbiAgICAgICAgfVxuXG4gICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuXG4gICAgICAgIC8vIHVybFBhcnNpbmdOb2RlIHByb3ZpZGVzIHRoZSBVcmxVdGlscyBpbnRlcmZhY2UgLSBodHRwOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jdXJsdXRpbHNcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBocmVmOiB1cmxQYXJzaW5nTm9kZS5ocmVmLFxuICAgICAgICAgIHByb3RvY29sOiB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbCA/IHVybFBhcnNpbmdOb2RlLnByb3RvY29sLnJlcGxhY2UoLzokLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgICBzZWFyY2g6IHVybFBhcnNpbmdOb2RlLnNlYXJjaCA/IHVybFBhcnNpbmdOb2RlLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpIDogJycsXG4gICAgICAgICAgaGFzaDogdXJsUGFyc2luZ05vZGUuaGFzaCA/IHVybFBhcnNpbmdOb2RlLmhhc2gucmVwbGFjZSgvXiMvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgICAgcG9ydDogdXJsUGFyc2luZ05vZGUucG9ydCxcbiAgICAgICAgICBwYXRobmFtZTogKHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nKSA/XG4gICAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZSA6XG4gICAgICAgICAgICAnLycgKyB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBvcmlnaW5VUkwgPSByZXNvbHZlVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcblxuICAgICAgLyoqXG4gICAgKiBEZXRlcm1pbmUgaWYgYSBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgY3VycmVudCBsb2NhdGlvblxuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0VVJMIFRoZSBVUkwgdG8gdGVzdFxuICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4sIG90aGVyd2lzZSBmYWxzZVxuICAgICovXG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgICAgdmFyIHBhcnNlZCA9ICh1dGlscy5pc1N0cmluZyhyZXF1ZXN0VVJMKSkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDtcbiAgICAgICAgcmV0dXJuIChwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJlxuICAgICAgICAgICAgcGFyc2VkLmhvc3QgPT09IG9yaWdpblVSTC5ob3N0KTtcbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52cyAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isURLSameOrigin.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsbURBQVU7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcz82YjE1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/normalizeHeaderName.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzPzU0ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseHeaders.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanM/MjcyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/spread.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar VERSION = (__webpack_require__(/*! ../env/data */ \"./node_modules/axios/lib/env/data.js\").version);\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGNBQWMsd0ZBQThCOztBQUU1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3ZhbGlkYXRvci5qcz8wMTMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIFZFUlNJT04gPSByZXF1aXJlKCcuLi9lbnYvZGF0YScpLnZlcnNpb247XG5cbnZhciB2YWxpZGF0b3JzID0ge307XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5bJ29iamVjdCcsICdib29sZWFuJywgJ251bWJlcicsICdmdW5jdGlvbicsICdzdHJpbmcnLCAnc3ltYm9sJ10uZm9yRWFjaChmdW5jdGlvbih0eXBlLCBpKSB7XG4gIHZhbGlkYXRvcnNbdHlwZV0gPSBmdW5jdGlvbiB2YWxpZGF0b3IodGhpbmcpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaW5nID09PSB0eXBlIHx8ICdhJyArIChpIDwgMSA/ICduICcgOiAnICcpICsgdHlwZTtcbiAgfTtcbn0pO1xuXG52YXIgZGVwcmVjYXRlZFdhcm5pbmdzID0ge307XG5cbi8qKlxuICogVHJhbnNpdGlvbmFsIG9wdGlvbiB2YWxpZGF0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb258Ym9vbGVhbj99IHZhbGlkYXRvciAtIHNldCB0byBmYWxzZSBpZiB0aGUgdHJhbnNpdGlvbmFsIG9wdGlvbiBoYXMgYmVlbiByZW1vdmVkXG4gKiBAcGFyYW0ge3N0cmluZz99IHZlcnNpb24gLSBkZXByZWNhdGVkIHZlcnNpb24gLyByZW1vdmVkIHNpbmNlIHZlcnNpb25cbiAqIEBwYXJhbSB7c3RyaW5nP30gbWVzc2FnZSAtIHNvbWUgbWVzc2FnZSB3aXRoIGFkZGl0aW9uYWwgaW5mb1xuICogQHJldHVybnMge2Z1bmN0aW9ufVxuICovXG52YWxpZGF0b3JzLnRyYW5zaXRpb25hbCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25hbCh2YWxpZGF0b3IsIHZlcnNpb24sIG1lc3NhZ2UpIHtcbiAgZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShvcHQsIGRlc2MpIHtcbiAgICByZXR1cm4gJ1tBeGlvcyB2JyArIFZFUlNJT04gKyAnXSBUcmFuc2l0aW9uYWwgb3B0aW9uIFxcJycgKyBvcHQgKyAnXFwnJyArIGRlc2MgKyAobWVzc2FnZSA/ICcuICcgKyBtZXNzYWdlIDogJycpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCBvcHQsIG9wdHMpIHtcbiAgICBpZiAodmFsaWRhdG9yID09PSBmYWxzZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdE1lc3NhZ2Uob3B0LCAnIGhhcyBiZWVuIHJlbW92ZWQnICsgKHZlcnNpb24gPyAnIGluICcgKyB2ZXJzaW9uIDogJycpKSk7XG4gICAgfVxuXG4gICAgaWYgKHZlcnNpb24gJiYgIWRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdKSB7XG4gICAgICBkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSA9IHRydWU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKFxuICAgICAgICAgIG9wdCxcbiAgICAgICAgICAnIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdicgKyB2ZXJzaW9uICsgJyBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZSdcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsaWRhdG9yID8gdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdHMpIDogdHJ1ZTtcbiAgfTtcbn07XG5cbi8qKlxuICogQXNzZXJ0IG9iamVjdCdzIHByb3BlcnRpZXMgdHlwZVxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7b2JqZWN0fSBzY2hlbWFcbiAqIEBwYXJhbSB7Ym9vbGVhbj99IGFsbG93VW5rbm93blxuICovXG5cbmZ1bmN0aW9uIGFzc2VydE9wdGlvbnMob3B0aW9ucywgc2NoZW1hLCBhbGxvd1Vua25vd24pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QnKTtcbiAgfVxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICB2YXIgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tID4gMCkge1xuICAgIHZhciBvcHQgPSBrZXlzW2ldO1xuICAgIHZhciB2YWxpZGF0b3IgPSBzY2hlbWFbb3B0XTtcbiAgICBpZiAodmFsaWRhdG9yKSB7XG4gICAgICB2YXIgdmFsdWUgPSBvcHRpb25zW29wdF07XG4gICAgICB2YXIgcmVzdWx0ID0gdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWxpZGF0b3IodmFsdWUsIG9wdCwgb3B0aW9ucyk7XG4gICAgICBpZiAocmVzdWx0ICE9PSB0cnVlKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiAnICsgb3B0ICsgJyBtdXN0IGJlICcgKyByZXN1bHQpO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbGxvd1Vua25vd24gIT09IHRydWUpIHtcbiAgICAgIHRocm93IEVycm9yKCdVbmtub3duIG9wdGlvbiAnICsgb3B0KTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFzc2VydE9wdGlvbnM6IGFzc2VydE9wdGlvbnMsXG4gIHZhbGlkYXRvcnM6IHZhbGlkYXRvcnNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/validator.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === 'object' ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsd0ZBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSAnb2JqZWN0JyA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZSgnbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MnKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./styles/chat.module.css":
/*!************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./styles/chat.module.css ***!
  \************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* styles/Chat.module.css */\\n\\n.chat_container__pa3zI {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    background: linear-gradient(to bottom right, #1a237e, #42a5f5); /* Gradiente azul */\\n    font-family: Arial, sans-serif;\\n}\\n\\n.chat_chatBox__fgPpZ {\\n    display: flex;\\n    border-radius: 15px;\\n    overflow: hidden;\\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\\n    background-color: #ffffff;\\n    width: 800px; /* Definido como fixo */\\n    height: 600px; /* Definido como fixo */\\n    max-width: 100%; /* Garante que não exceda a largura da tela em telas menores */\\n    max-height: 100%; /* Garante que não exceda a altura da tela em telas menores */\\n}\\n\\n.chat_userList__RDyvG {\\n    width: 30%;\\n    border-right: 1px solid #ccc;\\n    padding: 10px;\\n    background-color: rgba(255, 255, 255, 0.9); /* Fundo com maior transparência */\\n    overflow-y: auto;\\n}\\n\\n.chat_user__48BQj {\\n    padding: 12px; /* Aumenta o espaçamento interno */\\n    cursor: pointer;\\n    transition: background-color 0.3s, transform 0.2s;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    margin-bottom: 10px; /* Aumenta o espaço entre os usuários */\\n}\\n\\n.chat_user__48BQj:hover {\\n    background-color: #e0f7fa; /* Cor de fundo ao passar o mouse */\\n    transform: scale(1.02); /* Efeito de aumento ao passar o mouse */\\n}\\n\\n.chat_user__48BQj.chat_selected__vclZP {\\n    background-color: #b2ebf2; /* Cor de fundo quando selecionado */\\n}\\n\\n.chat_onlineIndicator__iL8Pk {\\n    width: 10px;\\n    height: 10px;\\n    border-radius: 50%;\\n    margin-right: 8px;\\n}\\n\\n.chat_online__TPalN {\\n    background-color: green;\\n}\\n\\n.chat_offline__pzO6U {\\n    background-color: red;\\n}\\n\\n.chat_messageArea__M3mY1 {\\n    width: 70%;\\n    padding: 15px; /* Aumenta o espaçamento interno */\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n}\\n\\n.chat_selectedUserInfo__vFQmi {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    margin-bottom: 10px;\\n}\\n\\n.chat_selectedUserHeader__4Jmcv {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.chat_selectedUserName__9wZf_ {\\n    font-weight: bold;\\n    font-size: 1.5rem; /* Aumenta o tamanho do nome do usuário */\\n}\\n\\n.chat_messages__t_G7M {\\n    flex-grow: 1;\\n    margin-bottom: 10px;\\n    overflow-y: auto;\\n    border: 1px solid #ccc;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    padding: 15px; /* Aumenta o espaçamento interno */\\n    background-color: rgba(240, 240, 240, 0.8); /* Fundo claro e sutil */\\n}\\n\\n.chat_message__1yBaG {\\n    margin-bottom: 10px; /* Aumenta o espaço entre as mensagens */\\n}\\n\\n.chat_inputContainer__go5CJ {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.chat_input__Z6q9D {\\n    flex-grow: 1;\\n    padding: 12px; /* Aumenta o espaçamento interno */\\n    border: 1px solid #ccc;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    margin-right: 10px;\\n    transition: border-color 0.3s, box-shadow 0.3s; /* Transição suave */\\n}\\n\\n.chat_input__Z6q9D:focus {\\n    border-color: #0070f3; /* Cor da borda ao focar */\\n    outline: none; /* Remove o contorno padrão */\\n    box-shadow: 0 0 5px rgba(0, 112, 243, 0.5); /* Sombra suave ao focar */\\n}\\n\\n.chat_button__GKum9 {\\n    padding: 12px 15px; /* Aumenta o espaçamento interno */\\n    background-color: #00796b; /* Cor do botão */\\n    color: white;\\n    border: none;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    cursor: pointer;\\n    transition: background-color 0.3s, transform 0.2s; /* Transição suave */\\n}\\n\\n.chat_button__GKum9:hover {\\n    background-color: #004d40; /* Cor do botão ao passar o mouse */\\n    transform: translateY(-2px); /* Efeito de movimento ao passar o mouse */\\n}\\n\\n.chat_userInfo__UbdFO {\\n    padding: 15px; /* Aumenta o espaçamento interno */\\n    border-left: 1px solid #ccc;\\n    background-color: rgba(255, 255, 255, 0.9); /* Fundo com maior transparência */\\n}\\n\\n.chat_logoffButton__o_lZK {\\n    padding: 12px 15px; /* Aumenta o espaçamento interno */\\n    font-size: 16px; /* Tamanho da fonte */\\n    background-color: #e53935; /* Cor do botão de logout */\\n    color: white;\\n    border: none;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    cursor: pointer;\\n    transition: background-color 0.3s; /* Transição suave */\\n}\\n\\n.chat_logoffButton__o_lZK:hover {\\n    background-color: #b71c1c; /* Cor do botão de logout ao passar o mouse */\\n}\\n\\n.chat_popup__bFH2N {\\n    position: fixed;\\n    bottom: 20px;\\n    right: 20px;\\n    background-color: rgba(0, 0, 0, 0.8);\\n    color: white;\\n    padding: 10px 15px;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    animation: chat_fadeIn__4ZUYl 0.5s, chat_fadeOut__hRQMG 0.5s 4.5s;\\n    z-index: 1000; /* Certifique-se de que o pop-up esteja acima de outros elementos */\\n}\\n\\n.chat_updateButtonContainer__fD7j0 {\\n    margin-top: 10px; /* Espaçamento acima do botão */\\n}\\n\\n.chat_updateButton__r4j2u {\\n    background-color: #4caf50; /* Cor de fundo */\\n    color: white; /* Cor do texto */\\n    border: none; /* Sem borda */\\n    padding: 12px 15px; /* Preenchimento */\\n    text-align: center; /* Alinhamento do texto */\\n    text-decoration: none; /* Sem sublinhado */\\n    display: inline-block; /* Para suportar largura e altura */\\n    font-size: 16px; /* Tamanho da fonte */\\n    cursor: pointer; /* Cursor em forma de mão */\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    transition: background-color 0.3s; /* Transição suave */\\n}\\n\\n.chat_updateButton__r4j2u:hover {\\n    background-color: #45a049; /* Cor de fundo ao passar o mouse */\\n}\\n.chat_notificationContainer__F1tYD {\\n    position: fixed;\\n    top: 20px;\\n    right: 20px;\\n    z-index: 1000;\\n}\\n\\n.chat_notification__O2PKf {\\n    background-color: #f0f0f0;\\n    border: 1px solid #ccc;\\n    padding: 10px;\\n    margin-bottom: 10px;\\n    border-radius: 5px;\\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\\n    cursor: pointer;\\n}\\n\\n@keyframes chat_fadeOut__hRQMG {\\n    from {\\n        opacity: 1;\\n    }\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/chat.module.css\"],\"names\":[],\"mappings\":\"AAAA,2BAA2B;;AAE3B;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,8DAA8D,EAAE,mBAAmB;IACnF,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;IAChB,yCAAyC;IACzC,yBAAyB;IACzB,YAAY,EAAE,uBAAuB;IACrC,aAAa,EAAE,uBAAuB;IACtC,eAAe,EAAE,8DAA8D;IAC/E,gBAAgB,EAAE,6DAA6D;AACnF;;AAEA;IACI,UAAU;IACV,4BAA4B;IAC5B,aAAa;IACb,0CAA0C,EAAE,kCAAkC;IAC9E,gBAAgB;AACpB;;AAEA;IACI,aAAa,EAAE,kCAAkC;IACjD,eAAe;IACf,iDAAiD;IACjD,kBAAkB,EAAE,6BAA6B;IACjD,mBAAmB,EAAE,uCAAuC;AAChE;;AAEA;IACI,yBAAyB,EAAE,mCAAmC;IAC9D,sBAAsB,EAAE,wCAAwC;AACpE;;AAEA;IACI,yBAAyB,EAAE,oCAAoC;AACnE;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,aAAa,EAAE,kCAAkC;IACjD,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB,EAAE,yCAAyC;AAChE;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;IAChB,sBAAsB;IACtB,kBAAkB,EAAE,6BAA6B;IACjD,aAAa,EAAE,kCAAkC;IACjD,0CAA0C,EAAE,wBAAwB;AACxE;;AAEA;IACI,mBAAmB,EAAE,wCAAwC;AACjE;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa,EAAE,kCAAkC;IACjD,sBAAsB;IACtB,kBAAkB,EAAE,6BAA6B;IACjD,kBAAkB;IAClB,8CAA8C,EAAE,oBAAoB;AACxE;;AAEA;IACI,qBAAqB,EAAE,0BAA0B;IACjD,aAAa,EAAE,6BAA6B;IAC5C,0CAA0C,EAAE,0BAA0B;AAC1E;;AAEA;IACI,kBAAkB,EAAE,kCAAkC;IACtD,yBAAyB,EAAE,iBAAiB;IAC5C,YAAY;IACZ,YAAY;IACZ,kBAAkB,EAAE,6BAA6B;IACjD,eAAe;IACf,iDAAiD,EAAE,oBAAoB;AAC3E;;AAEA;IACI,yBAAyB,EAAE,mCAAmC;IAC9D,2BAA2B,EAAE,0CAA0C;AAC3E;;AAEA;IACI,aAAa,EAAE,kCAAkC;IACjD,2BAA2B;IAC3B,0CAA0C,EAAE,kCAAkC;AAClF;;AAEA;IACI,kBAAkB,EAAE,kCAAkC;IACtD,eAAe,EAAE,qBAAqB;IACtC,yBAAyB,EAAE,2BAA2B;IACtD,YAAY;IACZ,YAAY;IACZ,kBAAkB,EAAE,6BAA6B;IACjD,eAAe;IACf,iCAAiC,EAAE,oBAAoB;AAC3D;;AAEA;IACI,yBAAyB,EAAE,6CAA6C;AAC5E;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,WAAW;IACX,oCAAoC;IACpC,YAAY;IACZ,kBAAkB;IAClB,kBAAkB,EAAE,6BAA6B;IACjD,iEAAyC;IACzC,aAAa,EAAE,mEAAmE;AACtF;;AAEA;IACI,gBAAgB,EAAE,+BAA+B;AACrD;;AAEA;IACI,yBAAyB,EAAE,iBAAiB;IAC5C,YAAY,EAAE,iBAAiB;IAC/B,YAAY,EAAE,cAAc;IAC5B,kBAAkB,EAAE,kBAAkB;IACtC,kBAAkB,EAAE,yBAAyB;IAC7C,qBAAqB,EAAE,mBAAmB;IAC1C,qBAAqB,EAAE,mCAAmC;IAC1D,eAAe,EAAE,qBAAqB;IACtC,eAAe,EAAE,2BAA2B;IAC5C,kBAAkB,EAAE,6BAA6B;IACjD,iCAAiC,EAAE,oBAAoB;AAC3D;;AAEA;IACI,yBAAyB,EAAE,mCAAmC;AAClE;AACA;IACI,eAAe;IACf,SAAS;IACT,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ\",\"sourcesContent\":[\"/* styles/Chat.module.css */\\n\\n.container {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    background: linear-gradient(to bottom right, #1a237e, #42a5f5); /* Gradiente azul */\\n    font-family: Arial, sans-serif;\\n}\\n\\n.chatBox {\\n    display: flex;\\n    border-radius: 15px;\\n    overflow: hidden;\\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\\n    background-color: #ffffff;\\n    width: 800px; /* Definido como fixo */\\n    height: 600px; /* Definido como fixo */\\n    max-width: 100%; /* Garante que não exceda a largura da tela em telas menores */\\n    max-height: 100%; /* Garante que não exceda a altura da tela em telas menores */\\n}\\n\\n.userList {\\n    width: 30%;\\n    border-right: 1px solid #ccc;\\n    padding: 10px;\\n    background-color: rgba(255, 255, 255, 0.9); /* Fundo com maior transparência */\\n    overflow-y: auto;\\n}\\n\\n.user {\\n    padding: 12px; /* Aumenta o espaçamento interno */\\n    cursor: pointer;\\n    transition: background-color 0.3s, transform 0.2s;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    margin-bottom: 10px; /* Aumenta o espaço entre os usuários */\\n}\\n\\n.user:hover {\\n    background-color: #e0f7fa; /* Cor de fundo ao passar o mouse */\\n    transform: scale(1.02); /* Efeito de aumento ao passar o mouse */\\n}\\n\\n.user.selected {\\n    background-color: #b2ebf2; /* Cor de fundo quando selecionado */\\n}\\n\\n.onlineIndicator {\\n    width: 10px;\\n    height: 10px;\\n    border-radius: 50%;\\n    margin-right: 8px;\\n}\\n\\n.online {\\n    background-color: green;\\n}\\n\\n.offline {\\n    background-color: red;\\n}\\n\\n.messageArea {\\n    width: 70%;\\n    padding: 15px; /* Aumenta o espaçamento interno */\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n}\\n\\n.selectedUserInfo {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    margin-bottom: 10px;\\n}\\n\\n.selectedUserHeader {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.selectedUserName {\\n    font-weight: bold;\\n    font-size: 1.5rem; /* Aumenta o tamanho do nome do usuário */\\n}\\n\\n.messages {\\n    flex-grow: 1;\\n    margin-bottom: 10px;\\n    overflow-y: auto;\\n    border: 1px solid #ccc;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    padding: 15px; /* Aumenta o espaçamento interno */\\n    background-color: rgba(240, 240, 240, 0.8); /* Fundo claro e sutil */\\n}\\n\\n.message {\\n    margin-bottom: 10px; /* Aumenta o espaço entre as mensagens */\\n}\\n\\n.inputContainer {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.input {\\n    flex-grow: 1;\\n    padding: 12px; /* Aumenta o espaçamento interno */\\n    border: 1px solid #ccc;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    margin-right: 10px;\\n    transition: border-color 0.3s, box-shadow 0.3s; /* Transição suave */\\n}\\n\\n.input:focus {\\n    border-color: #0070f3; /* Cor da borda ao focar */\\n    outline: none; /* Remove o contorno padrão */\\n    box-shadow: 0 0 5px rgba(0, 112, 243, 0.5); /* Sombra suave ao focar */\\n}\\n\\n.button {\\n    padding: 12px 15px; /* Aumenta o espaçamento interno */\\n    background-color: #00796b; /* Cor do botão */\\n    color: white;\\n    border: none;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    cursor: pointer;\\n    transition: background-color 0.3s, transform 0.2s; /* Transição suave */\\n}\\n\\n.button:hover {\\n    background-color: #004d40; /* Cor do botão ao passar o mouse */\\n    transform: translateY(-2px); /* Efeito de movimento ao passar o mouse */\\n}\\n\\n.userInfo {\\n    padding: 15px; /* Aumenta o espaçamento interno */\\n    border-left: 1px solid #ccc;\\n    background-color: rgba(255, 255, 255, 0.9); /* Fundo com maior transparência */\\n}\\n\\n.logoffButton {\\n    padding: 12px 15px; /* Aumenta o espaçamento interno */\\n    font-size: 16px; /* Tamanho da fonte */\\n    background-color: #e53935; /* Cor do botão de logout */\\n    color: white;\\n    border: none;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    cursor: pointer;\\n    transition: background-color 0.3s; /* Transição suave */\\n}\\n\\n.logoffButton:hover {\\n    background-color: #b71c1c; /* Cor do botão de logout ao passar o mouse */\\n}\\n\\n.popup {\\n    position: fixed;\\n    bottom: 20px;\\n    right: 20px;\\n    background-color: rgba(0, 0, 0, 0.8);\\n    color: white;\\n    padding: 10px 15px;\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    animation: fadeIn 0.5s, fadeOut 0.5s 4.5s;\\n    z-index: 1000; /* Certifique-se de que o pop-up esteja acima de outros elementos */\\n}\\n\\n.updateButtonContainer {\\n    margin-top: 10px; /* Espaçamento acima do botão */\\n}\\n\\n.updateButton {\\n    background-color: #4caf50; /* Cor de fundo */\\n    color: white; /* Cor do texto */\\n    border: none; /* Sem borda */\\n    padding: 12px 15px; /* Preenchimento */\\n    text-align: center; /* Alinhamento do texto */\\n    text-decoration: none; /* Sem sublinhado */\\n    display: inline-block; /* Para suportar largura e altura */\\n    font-size: 16px; /* Tamanho da fonte */\\n    cursor: pointer; /* Cursor em forma de mão */\\n    border-radius: 8px; /* Bordas mais arredondadas */\\n    transition: background-color 0.3s; /* Transição suave */\\n}\\n\\n.updateButton:hover {\\n    background-color: #45a049; /* Cor de fundo ao passar o mouse */\\n}\\n.notificationContainer {\\n    position: fixed;\\n    top: 20px;\\n    right: 20px;\\n    z-index: 1000;\\n}\\n\\n.notification {\\n    background-color: #f0f0f0;\\n    border: 1px solid #ccc;\\n    padding: 10px;\\n    margin-bottom: 10px;\\n    border-radius: 5px;\\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\\n    cursor: pointer;\\n}\\n\\n@keyframes fadeOut {\\n    from {\\n        opacity: 1;\\n    }\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"chat_container__pa3zI\",\n\t\"chatBox\": \"chat_chatBox__fgPpZ\",\n\t\"userList\": \"chat_userList__RDyvG\",\n\t\"user\": \"chat_user__48BQj\",\n\t\"selected\": \"chat_selected__vclZP\",\n\t\"onlineIndicator\": \"chat_onlineIndicator__iL8Pk\",\n\t\"online\": \"chat_online__TPalN\",\n\t\"offline\": \"chat_offline__pzO6U\",\n\t\"messageArea\": \"chat_messageArea__M3mY1\",\n\t\"selectedUserInfo\": \"chat_selectedUserInfo__vFQmi\",\n\t\"selectedUserHeader\": \"chat_selectedUserHeader__4Jmcv\",\n\t\"selectedUserName\": \"chat_selectedUserName__9wZf_\",\n\t\"messages\": \"chat_messages__t_G7M\",\n\t\"message\": \"chat_message__1yBaG\",\n\t\"inputContainer\": \"chat_inputContainer__go5CJ\",\n\t\"input\": \"chat_input__Z6q9D\",\n\t\"button\": \"chat_button__GKum9\",\n\t\"userInfo\": \"chat_userInfo__UbdFO\",\n\t\"logoffButton\": \"chat_logoffButton__o_lZK\",\n\t\"popup\": \"chat_popup__bFH2N\",\n\t\"fadeIn\": \"chat_fadeIn__4ZUYl\",\n\t\"fadeOut\": \"chat_fadeOut__hRQMG\",\n\t\"updateButtonContainer\": \"chat_updateButtonContainer__fD7j0\",\n\t\"updateButton\": \"chat_updateButton__r4j2u\",\n\t\"notificationContainer\": \"chat_notificationContainer__F1tYD\",\n\t\"notification\": \"chat_notification__O2PKf\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./styles/chat.module.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fixcsoft%2FDocumentos%2FnestJs%2Fprojeto-ixc-frontend%2Fpages%2Fchat.js&page=%2Fchat!":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fixcsoft%2FDocumentos%2FnestJs%2Fprojeto-ixc-frontend%2Fpages%2Fchat.js&page=%2Fchat! ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/chat\",\n      function () {\n        return __webpack_require__(/*! ./pages/chat.js */ \"./pages/chat.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/chat\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZob21lJTJGaXhjc29mdCUyRkRvY3VtZW50b3MlMkZuZXN0SnMlMkZwcm9qZXRvLWl4Yy1mcm9udGVuZCUyRnBhZ2VzJTJGY2hhdC5qcyZwYWdlPSUyRmNoYXQhIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsd0NBQWlCO0FBQ3hDO0FBQ0E7QUFDQSxPQUFPLElBQVU7QUFDakIsTUFBTSxVQUFVO0FBQ2hCO0FBQ0EsT0FBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz8xNDcwIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvY2hhdFwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vcGFnZXMvY2hhdC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvY2hhdFwiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fixcsoft%2FDocumentos%2FnestJs%2Fprojeto-ixc-frontend%2Fpages%2Fchat.js&page=%2Fchat!\n"));

/***/ }),

/***/ "./styles/chat.module.css":
/*!********************************!*\
  !*** ./styles/chat.module.css ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./chat.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./styles/chat.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./chat.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./styles/chat.module.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./chat.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[7].use[2]!./styles/chat.module.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvY2hhdC5tb2R1bGUuY3NzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsK2VBQW1QOztBQUVyUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0sK2VBQW1QO0FBQ3pQO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsK2VBQW1QOztBQUU3UTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zdHlsZXMvY2hhdC5tb2R1bGUuY3NzPzlmYzkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzddLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbN10udXNlWzJdIS4vY2hhdC5tb2R1bGUuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCeSBkZWZhdWx0LCBzdHlsZS1sb2FkZXIgaW5qZWN0cyBDU1MgaW50byB0aGUgYm90dG9tXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIDxoZWFkPi4gVGhpcyBjYXVzZXMgb3JkZXJpbmcgcHJvYmxlbXMgYmV0d2VlbiBkZXZcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBhbiBhbmNob3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgcGxhY2VkIGJlZm9yZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAgICAgLy8gc3R5bGVzIHdpbGwgYmUgYXBwbGllZCBfYmVmb3JlXyA8c3R5bGUganN4IGdsb2JhbD4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZls3XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzddLnVzZVsyXSEuL2NoYXQubW9kdWxlLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbN10udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZls3XS51c2VbMl0hLi9jaGF0Lm1vZHVsZS5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./styles/chat.module.css\n"));

/***/ }),

/***/ "./pages/chat.js":
/*!***********************!*\
  !*** ./pages/chat.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../styles/chat.module.css */ \"./styles/chat.module.css\");\n/* harmony import */ var _styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _nats_io_nats_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @nats-io/nats-core */ \"./node_modules/@nats-io/nats-core/lib/mod.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst Chat = ()=>{\n    var _users_find, _users_find1;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [users, setUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedUser, setSelectedUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [username, setUsername] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [natsClient, setNatsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [notifications, setNotifications] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const storedUsername = localStorage.getItem('username');\n        const storedUserId = localStorage.getItem('userId');\n        setUsername(storedUsername);\n        setUserId(storedUserId);\n        const connectToNATS = async ()=>{\n            if (!natsClient) {\n                try {\n                    const client = await (0,_nats_io_nats_core__WEBPACK_IMPORTED_MODULE_5__.wsconnect)({\n                        servers: [\n                            'ws://localhost:3222'\n                        ]\n                    });\n                    console.log('Conectado ao NATS:', !client.isClosed());\n                    setNatsClient(client);\n                    client.closed().then(()=>{\n                        console.warn('Conexão com NATS encerrada.');\n                        setNatsClient(null);\n                    });\n                } catch (error) {\n                    console.error('Erro ao conectar ao NATS:', error);\n                }\n            }\n        };\n        connectToNATS();\n        const fetchUsers = async ()=>{\n            try {\n                const response = await axios__WEBPACK_IMPORTED_MODULE_3___default().get('http://localhost:3000/users/getUsers');\n                const onlineUsers = JSON.parse(localStorage.getItem('onlineUsers')) || [];\n                setUsers(response.data.map((user)=>({\n                        ...user,\n                        isOnline: onlineUsers.includes(user._id)\n                    })));\n            } catch (error) {\n                console.error('Erro ao buscar usuários:', error);\n            }\n        };\n        fetchUsers();\n        return ()=>{\n            if (natsClient) {\n                natsClient.close();\n            }\n        };\n    }, [\n        natsClient\n    ]);\n    const handleSelectUser = async (user)=>{\n        if (user) {\n            console.log('Usuário selecionado:', user);\n            setSelectedUser(user._id);\n            await fetchMessages(userId, user._id);\n        } else {\n            console.warn('Usuário inválido selecionado.');\n        }\n    };\n    const fetchMessages = async (userId, selectedUser)=>{\n        if (!natsClient || natsClient.isClosed()) {\n            console.error('Conexão com NATS fechada ou não inicializada.');\n            return;\n        }\n        if (userId && selectedUser) {\n            try {\n                const response = await natsClient.request(userId + '.find', JSON.stringify({\n                    senderId: userId,\n                    recipientId: selectedUser\n                }), {\n                    timeout: 5000\n                });\n                const decodedMessages = response.json();\n                setMessages(decodedMessages);\n            } catch (error) {\n                console.error('Erro ao buscar mensagens:', error);\n            }\n        }\n    };\n    const handleSendMessage = async ()=>{\n        if (inputValue.trim() && selectedUser) {\n            const messageData = {\n                message: inputValue,\n                senderId: userId,\n                recipientId: selectedUser,\n                senderName: username\n            };\n            if (natsClient && !natsClient.isClosed()) {\n                await natsClient.request(selectedUser + '.msg.new', JSON.stringify(messageData));\n                setMessages((prevMessages)=>[\n                        ...prevMessages,\n                        messageData\n                    ]);\n                setInputValue('');\n            } else {\n                console.error('Erro: Cliente NATS não está conectado.');\n            }\n        }\n    };\n    const handleLogoff = async ()=>{\n        localStorage.clear();\n        if (natsClient && !natsClient.isClosed()) {\n            await natsClient.close();\n        }\n        localStorage.clear();\n        router.push('/login');\n    };\n    const removeNotification = (index)=>{\n        setNotifications((prevNotifications)=>prevNotifications.filter((_, i)=>i !== index));\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (natsClient && userId) {\n            const subscription = natsClient.subscribe(userId + '.msg.notify', {\n                callback: async (err, msg)=>{\n                    if (err) {\n                        console.error('Erro no callback NATS:', err);\n                        return;\n                    }\n                    if (msg) {\n                        try {\n                            const decodedMessage = JSON.parse(new TextDecoder().decode(msg.data));\n                            if (decodedMessage.senderId === selectedUser) {\n                                setMessages((prevMessages)=>[\n                                        ...prevMessages,\n                                        decodedMessage\n                                    ]);\n                                setInputValue('');\n                            } else {\n                                setNotifications((prevNotifications)=>[\n                                        ...prevNotifications,\n                                        {\n                                            senderId: decodedMessage.senderId,\n                                            senderName: decodedMessage.senderName,\n                                            message: decodedMessage.message\n                                        }\n                                    ]);\n                            }\n                        } catch (decodeError) {\n                            console.error('Erro ao decodificar a mensagem:', decodeError);\n                        }\n                    } else {\n                        console.warn('Mensagem recebida é nula ou indefinida.');\n                    }\n                }\n            });\n            return ()=>{\n                if (subscription) {\n                    subscription.unsubscribe();\n                }\n            };\n        }\n    }, [\n        natsClient,\n        userId,\n        selectedUser\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().container),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().chatBox),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().userList),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                children: \"Usu\\xe1rios\"\n                            }, void 0, false, {\n                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                lineNumber: 176,\n                                columnNumber: 21\n                            }, undefined),\n                            users.map((user)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"\".concat((_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().user), \" \").concat(selectedUser === user._id ? (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().selected) : ''),\n                                    onClick: ()=>handleSelectUser(user),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"\".concat((_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().onlineIndicator), \" \").concat(user.isOnline ? (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().online) : (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().offline))\n                                        }, void 0, false, {\n                                            fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                            lineNumber: 183,\n                                            columnNumber: 29\n                                        }, undefined),\n                                        user.name\n                                    ]\n                                }, user._id, true, {\n                                    fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                    lineNumber: 178,\n                                    columnNumber: 25\n                                }, undefined))\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                        lineNumber: 175,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().messageArea),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().selectedUserInfo),\n                                children: selectedUser ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().selectedUserHeader),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"\".concat((_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().onlineIndicator), \" \").concat(((_users_find = users.find((user)=>user._id === selectedUser)) === null || _users_find === void 0 ? void 0 : _users_find.isOnline) ? (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().online) : (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().offline))\n                                        }, void 0, false, {\n                                            fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                            lineNumber: 196,\n                                            columnNumber: 33\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().selectedUserName),\n                                            children: (_users_find1 = users.find((user)=>user._id === selectedUser)) === null || _users_find1 === void 0 ? void 0 : _users_find1.name\n                                        }, void 0, false, {\n                                            fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                            lineNumber: 203,\n                                            columnNumber: 33\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                    lineNumber: 195,\n                                    columnNumber: 29\n                                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    children: \"Chat\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                    lineNumber: 208,\n                                    columnNumber: 29\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                lineNumber: 193,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().messages),\n                                children: messages.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: \"Nenhuma mensagem encontrada.\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                    lineNumber: 213,\n                                    columnNumber: 29\n                                }, undefined) : messages.map((message, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().message),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                children: [\n                                                    message.senderName,\n                                                    \":\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                                lineNumber: 217,\n                                                columnNumber: 37\n                                            }, undefined),\n                                            \" \",\n                                            message.message\n                                        ]\n                                    }, index, true, {\n                                        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                        lineNumber: 216,\n                                        columnNumber: 33\n                                    }, undefined))\n                            }, void 0, false, {\n                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                lineNumber: 211,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().inputContainer),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        value: inputValue,\n                                        onChange: (e)=>setInputValue(e.target.value),\n                                        placeholder: \"Digite sua mensagem...\",\n                                        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().input)\n                                    }, void 0, false, {\n                                        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                        lineNumber: 223,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: handleSendMessage,\n                                        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().button),\n                                        children: \"Enviar\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                        lineNumber: 230,\n                                        columnNumber: 25\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                lineNumber: 222,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                        lineNumber: 192,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().userInfo),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: username\n                            }, void 0, false, {\n                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                lineNumber: 236,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>router.push('/update'),\n                                className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().updateButton),\n                                children: \"Alterar\"\n                            }, void 0, false, {\n                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                lineNumber: 237,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().updateButtonContainer),\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handleLogoff,\n                                    className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().logoffButton),\n                                    children: \"Logoff\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                    lineNumber: 241,\n                                    columnNumber: 25\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                                lineNumber: 240,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                        lineNumber: 235,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                lineNumber: 174,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().notificationContainer),\n                children: notifications.map((notif, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_chat_module_css__WEBPACK_IMPORTED_MODULE_4___default().notification),\n                        onClick: ()=>removeNotification(index),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                            children: \"mensagem nova de \" + notif.senderName\n                        }, void 0, false, {\n                            fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                            lineNumber: 254,\n                            columnNumber: 25\n                        }, undefined)\n                    }, index, false, {\n                        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                        lineNumber: 249,\n                        columnNumber: 21\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n                lineNumber: 247,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/ixcsoft/Documentos/nestJs/projeto-ixc-frontend/pages/chat.js\",\n        lineNumber: 173,\n        columnNumber: 9\n    }, undefined);\n};\n_s(Chat, \"74ovY2iH1w44ZXEG3HAx22GoyE8=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = Chat;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Chat);\nvar _c;\n$RefreshReg$(_c, \"Chat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/chat.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/tweetnacl/nacl.js":
/*!****************************************!*\
  !*** ./node_modules/tweetnacl/nacl.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar u64 = function(h, l) { this.hi = h|0 >>> 0; this.lo = l|0 >>> 0; };\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction L32(x, c) { return (x << c) | (x >>> (32 - c)); }\n\nfunction ld32(x, i) {\n  var u = x[i+3] & 0xff;\n  u = (u<<8)|(x[i+2] & 0xff);\n  u = (u<<8)|(x[i+1] & 0xff);\n  return (u<<8)|(x[i+0] & 0xff);\n}\n\nfunction dl64(x, i) {\n  var h = (x[i] << 24) | (x[i+1] << 16) | (x[i+2] << 8) | x[i+3];\n  var l = (x[i+4] << 24) | (x[i+5] << 16) | (x[i+6] << 8) | x[i+7];\n  return new u64(h, l);\n}\n\nfunction st32(x, j, u) {\n  var i;\n  for (i = 0; i < 4; i++) { x[j+i] = u & 255; u >>>= 8; }\n}\n\nfunction ts64(x, i, u) {\n  x[i]   = (u.hi >> 24) & 0xff;\n  x[i+1] = (u.hi >> 16) & 0xff;\n  x[i+2] = (u.hi >>  8) & 0xff;\n  x[i+3] = u.hi & 0xff;\n  x[i+4] = (u.lo >> 24)  & 0xff;\n  x[i+5] = (u.lo >> 16)  & 0xff;\n  x[i+6] = (u.lo >>  8)  & 0xff;\n  x[i+7] = u.lo & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core(out,inp,k,c,h) {\n  var w = new Uint32Array(16), x = new Uint32Array(16),\n      y = new Uint32Array(16), t = new Uint32Array(4);\n  var i, j, m;\n\n  for (i = 0; i < 4; i++) {\n    x[5*i] = ld32(c, 4*i);\n    x[1+i] = ld32(k, 4*i);\n    x[6+i] = ld32(inp, 4*i);\n    x[11+i] = ld32(k, 16+4*i);\n  }\n\n  for (i = 0; i < 16; i++) y[i] = x[i];\n\n  for (i = 0; i < 20; i++) {\n    for (j = 0; j < 4; j++) {\n      for (m = 0; m < 4; m++) t[m] = x[(5*j+4*m)%16];\n      t[1] ^= L32((t[0]+t[3])|0, 7);\n      t[2] ^= L32((t[1]+t[0])|0, 9);\n      t[3] ^= L32((t[2]+t[1])|0,13);\n      t[0] ^= L32((t[3]+t[2])|0,18);\n      for (m = 0; m < 4; m++) w[4*j+(j+m)%4] = t[m];\n    }\n    for (m = 0; m < 16; m++) x[m] = w[m];\n  }\n\n  if (h) {\n    for (i = 0; i < 16; i++) x[i] = (x[i] + y[i]) | 0;\n    for (i = 0; i < 4; i++) {\n      x[5*i] = (x[5*i] - ld32(c, 4*i)) | 0;\n      x[6+i] = (x[6+i] - ld32(inp, 4*i)) | 0;\n    }\n    for (i = 0; i < 4; i++) {\n      st32(out,4*i,x[5*i]);\n      st32(out,16+4*i,x[6+i]);\n    }\n  } else {\n    for (i = 0; i < 16; i++) st32(out, 4 * i, (x[i] + y[i]) | 0);\n  }\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core(out,inp,k,c,false);\n  return 0;\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core(out,inp,k,c,true);\n  return 0;\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  if (!b) return 0;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    if (m) mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,d,n,k) {\n  return crypto_stream_salsa20_xor(c,cpos,null,0,d,n,k);\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20(c,cpos,d,n.subarray(16),s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,n.subarray(16),s);\n}\n\nfunction add1305(h, c) {\n  var j, u = 0;\n  for (j = 0; j < 17; j++) {\n    u = (u + ((h[j] + c[j]) | 0)) | 0;\n    h[j] = u & 255;\n    u >>>= 8;\n  }\n}\n\nvar minusp = new Uint32Array([\n  5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252\n]);\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s, i, j, u;\n  var x = new Uint32Array(17), r = new Uint32Array(17),\n      h = new Uint32Array(17), c = new Uint32Array(17),\n      g = new Uint32Array(17);\n  for (j = 0; j < 17; j++) r[j]=h[j]=0;\n  for (j = 0; j < 16; j++) r[j]=k[j];\n  r[3]&=15;\n  r[4]&=252;\n  r[7]&=15;\n  r[8]&=252;\n  r[11]&=15;\n  r[12]&=252;\n  r[15]&=15;\n\n  while (n > 0) {\n    for (j = 0; j < 17; j++) c[j] = 0;\n    for (j = 0; (j < 16) && (j < n); ++j) c[j] = m[mpos+j];\n    c[j] = 1;\n    mpos += j; n -= j;\n    add1305(h,c);\n    for (i = 0; i < 17; i++) {\n      x[i] = 0;\n      for (j = 0; j < 17; j++) x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j])|0))) | 0) | 0;\n    }\n    for (i = 0; i < 17; i++) h[i] = x[i];\n    u = 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u & 3;\n    u = (5 * (u >>> 2)) | 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u;\n  }\n\n  for (j = 0; j < 17; j++) g[j] = h[j];\n  add1305(h,minusp);\n  s = (-(h[16] >>> 7) | 0);\n  for (j = 0; j < 17; j++) h[j] ^= s & (g[j] ^ h[j]);\n\n  for (j = 0; j < 16; j++) c[j] = k[j + 16];\n  c[16] = 0;\n  add1305(h,c);\n  for (j = 0; j < 16; j++) out[outpos+j] = h[j];\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var c;\n  var i;\n  for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n  }\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n}\n\nfunction Z(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n}\n\nfunction M(o, a, b) {\n  var i, j, t = new Float64Array(31);\n  for (i = 0; i < 31; i++) t[i] = 0;\n  for (i = 0; i < 16; i++) {\n    for (j = 0; j < 16; j++) {\n      t[i+j] += a[i] * b[j];\n    }\n  }\n  for (i = 0; i < 15; i++) {\n    t[i] += 38 * t[i+16];\n  }\n  for (i = 0; i < 16; i++) o[i] = t[i];\n  car25519(o);\n  car25519(o);\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nfunction add64() {\n  var a = 0, b = 0, c = 0, d = 0, m16 = 65535, l, h, i;\n  for (i = 0; i < arguments.length; i++) {\n    l = arguments[i].lo;\n    h = arguments[i].hi;\n    a += (l & m16); b += (l >>> 16);\n    c += (h & m16); d += (h >>> 16);\n  }\n\n  b += (a >>> 16);\n  c += (b >>> 16);\n  d += (c >>> 16);\n\n  return new u64((c & m16) | (d << 16), (a & m16) | (b << 16));\n}\n\nfunction shr64(x, c) {\n  return new u64((x.hi >>> c), (x.lo >>> c) | (x.hi << (32 - c)));\n}\n\nfunction xor64() {\n  var l = 0, h = 0, i;\n  for (i = 0; i < arguments.length; i++) {\n    l ^= arguments[i].lo;\n    h ^= arguments[i].hi;\n  }\n  return new u64(h, l);\n}\n\nfunction R(x, c) {\n  var h, l, c1 = 32 - c;\n  if (c < 32) {\n    h = (x.hi >>> c) | (x.lo << c1);\n    l = (x.lo >>> c) | (x.hi << c1);\n  } else if (c < 64) {\n    h = (x.lo >>> c) | (x.hi << c1);\n    l = (x.hi >>> c) | (x.lo << c1);\n  }\n  return new u64(h, l);\n}\n\nfunction Ch(x, y, z) {\n  var h = (x.hi & y.hi) ^ (~x.hi & z.hi),\n      l = (x.lo & y.lo) ^ (~x.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Maj(x, y, z) {\n  var h = (x.hi & y.hi) ^ (x.hi & z.hi) ^ (y.hi & z.hi),\n      l = (x.lo & y.lo) ^ (x.lo & z.lo) ^ (y.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Sigma0(x) { return xor64(R(x,28), R(x,34), R(x,39)); }\nfunction Sigma1(x) { return xor64(R(x,14), R(x,18), R(x,41)); }\nfunction sigma0(x) { return xor64(R(x, 1), R(x, 8), shr64(x,7)); }\nfunction sigma1(x) { return xor64(R(x,19), R(x,61), shr64(x,6)); }\n\nvar K = [\n  new u64(0x428a2f98, 0xd728ae22), new u64(0x71374491, 0x23ef65cd),\n  new u64(0xb5c0fbcf, 0xec4d3b2f), new u64(0xe9b5dba5, 0x8189dbbc),\n  new u64(0x3956c25b, 0xf348b538), new u64(0x59f111f1, 0xb605d019),\n  new u64(0x923f82a4, 0xaf194f9b), new u64(0xab1c5ed5, 0xda6d8118),\n  new u64(0xd807aa98, 0xa3030242), new u64(0x12835b01, 0x45706fbe),\n  new u64(0x243185be, 0x4ee4b28c), new u64(0x550c7dc3, 0xd5ffb4e2),\n  new u64(0x72be5d74, 0xf27b896f), new u64(0x80deb1fe, 0x3b1696b1),\n  new u64(0x9bdc06a7, 0x25c71235), new u64(0xc19bf174, 0xcf692694),\n  new u64(0xe49b69c1, 0x9ef14ad2), new u64(0xefbe4786, 0x384f25e3),\n  new u64(0x0fc19dc6, 0x8b8cd5b5), new u64(0x240ca1cc, 0x77ac9c65),\n  new u64(0x2de92c6f, 0x592b0275), new u64(0x4a7484aa, 0x6ea6e483),\n  new u64(0x5cb0a9dc, 0xbd41fbd4), new u64(0x76f988da, 0x831153b5),\n  new u64(0x983e5152, 0xee66dfab), new u64(0xa831c66d, 0x2db43210),\n  new u64(0xb00327c8, 0x98fb213f), new u64(0xbf597fc7, 0xbeef0ee4),\n  new u64(0xc6e00bf3, 0x3da88fc2), new u64(0xd5a79147, 0x930aa725),\n  new u64(0x06ca6351, 0xe003826f), new u64(0x14292967, 0x0a0e6e70),\n  new u64(0x27b70a85, 0x46d22ffc), new u64(0x2e1b2138, 0x5c26c926),\n  new u64(0x4d2c6dfc, 0x5ac42aed), new u64(0x53380d13, 0x9d95b3df),\n  new u64(0x650a7354, 0x8baf63de), new u64(0x766a0abb, 0x3c77b2a8),\n  new u64(0x81c2c92e, 0x47edaee6), new u64(0x92722c85, 0x1482353b),\n  new u64(0xa2bfe8a1, 0x4cf10364), new u64(0xa81a664b, 0xbc423001),\n  new u64(0xc24b8b70, 0xd0f89791), new u64(0xc76c51a3, 0x0654be30),\n  new u64(0xd192e819, 0xd6ef5218), new u64(0xd6990624, 0x5565a910),\n  new u64(0xf40e3585, 0x5771202a), new u64(0x106aa070, 0x32bbd1b8),\n  new u64(0x19a4c116, 0xb8d2d0c8), new u64(0x1e376c08, 0x5141ab53),\n  new u64(0x2748774c, 0xdf8eeb99), new u64(0x34b0bcb5, 0xe19b48a8),\n  new u64(0x391c0cb3, 0xc5c95a63), new u64(0x4ed8aa4a, 0xe3418acb),\n  new u64(0x5b9cca4f, 0x7763e373), new u64(0x682e6ff3, 0xd6b2b8a3),\n  new u64(0x748f82ee, 0x5defb2fc), new u64(0x78a5636f, 0x43172f60),\n  new u64(0x84c87814, 0xa1f0ab72), new u64(0x8cc70208, 0x1a6439ec),\n  new u64(0x90befffa, 0x23631e28), new u64(0xa4506ceb, 0xde82bde9),\n  new u64(0xbef9a3f7, 0xb2c67915), new u64(0xc67178f2, 0xe372532b),\n  new u64(0xca273ece, 0xea26619c), new u64(0xd186b8c7, 0x21c0c207),\n  new u64(0xeada7dd6, 0xcde0eb1e), new u64(0xf57d4f7f, 0xee6ed178),\n  new u64(0x06f067aa, 0x72176fba), new u64(0x0a637dc5, 0xa2c898a6),\n  new u64(0x113f9804, 0xbef90dae), new u64(0x1b710b35, 0x131c471b),\n  new u64(0x28db77f5, 0x23047d84), new u64(0x32caab7b, 0x40c72493),\n  new u64(0x3c9ebe0a, 0x15c9bebc), new u64(0x431d67c4, 0x9c100d4c),\n  new u64(0x4cc5d4be, 0xcb3e42b6), new u64(0x597f299c, 0xfc657e2a),\n  new u64(0x5fcb6fab, 0x3ad6faec), new u64(0x6c44198c, 0x4a475817)\n];\n\nfunction crypto_hashblocks(x, m, n) {\n  var z = [], b = [], a = [], w = [], t, i, j;\n\n  for (i = 0; i < 8; i++) z[i] = a[i] = dl64(x, 8*i);\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) w[i] = dl64(m, 8*i+pos);\n    for (i = 0; i < 80; i++) {\n      for (j = 0; j < 8; j++) b[j] = a[j];\n      t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i%16]);\n      b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));\n      b[3] = add64(b[3], t);\n      for (j = 0; j < 8; j++) a[(j+1)%8] = b[j];\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          w[j] = add64(w[j], w[(j+9)%16], sigma0(w[(j+1)%16]), sigma1(w[(j+14)%16]));\n        }\n      }\n    }\n\n    for (i = 0; i < 8; i++) {\n      a[i] = add64(a[i], z[i]);\n      z[i] = a[i];\n    }\n\n    pos += 128;\n    n -= 128;\n  }\n\n  for (i = 0; i < 8; i++) ts64(x, 8*i, z[i]);\n  return n;\n}\n\nvar iv = new Uint8Array([\n  0x6a,0x09,0xe6,0x67,0xf3,0xbc,0xc9,0x08,\n  0xbb,0x67,0xae,0x85,0x84,0xca,0xa7,0x3b,\n  0x3c,0x6e,0xf3,0x72,0xfe,0x94,0xf8,0x2b,\n  0xa5,0x4f,0xf5,0x3a,0x5f,0x1d,0x36,0xf1,\n  0x51,0x0e,0x52,0x7f,0xad,0xe6,0x82,0xd1,\n  0x9b,0x05,0x68,0x8c,0x2b,0x3e,0x6c,0x1f,\n  0x1f,0x83,0xd9,0xab,0xfb,0x41,0xbd,0x6b,\n  0x5b,0xe0,0xcd,0x19,0x13,0x7e,0x21,0x79\n]);\n\nfunction crypto_hash(out, m, n) {\n  var h = new Uint8Array(64), x = new Uint8Array(256);\n  var i, b = n;\n\n  for (i = 0; i < 64; i++) h[i] = iv[i];\n\n  crypto_hashblocks(h, m, n);\n  n %= 128;\n\n  for (i = 0; i < 256; i++) x[i] = 0;\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8, new u64((b / 0x20000000) | 0, b << 3));\n  crypto_hashblocks(h, x, n);\n\n  for (i = 0; i < 64; i++) out[i] = h[i];\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(/*! crypto */ \"?5ddf\");\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/tweetnacl/nacl.js\n"));

/***/ }),

/***/ "?5ddf":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* (ignored) */

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["pages/_app","main"], () => (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fixcsoft%2FDocumentos%2FnestJs%2Fprojeto-ixc-frontend%2Fpages%2Fchat.js&page=%2Fchat!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);