"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/chat",{

/***/ "./connection.js":
/*!***********************!*\
  !*** ./connection.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToNATS: () => (/* binding */ connectToNATS),\n/* harmony export */   getNatsClient: () => (/* binding */ getNatsClient)\n/* harmony export */ });\n/* harmony import */ var _nats_io_nats_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @nats-io/nats-core */ \"./node_modules/@nats-io/nats-core/lib/mod.js\");\n// natsConnection.js\n\nlet natsClient = null;\nconst connectToNATS = async ()=>{\n    if (!natsClient) {\n        try {\n            const client = await (0,_nats_io_nats_core__WEBPACK_IMPORTED_MODULE_0__.wsconnect)({\n                servers: [\n                    'ws://localhost:3222'\n                ]\n            });\n            console.log('Conectado ao NATS:', !client.isClosed());\n            natsClient = client;\n            client.closed().then(()=>{\n                console.warn('ConexÃ£o com NATS encerrada.');\n                natsClient = null;\n            });\n        } catch (error) {\n            console.error('Erro ao conectar ao NATS:', error);\n        }\n    }\n    return natsClient;\n};\nconst getNatsClient = ()=>{\n    return natsClient;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25uZWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9CQUFvQjtBQUMyQjtBQUUvQyxJQUFJQyxhQUFhO0FBRVYsTUFBTUMsZ0JBQWdCO0lBQzNCLElBQUksQ0FBQ0QsWUFBWTtRQUNmLElBQUk7WUFDRixNQUFNRSxTQUFTLE1BQU1ILDZEQUFTQSxDQUFDO2dCQUFFSSxTQUFTO29CQUFDO2lCQUFzQjtZQUFDO1lBQ2xFQyxRQUFRQyxHQUFHLENBQUMsc0JBQXNCLENBQUNILE9BQU9JLFFBQVE7WUFDbEROLGFBQWFFO1lBRWJBLE9BQU9LLE1BQU0sR0FBR0MsSUFBSSxDQUFDO2dCQUNuQkosUUFBUUssSUFBSSxDQUFDO2dCQUNiVCxhQUFhO1lBQ2Y7UUFDRixFQUFFLE9BQU9VLE9BQU87WUFDZE4sUUFBUU0sS0FBSyxDQUFDLDZCQUE2QkE7UUFDN0M7SUFDRjtJQUNBLE9BQU9WO0FBQ1QsRUFBRTtBQUVLLE1BQU1XLGdCQUFnQjtJQUMzQixPQUFPWDtBQUNULEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29ubmVjdGlvbi5qcz9jZGIwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIG5hdHNDb25uZWN0aW9uLmpzXG5pbXBvcnQgeyB3c2Nvbm5lY3QgfSBmcm9tICdAbmF0cy1pby9uYXRzLWNvcmUnO1xuXG5sZXQgbmF0c0NsaWVudCA9IG51bGw7XG5cbmV4cG9ydCBjb25zdCBjb25uZWN0VG9OQVRTID0gYXN5bmMgKCkgPT4ge1xuICBpZiAoIW5hdHNDbGllbnQpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY2xpZW50ID0gYXdhaXQgd3Njb25uZWN0KHsgc2VydmVyczogWyd3czovL2xvY2FsaG9zdDozMjIyJ10gfSk7XG4gICAgICBjb25zb2xlLmxvZygnQ29uZWN0YWRvIGFvIE5BVFM6JywgIWNsaWVudC5pc0Nsb3NlZCgpKTtcbiAgICAgIG5hdHNDbGllbnQgPSBjbGllbnQ7XG5cbiAgICAgIGNsaWVudC5jbG9zZWQoKS50aGVuKCgpID0+IHtcbiAgICAgICAgY29uc29sZS53YXJuKCdDb25leMOjbyBjb20gTkFUUyBlbmNlcnJhZGEuJyk7XG4gICAgICAgIG5hdHNDbGllbnQgPSBudWxsO1xuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gY29uZWN0YXIgYW8gTkFUUzonLCBlcnJvcik7XG4gICAgfVxuICB9XG4gIHJldHVybiBuYXRzQ2xpZW50O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE5hdHNDbGllbnQgPSAoKSA9PiB7XG4gIHJldHVybiBuYXRzQ2xpZW50O1xufTtcbiJdLCJuYW1lcyI6WyJ3c2Nvbm5lY3QiLCJuYXRzQ2xpZW50IiwiY29ubmVjdFRvTkFUUyIsImNsaWVudCIsInNlcnZlcnMiLCJjb25zb2xlIiwibG9nIiwiaXNDbG9zZWQiLCJjbG9zZWQiLCJ0aGVuIiwid2FybiIsImVycm9yIiwiZ2V0TmF0c0NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./connection.js\n"));

/***/ })

});